static const short _lexer_actions[] = {
	0, 1, 0, 1, 1, 1, 2, 1, 
	221, 1, 222, 1, 223, 1, 224, 1, 
	225, 1, 226, 1, 227, 1, 228, 1, 
	229, 1, 230, 1, 231, 1, 232, 1, 
	233, 1, 234, 1, 235, 1, 236, 1, 
	237, 1, 238, 1, 239, 1, 240, 1, 
	241, 1, 242, 1, 243, 1, 244, 1, 
	245, 1, 246, 1, 247, 1, 248, 1, 
	249, 1, 250, 1, 251, 1, 252, 1, 
	253, 1, 254, 1, 255, 1, 256, 1, 
	257, 1, 258, 1, 259, 1, 260, 1, 
	261, 1, 262, 1, 263, 1, 264, 1, 
	265, 1, 266, 1, 267, 1, 268, 1, 
	269, 1, 270, 1, 271, 1, 272, 1, 
	273, 1, 274, 1, 275, 1, 276, 1, 
	277, 1, 278, 1, 279, 1, 280, 1, 
	281, 1, 282, 1, 283, 1, 284, 1, 
	285, 1, 286, 1, 287, 1, 288, 1, 
	289, 1, 290, 1, 291, 1, 292, 1, 
	293, 1, 294, 1, 295, 1, 296, 1, 
	297, 1, 298, 1, 299, 1, 300, 1, 
	301, 1, 302, 1, 303, 1, 304, 1, 
	305, 1, 306, 1, 307, 1, 308, 1, 
	309, 1, 310, 1, 311, 1, 312, 1, 
	313, 1, 314, 1, 315, 1, 316, 1, 
	317, 1, 318, 1, 319, 1, 320, 1, 
	321, 1, 322, 1, 323, 1, 324, 1, 
	325, 1, 326, 1, 327, 1, 328, 1, 
	329, 1, 330, 1, 331, 1, 332, 1, 
	333, 1, 334, 1, 335, 1, 336, 1, 
	337, 1, 338, 1, 339, 1, 340, 1, 
	341, 1, 342, 1, 343, 1, 344, 1, 
	345, 1, 346, 1, 347, 1, 348, 1, 
	349, 1, 350, 1, 351, 1, 352, 1, 
	353, 1, 354, 1, 355, 1, 356, 1, 
	357, 1, 358, 1, 359, 1, 360, 1, 
	361, 1, 362, 1, 363, 1, 364, 1, 
	365, 1, 366, 1, 367, 1, 368, 1, 
	369, 1, 370, 1, 371, 1, 372, 1, 
	373, 1, 374, 1, 375, 1, 376, 2, 
	2, 3, 2, 2, 4, 2, 2, 5, 
	2, 2, 6, 2, 2, 7, 2, 2, 
	8, 2, 2, 9, 2, 2, 10, 2, 
	2, 11, 2, 2, 12, 2, 2, 13, 
	2, 2, 14, 2, 2, 15, 2, 2, 
	16, 2, 2, 17, 2, 2, 18, 2, 
	2, 19, 2, 2, 20, 2, 2, 21, 
	2, 2, 22, 2, 2, 23, 2, 2, 
	24, 2, 2, 25, 2, 2, 26, 2, 
	2, 27, 2, 2, 28, 2, 2, 29, 
	2, 2, 30, 2, 2, 31, 2, 2, 
	32, 2, 2, 33, 2, 2, 34, 2, 
	2, 35, 2, 2, 36, 2, 2, 37, 
	2, 2, 38, 2, 2, 39, 2, 2, 
	40, 2, 2, 41, 2, 2, 42, 2, 
	2, 43, 2, 2, 44, 2, 2, 45, 
	2, 2, 46, 2, 2, 47, 2, 2, 
	48, 2, 2, 49, 2, 2, 50, 2, 
	2, 51, 2, 2, 52, 2, 2, 53, 
	2, 2, 54, 2, 2, 55, 2, 2, 
	56, 2, 2, 57, 2, 2, 58, 2, 
	2, 59, 2, 2, 60, 2, 2, 61, 
	2, 2, 62, 2, 2, 63, 2, 2, 
	64, 2, 2, 65, 2, 2, 66, 2, 
	2, 67, 2, 2, 68, 2, 2, 69, 
	2, 2, 70, 2, 2, 71, 2, 2, 
	72, 2, 2, 73, 2, 2, 74, 2, 
	2, 75, 2, 2, 76, 2, 2, 77, 
	2, 2, 78, 2, 2, 79, 2, 2, 
	80, 2, 2, 81, 2, 2, 82, 2, 
	2, 83, 2, 2, 84, 2, 2, 85, 
	2, 2, 86, 2, 2, 87, 2, 2, 
	88, 2, 2, 89, 2, 2, 90, 2, 
	2, 91, 2, 2, 92, 2, 2, 93, 
	2, 2, 94, 2, 2, 95, 2, 2, 
	96, 2, 2, 97, 2, 2, 98, 2, 
	2, 99, 2, 2, 100, 2, 2, 101, 
	2, 2, 102, 2, 2, 103, 2, 2, 
	104, 2, 2, 105, 2, 2, 106, 2, 
	2, 107, 2, 2, 108, 2, 2, 109, 
	2, 2, 110, 2, 2, 111, 2, 2, 
	112, 2, 2, 113, 2, 2, 114, 2, 
	2, 115, 2, 2, 116, 2, 2, 117, 
	2, 2, 118, 2, 2, 119, 2, 2, 
	120, 2, 2, 121, 2, 2, 122, 2, 
	2, 123, 2, 2, 124, 2, 2, 125, 
	2, 2, 126, 2, 2, 127, 2, 2, 
	128, 2, 2, 129, 2, 2, 130, 2, 
	2, 131, 2, 2, 132, 2, 2, 133, 
	2, 2, 134, 2, 2, 135, 2, 2, 
	136, 2, 2, 137, 2, 2, 138, 2, 
	2, 139, 2, 2, 140, 2, 2, 141, 
	2, 2, 142, 2, 2, 143, 2, 2, 
	144, 2, 2, 145, 2, 2, 146, 2, 
	2, 147, 2, 2, 148, 2, 2, 149, 
	2, 2, 150, 2, 2, 151, 2, 2, 
	152, 2, 2, 153, 2, 2, 154, 2, 
	2, 155, 2, 2, 156, 2, 2, 157, 
	2, 2, 158, 2, 2, 159, 2, 2, 
	160, 2, 2, 161, 2, 2, 162, 2, 
	2, 163, 2, 2, 164, 2, 2, 165, 
	2, 2, 166, 2, 2, 167, 2, 2, 
	168, 2, 2, 169, 2, 2, 170, 2, 
	2, 171, 2, 2, 172, 2, 2, 173, 
	2, 2, 174, 2, 2, 175, 2, 2, 
	176, 2, 2, 177, 2, 2, 178, 2, 
	2, 179, 2, 2, 180, 2, 2, 181, 
	2, 2, 182, 2, 2, 183, 2, 2, 
	184, 2, 2, 185, 2, 2, 186, 2, 
	2, 187, 2, 2, 188, 2, 2, 189, 
	2, 2, 190, 2, 2, 191, 2, 2, 
	192, 2, 2, 193, 2, 2, 194, 2, 
	2, 195, 2, 2, 196, 2, 2, 197, 
	2, 2, 198, 2, 2, 199, 2, 2, 
	200, 2, 2, 201, 2, 2, 202, 2, 
	2, 203, 2, 2, 204, 2, 2, 205, 
	2, 2, 206, 2, 2, 207, 2, 2, 
	208, 2, 2, 209, 2, 2, 210, 2, 
	2, 211, 2, 2, 212, 2, 2, 213, 
	2, 2, 214, 2, 2, 215, 2, 2, 
	216, 2, 2, 217, 2, 2, 218, 2, 
	2, 219, 2, 2, 220
};
static const short _lexer_cond_offsets[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 5, 8, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 12, 12, 12, 12, 12, 
	12, 12, 12, 17, 21, 28, 35, 42, 
	49, 56, 63, 70, 77, 84, 91, 98, 
	105, 112, 119, 126, 133, 140, 147, 154, 
	161, 168, 175, 182, 189, 196, 203, 210, 
	217, 224, 231, 238, 245, 252, 259, 266, 
	273, 280, 287, 294, 301, 308, 315, 322, 
	329, 336, 343, 350, 357, 364, 371, 378, 
	385, 392, 399, 406, 413, 420, 427, 434, 
	441, 448, 455, 462, 469, 476, 483, 490, 
	497, 504, 511, 518, 525, 532, 539, 546, 
	553, 560, 567, 574, 581, 588, 595, 602, 
	609, 616, 623, 630, 637, 644, 651, 658, 
	665, 672, 679, 686, 693, 700, 707, 714, 
	721, 728, 735, 742, 749, 756, 763, 770, 
	777, 784, 791, 798, 805, 812, 819, 826, 
	833, 840, 847, 854, 861, 868, 875, 882, 
	889, 896, 903, 910, 917, 924, 931, 938, 
	945, 952, 959, 966, 973, 980, 987, 994, 
	1001, 1008, 1015, 1022, 1029, 1036, 1043, 1050, 
	1057, 1064, 1071, 1078, 1085, 1092, 1099, 1106, 
	1113, 1120, 1127, 1134, 1141, 1148, 1155, 1162, 
	1169, 1176, 1183, 1190, 1197, 1204, 1211, 1218, 
	1225, 1232, 1239, 1246, 1253, 1260, 1267, 1274, 
	1281, 1288, 1295, 1302, 1309, 1316, 1323, 1330, 
	1337, 1344, 1351, 1358, 1365, 1372, 1379, 1386, 
	1393, 1400, 1407, 1414, 1421, 1428, 1435, 1442, 
	1449, 1456, 1463, 1470, 1477, 1484, 1491, 1498, 
	1505, 1512, 1519, 1526, 1533, 1540, 1547, 1554, 
	1561, 1568, 1575, 1582, 1589, 1596, 1603, 1610, 
	1617, 1624, 1631, 1638, 1645, 1652, 1659, 1666, 
	1673, 1680, 1687, 1694, 1701, 1708, 1715, 1722, 
	1729, 1736, 1743, 1750, 1757, 1764, 1771, 1778, 
	1785, 1792, 1799, 1806, 1813, 1820, 1827, 1834, 
	1841, 1848, 1855, 1862, 1869
};
static const char _lexer_cond_lengths[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 5, 3, 4, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 5, 4, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7
};
static const short _lexer_cond_keys[] = {
	9, 9, 32, 32, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 58, 58, 
	46, 46, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 65, 90, 95, 95, 
	97, 122, 48, 57, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	9, 9, 32, 32, 48, 57, 58, 58, 
	65, 90, 95, 95, 97, 122, 9, 9, 
	32, 32, 48, 57, 58, 58, 65, 90, 
	95, 95, 97, 122, 9, 9, 32, 32, 
	48, 57, 58, 58, 65, 90, 95, 95, 
	97, 122, 9, 9, 32, 32, 48, 57, 
	58, 58, 65, 90, 95, 95, 97, 122, 
	0
};
static const char _lexer_cond_spaces[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0
};
static const short _lexer_key_offsets[] = {
	0, 0, 2, 5, 19, 21, 26, 31, 
	33, 38, 40, 45, 49, 54, 59, 61, 
	66, 74, 80, 88, 90, 92, 94, 96, 
	98, 100, 102, 104, 106, 108, 110, 114, 
	116, 118, 120, 127, 135, 142, 145, 283, 
	284, 290, 293, 295, 296, 310, 311, 325, 
	337, 345, 353, 363, 369, 370, 373, 374, 
	376, 377, 396, 403, 411, 422, 430, 441, 
	450, 459, 468, 477, 486, 495, 504, 518, 
	526, 537, 546, 555, 564, 573, 582, 598, 
	607, 616, 623, 634, 643, 652, 661, 670, 
	678, 691, 700, 709, 717, 726, 735, 744, 
	753, 773, 782, 798, 825, 834, 843, 852, 
	861, 870, 879, 888, 897, 906, 915, 924, 
	933, 942, 951, 960, 969, 978, 987, 995, 
	1003, 1019, 1028, 1039, 1048, 1059, 1068, 1077, 
	1086, 1095, 1104, 1113, 1122, 1131, 1140, 1151, 
	1160, 1169, 1178, 1190, 1199, 1208, 1217, 1226, 
	1235, 1244, 1253, 1262, 1271, 1280, 1292, 1301, 
	1310, 1318, 1343, 1352, 1361, 1372, 1381, 1390, 
	1399, 1408, 1417, 1426, 1442, 1451, 1460, 1469, 
	1478, 1487, 1496, 1505, 1514, 1523, 1534, 1545, 
	1554, 1563, 1572, 1581, 1592, 1603, 1614, 1632, 
	1647, 1660, 1669, 1678, 1691, 1702, 1711, 1720, 
	1729, 1738, 1747, 1756, 1765, 1774, 1783, 1794, 
	1803, 1816, 1827, 1836, 1847, 1856, 1865, 1876, 
	1885, 1902, 1911, 1920, 1929, 1938, 1947, 1956, 
	1971, 1980, 1989, 1998, 2007, 2016, 2033, 2044, 
	2053, 2062, 2071, 2080, 2089, 2102, 2111, 2122, 
	2133, 2142, 2153, 2162, 2171, 2183, 2192, 2201, 
	2218, 2227, 2236, 2245, 2254, 2263, 2272, 2283, 
	2292, 2301, 2310, 2321, 2330, 2339, 2348, 2357, 
	2374, 2383, 2392, 2401, 2410, 2421, 2432, 2445, 
	2453, 2462, 2470, 2483, 2491, 2500, 2508, 2517, 
	2542, 2551, 2560, 2568, 2579, 2588, 2597, 2606, 
	2615, 2626, 2635, 2644, 2653, 2668, 2679, 2690, 
	2699, 2708, 2717, 2726, 2735, 2744, 2753, 2762, 
	2771, 2780, 2789, 2798, 2809, 2818, 2827, 2836, 
	2845, 2854, 2865, 2876, 2885, 2894, 2903, 2912, 
	2921, 2930, 2947, 2956, 2965, 2974, 2983, 2992, 
	3001, 3010, 3019, 3026, 3033, 3073, 3090, 3109, 
	3134, 3152, 3177, 3198, 3219, 3240, 3261, 3282, 
	3303, 3324, 3354, 3372, 3397, 3418, 3439, 3460, 
	3481, 3502, 3536, 3557, 3578, 3595, 3620, 3641, 
	3662, 3683, 3704, 3722, 3751, 3772, 3793, 3811, 
	3832, 3853, 3874, 3895, 3937, 3958, 3992, 4049, 
	4070, 4091, 4112, 4133, 4154, 4175, 4196, 4217, 
	4238, 4259, 4280, 4301, 4322, 4343, 4364, 4385, 
	4406, 4427, 4445, 4463, 4497, 4518, 4543, 4564, 
	4589, 4610, 4631, 4652, 4673, 4694, 4715, 4736, 
	4757, 4778, 4803, 4824, 4845, 4866, 4892, 4913, 
	4934, 4955, 4976, 4997, 5018, 5039, 5060, 5081, 
	5102, 5128, 5149, 5170, 5188, 5241, 5262, 5283, 
	5308, 5329, 5350, 5371, 5392, 5413, 5434, 5469, 
	5490, 5511, 5532, 5553, 5574, 5595, 5616, 5637, 
	5658, 5683, 5708, 5729, 5750, 5771, 5792, 5817, 
	5842, 5867, 5905, 5938, 5967, 5988, 6009, 6038, 
	6063, 6084, 6105, 6126, 6147, 6168, 6189, 6210, 
	6231, 6252, 6277, 6298, 6327, 6352, 6373, 6398, 
	6419, 6440, 6465, 6486, 6523, 6544, 6565, 6586, 
	6607, 6628, 6649, 6682, 6703, 6724, 6745, 6766, 
	6787, 6824, 6849, 6870, 6891, 6912, 6933, 6954, 
	6983, 7004, 7029, 7054, 7075, 7100, 7121, 7142, 
	7169, 7190, 7211, 7248, 7269, 7290, 7311, 7332, 
	7353, 7374, 7399, 7420, 7441, 7462, 7487, 7508, 
	7529, 7550, 7571, 7608, 7629, 7650, 7671, 7692, 
	7717, 7742, 7771, 7789, 7810, 7828, 7857, 7875, 
	7896, 7914, 7935, 7988, 8009, 8030, 8048, 8073, 
	8094, 8115, 8136, 8157, 8182, 8203, 8224, 8245, 
	8278, 8303, 8328, 8349, 8370, 8391, 8412, 8433, 
	8454, 8475, 8496, 8517, 8538, 8559, 8580, 8605, 
	8626, 8647, 8668, 8689, 8710, 8735, 8760, 8781, 
	8802, 8823, 8844, 8865, 8886, 8923, 8944, 8965, 
	8986, 9007, 9028, 9049, 9070
};
static const short _lexer_trans_keys[] = {
	35, 45, 34, 35, 45, 9, 32, 66, 
	67, 68, 72, 73, 83, 98, 99, 100, 
	104, 105, 115, 67, 99, 9, 32, 41, 
	43, 45, 9, 32, 41, 43, 45, 69, 
	101, 9, 32, 41, 43, 45, 76, 108, 
	9, 32, 41, 43, 45, 88, 89, 120, 
	121, 9, 32, 41, 43, 45, 9, 32, 
	41, 43, 45, 80, 112, 9, 32, 41, 
	43, 45, 72, 104, 48, 57, 65, 70, 
	97, 102, 48, 57, 65, 70, 97, 102, 
	77, 78, 83, 87, 109, 110, 115, 119, 
	79, 111, 86, 118, 69, 101, 79, 111, 
	80, 112, 84, 116, 79, 111, 80, 112, 
	65, 97, 73, 105, 84, 116, 67, 87, 
	99, 119, 77, 109, 68, 100, 82, 114, 
	48, 49, 50, 51, 52, 53, 54, 66, 
	80, 81, 87, 98, 112, 113, 119, 521, 
	544, 607, 577, 602, 609, 634, 521, 544, 
	570, 10, 33, 34, 35, 36, 37, 38, 
	39, 40, 41, 42, 43, 44, 45, 47, 
	48, 49, 58, 59, 60, 61, 62, 63, 
	64, 91, 92, 93, 94, 96, 123, 124, 
	125, 126, 127, 302, 321, 322, 323, 324, 
	325, 326, 327, 328, 329, 330, 332, 333, 
	334, 335, 336, 338, 339, 340, 341, 342, 
	344, 346, 351, 353, 354, 355, 356, 357, 
	358, 359, 360, 361, 362, 364, 365, 366, 
	367, 368, 370, 371, 372, 373, 374, 376, 
	378, 558, 577, 578, 579, 580, 581, 582, 
	583, 584, 585, 586, 588, 589, 590, 591, 
	592, 594, 595, 596, 597, 598, 600, 602, 
	607, 609, 610, 611, 612, 613, 614, 615, 
	616, 617, 618, 620, 621, 622, 623, 624, 
	626, 627, 628, 629, 630, 632, 634, -128, 
	32, 50, 57, 331, 345, 363, 377, 587, 
	601, 619, 633, 61, 48, 57, 65, 70, 
	97, 102, 34, 48, 49, 48, 49, 38, 
	9, 32, 66, 67, 68, 72, 73, 83, 
	98, 99, 100, 104, 105, 115, 42, 66, 
	72, 88, 98, 104, 120, 48, 49, 50, 
	57, 65, 70, 97, 102, 66, 72, 98, 
	104, 48, 49, 50, 57, 65, 70, 97, 
	102, 72, 104, 48, 57, 65, 70, 97, 
	102, 72, 104, 48, 57, 65, 70, 97, 
	102, 72, 104, 48, 49, 50, 57, 65, 
	70, 97, 102, 48, 57, 65, 70, 97, 
	102, 10, 60, 61, 62, 61, 61, 62, 
	124, 39, 51, 68, 70, 76, 78, 83, 
	95, 100, 102, 108, 110, 115, 48, 57, 
	65, 90, 97, 122, 95, 48, 57, 65, 
	90, 97, 122, 50, 95, 48, 57, 65, 
	90, 97, 122, 67, 68, 95, 99, 100, 
	48, 57, 65, 90, 97, 122, 39, 95, 
	48, 57, 65, 90, 97, 122, 73, 84, 
	95, 105, 116, 48, 57, 65, 90, 97, 
	122, 71, 95, 103, 48, 57, 65, 90, 
	97, 122, 78, 95, 110, 48, 57, 65, 
	90, 97, 122, 68, 95, 100, 48, 57, 
	65, 90, 97, 122, 68, 95, 100, 48, 
	57, 65, 90, 97, 122, 77, 95, 109, 
	48, 57, 65, 90, 97, 122, 80, 95, 
	112, 48, 57, 65, 90, 97, 122, 67, 
	95, 99, 48, 57, 65, 90, 97, 122, 
	39, 67, 73, 79, 95, 99, 105, 111, 
	48, 57, 65, 90, 97, 122, 39, 95, 
	48, 57, 65, 90, 97, 122, 78, 84, 
	95, 110, 116, 48, 57, 65, 90, 97, 
	122, 65, 95, 97, 48, 57, 66, 90, 
	98, 122, 82, 95, 114, 48, 57, 65, 
	90, 97, 122, 89, 95, 121, 48, 57, 
	65, 90, 97, 122, 79, 95, 111, 48, 
	57, 65, 90, 97, 122, 76, 95, 108, 
	48, 57, 65, 90, 97, 122, 39, 65, 
	67, 80, 85, 95, 97, 99, 112, 117, 
	48, 57, 66, 90, 98, 122, 76, 95, 
	108, 48, 57, 65, 90, 97, 122, 76, 
	95, 108, 48, 57, 65, 90, 97, 122, 
	95, 48, 57, 65, 90, 97, 122, 79, 
	80, 95, 111, 112, 48, 57, 65, 90, 
	97, 122, 90, 95, 122, 48, 57, 65, 
	89, 97, 121, 75, 95, 107, 48, 57, 
	65, 90, 97, 122, 71, 95, 103, 48, 
	57, 65, 90, 97, 122, 70, 95, 102, 
	48, 57, 65, 90, 97, 122, 39, 95, 
	48, 57, 65, 90, 97, 122, 68, 73, 
	76, 95, 100, 105, 108, 48, 57, 65, 
	90, 97, 122, 82, 95, 114, 48, 57, 
	65, 90, 97, 122, 82, 95, 114, 48, 
	57, 65, 90, 97, 122, 46, 95, 48, 
	57, 65, 90, 97, 122, 76, 95, 108, 
	48, 57, 65, 90, 97, 122, 73, 95, 
	105, 48, 57, 65, 90, 97, 122, 78, 
	95, 110, 48, 57, 65, 90, 97, 122, 
	69, 95, 101, 48, 57, 65, 90, 97, 
	122, 39, 65, 69, 73, 74, 77, 83, 
	95, 97, 101, 105, 106, 109, 115, 48, 
	57, 66, 90, 98, 122, 65, 95, 97, 
	48, 57, 66, 90, 98, 122, 39, 67, 
	70, 72, 80, 95, 99, 102, 104, 112, 
	48, 57, 65, 90, 97, 122, 66, 67, 
	68, 71, 73, 77, 81, 83, 86, 87, 
	95, 98, 99, 100, 103, 105, 109, 113, 
	115, 118, 119, 48, 57, 65, 90, 97, 
	122, 66, 95, 98, 48, 57, 65, 90, 
	97, 122, 82, 95, 114, 48, 57, 65, 
	90, 97, 122, 79, 95, 111, 48, 57, 
	65, 90, 97, 122, 85, 95, 117, 48, 
	57, 65, 90, 97, 122, 80, 95, 112, 
	48, 57, 65, 90, 97, 122, 78, 95, 
	110, 48, 57, 65, 90, 97, 122, 69, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	65, 95, 97, 48, 57, 66, 90, 98, 
	122, 82, 95, 114, 48, 57, 65, 90, 
	97, 122, 83, 95, 115, 48, 57, 65, 
	90, 97, 122, 76, 95, 108, 48, 57, 
	65, 90, 97, 122, 72, 95, 104, 48, 
	57, 65, 90, 97, 122, 65, 95, 97, 
	48, 57, 66, 90, 98, 122, 83, 95, 
	115, 48, 57, 65, 90, 97, 122, 69, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	78, 95, 110, 48, 57, 65, 90, 97, 
	122, 90, 95, 122, 48, 57, 65, 89, 
	97, 121, 65, 95, 97, 48, 57, 66, 
	90, 98, 122, 46, 95, 48, 57, 65, 
	90, 97, 122, 46, 95, 48, 57, 65, 
	90, 97, 122, 39, 73, 76, 78, 88, 
	95, 105, 108, 110, 120, 48, 57, 65, 
	90, 97, 122, 82, 95, 114, 48, 57, 
	65, 90, 97, 122, 73, 83, 95, 105, 
	115, 48, 57, 65, 90, 97, 122, 70, 
	95, 102, 48, 57, 65, 90, 97, 122, 
	68, 78, 95, 100, 110, 48, 57, 65, 
	90, 97, 122, 69, 95, 101, 48, 57, 
	65, 90, 97, 122, 70, 95, 102, 48, 
	57, 65, 90, 97, 122, 68, 95, 100, 
	48, 57, 65, 90, 97, 122, 69, 95, 
	101, 48, 57, 65, 90, 97, 122, 70, 
	95, 102, 48, 57, 65, 90, 97, 122, 
	69, 95, 101, 48, 57, 65, 90, 97, 
	122, 68, 95, 100, 48, 57, 65, 90, 
	97, 122, 73, 95, 105, 48, 57, 65, 
	90, 97, 122, 70, 95, 102, 48, 57, 
	65, 90, 97, 122, 84, 88, 95, 116, 
	120, 48, 57, 65, 90, 97, 122, 69, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	82, 95, 114, 48, 57, 65, 90, 97, 
	122, 78, 95, 110, 48, 57, 65, 90, 
	97, 122, 39, 73, 80, 95, 105, 112, 
	48, 57, 65, 90, 97, 122, 76, 95, 
	108, 48, 57, 65, 90, 97, 122, 76, 
	95, 108, 48, 57, 65, 90, 97, 122, 
	68, 95, 100, 48, 57, 65, 90, 97, 
	122, 69, 95, 101, 48, 57, 65, 90, 
	97, 122, 80, 95, 112, 48, 57, 65, 
	90, 97, 122, 76, 95, 108, 48, 57, 
	65, 90, 97, 122, 79, 95, 111, 48, 
	57, 65, 90, 97, 122, 66, 95, 98, 
	48, 57, 65, 90, 97, 122, 65, 95, 
	97, 48, 57, 66, 90, 98, 122, 76, 
	95, 108, 48, 57, 65, 90, 97, 122, 
	39, 65, 76, 95, 97, 108, 48, 57, 
	66, 90, 98, 122, 76, 95, 108, 48, 
	57, 65, 90, 97, 122, 84, 95, 116, 
	48, 57, 65, 90, 97, 122, 39, 95, 
	48, 57, 65, 90, 97, 122, 68, 70, 
	73, 77, 78, 79, 80, 88, 89, 95, 
	100, 102, 105, 109, 110, 111, 112, 120, 
	121, 48, 57, 65, 90, 97, 122, 69, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	84, 95, 116, 48, 57, 65, 90, 97, 
	122, 68, 78, 95, 100, 110, 48, 57, 
	65, 90, 97, 122, 69, 95, 101, 48, 
	57, 65, 90, 97, 122, 70, 95, 102, 
	48, 57, 65, 90, 97, 122, 68, 95, 
	100, 48, 57, 65, 90, 97, 122, 69, 
	95, 101, 48, 57, 65, 90, 97, 122, 
	70, 95, 102, 48, 57, 65, 90, 97, 
	122, 82, 95, 114, 48, 57, 65, 90, 
	97, 122, 48, 67, 68, 73, 86, 95, 
	99, 100, 105, 118, 49, 57, 65, 90, 
	97, 122, 76, 95, 108, 48, 57, 65, 
	90, 97, 122, 85, 95, 117, 48, 57, 
	65, 90, 97, 122, 68, 95, 100, 48, 
	57, 65, 90, 97, 122, 69, 95, 101, 
	48, 57, 65, 90, 97, 122, 82, 95, 
	114, 48, 57, 65, 90, 97, 122, 82, 
	95, 114, 48, 57, 65, 90, 97, 122, 
	79, 95, 111, 48, 57, 65, 90, 97, 
	122, 75, 95, 107, 48, 57, 65, 90, 
	97, 122, 69, 95, 101, 48, 57, 65, 
	90, 97, 122, 69, 73, 95, 101, 105, 
	48, 57, 65, 90, 97, 122, 82, 83, 
	95, 114, 115, 48, 57, 65, 90, 97, 
	122, 69, 95, 101, 48, 57, 65, 90, 
	97, 122, 83, 95, 115, 48, 57, 65, 
	90, 97, 122, 69, 95, 101, 48, 57, 
	65, 90, 97, 122, 84, 95, 116, 48, 
	57, 65, 90, 97, 122, 72, 76, 95, 
	104, 108, 48, 57, 65, 90, 97, 122, 
	72, 76, 95, 104, 108, 48, 57, 65, 
	90, 97, 122, 80, 82, 95, 112, 114, 
	48, 57, 65, 90, 97, 122, 39, 68, 
	73, 79, 83, 90, 95, 100, 105, 111, 
	115, 122, 48, 57, 65, 89, 97, 121, 
	68, 73, 80, 87, 95, 100, 105, 112, 
	119, 48, 57, 65, 90, 97, 122, 82, 
	83, 88, 95, 114, 115, 120, 48, 57, 
	65, 90, 97, 122, 88, 95, 120, 48, 
	57, 65, 90, 97, 122, 82, 95, 114, 
	48, 57, 65, 90, 97, 122, 82, 83, 
	88, 95, 114, 115, 120, 48, 57, 65, 
	90, 97, 122, 83, 88, 95, 115, 120, 
	48, 57, 65, 90, 97, 122, 67, 95, 
	99, 48, 57, 65, 90, 97, 122, 65, 
	95, 97, 48, 57, 66, 90, 98, 122, 
	76, 95, 108, 48, 57, 65, 90, 97, 
	122, 69, 95, 101, 48, 57, 65, 90, 
	97, 122, 82, 95, 114, 48, 57, 65, 
	90, 97, 122, 73, 95, 105, 48, 57, 
	65, 90, 97, 122, 82, 95, 114, 48, 
	57, 65, 90, 97, 122, 88, 95, 120, 
	48, 57, 65, 90, 97, 122, 83, 95, 
	115, 48, 57, 65, 90, 97, 122, 66, 
	78, 95, 98, 110, 48, 57, 65, 90, 
	97, 122, 69, 95, 101, 48, 57, 65, 
	90, 97, 122, 68, 73, 84, 95, 100, 
	105, 116, 48, 57, 65, 90, 97, 122, 
	68, 82, 95, 100, 114, 48, 57, 65, 
	90, 97, 122, 82, 95, 114, 48, 57, 
	65, 90, 97, 122, 68, 82, 95, 100, 
	114, 48, 57, 65, 90, 97, 122, 82, 
	95, 114, 48, 57, 65, 90, 97, 122, 
	79, 95, 111, 48, 57, 65, 90, 97, 
	122, 70, 78, 95, 102, 110, 48, 57, 
	65, 90, 97, 122, 70, 95, 102, 48, 
	57, 65, 90, 97, 122, 73, 76, 77, 
	79, 85, 95, 105, 108, 109, 111, 117, 
	48, 57, 65, 90, 97, 122, 82, 95, 
	114, 48, 57, 65, 90, 97, 122, 82, 
	95, 114, 48, 57, 65, 90, 97, 122, 
	79, 95, 111, 48, 57, 65, 90, 97, 
	122, 82, 95, 114, 48, 57, 65, 90, 
	97, 122, 84, 95, 116, 48, 57, 65, 
	90, 97, 122, 85, 95, 117, 48, 57, 
	65, 90, 97, 122, 48, 49, 50, 51, 
	52, 53, 54, 55, 95, 56, 57, 65, 
	90, 97, 122, 68, 95, 100, 48, 57, 
	65, 90, 97, 122, 85, 95, 117, 48, 
	57, 65, 90, 97, 122, 76, 95, 108, 
	48, 57, 65, 90, 97, 122, 69, 95, 
	101, 48, 57, 65, 90, 97, 122, 76, 
	95, 108, 48, 57, 65, 90, 97, 122, 
	67, 69, 79, 86, 90, 95, 99, 101, 
	111, 118, 122, 48, 57, 65, 89, 97, 
	121, 71, 88, 95, 103, 120, 48, 57, 
	65, 90, 97, 122, 84, 95, 116, 48, 
	57, 65, 90, 97, 122, 82, 95, 114, 
	48, 57, 65, 90, 97, 122, 69, 95, 
	101, 48, 57, 65, 90, 97, 122, 71, 
	95, 103, 48, 57, 65, 90, 97, 122, 
	80, 95, 112, 48, 57, 65, 90, 97, 
	122, 82, 84, 85, 95, 114, 116, 117, 
	48, 57, 65, 90, 97, 122, 71, 95, 
	103, 48, 57, 65, 90, 97, 122, 68, 
	73, 95, 100, 105, 48, 57, 65, 90, 
	97, 122, 77, 82, 95, 109, 114, 48, 
	57, 65, 90, 97, 122, 82, 95, 114, 
	48, 57, 65, 90, 97, 122, 77, 82, 
	95, 109, 114, 48, 57, 65, 90, 97, 
	122, 82, 95, 114, 48, 57, 65, 90, 
	97, 122, 84, 95, 116, 48, 57, 65, 
	90, 97, 122, 48, 68, 73, 95, 100, 
	105, 49, 57, 65, 90, 97, 122, 78, 
	95, 110, 48, 57, 65, 90, 97, 122, 
	66, 95, 98, 48, 57, 65, 90, 97, 
	122, 69, 72, 73, 79, 85, 95, 101, 
	104, 105, 111, 117, 48, 57, 65, 90, 
	97, 122, 65, 95, 97, 48, 57, 66, 
	90, 98, 122, 83, 95, 115, 48, 57, 
	65, 90, 97, 122, 69, 95, 101, 48, 
	57, 65, 90, 97, 122, 88, 95, 120, 
	48, 57, 65, 90, 97, 122, 69, 95, 
	101, 48, 57, 65, 90, 97, 122, 76, 
	95, 108, 48, 57, 65, 90, 97, 122, 
	65, 68, 95, 97, 100, 48, 57, 66, 
	90, 98, 122, 68, 95, 100, 48, 57, 
	65, 90, 97, 122, 78, 95, 110, 48, 
	57, 65, 90, 97, 122, 80, 95, 112, 
	48, 57, 65, 90, 97, 122, 66, 83, 
	95, 98, 115, 48, 57, 65, 90, 97, 
	122, 76, 95, 108, 48, 57, 65, 90, 
	97, 122, 73, 95, 105, 48, 57, 65, 
	90, 97, 122, 67, 95, 99, 48, 57, 
	65, 90, 97, 122, 72, 95, 104, 48, 
	57, 65, 90, 97, 122, 68, 69, 76, 
	82, 83, 95, 100, 101, 108, 114, 115, 
	48, 57, 65, 90, 97, 122, 77, 95, 
	109, 48, 57, 65, 90, 97, 122, 79, 
	95, 111, 48, 57, 65, 90, 97, 122, 
	68, 95, 100, 48, 57, 65, 90, 97, 
	122, 69, 95, 101, 48, 57, 65, 90, 
	97, 122, 83, 84, 95, 115, 116, 48, 
	57, 65, 90, 97, 122, 73, 78, 95, 
	105, 110, 48, 57, 65, 90, 97, 122, 
	65, 67, 68, 95, 97, 99, 100, 48, 
	57, 66, 90, 98, 122, 39, 95, 48, 
	57, 65, 90, 97, 122, 65, 95, 97, 
	48, 57, 66, 90, 98, 122, 39, 95, 
	48, 57, 65, 90, 97, 122, 65, 67, 
	68, 95, 97, 99, 100, 48, 57, 66, 
	90, 98, 122, 39, 95, 48, 57, 65, 
	90, 97, 122, 65, 95, 97, 48, 57, 
	66, 90, 98, 122, 39, 95, 48, 57, 
	65, 90, 97, 122, 84, 95, 116, 48, 
	57, 65, 90, 97, 122, 66, 67, 69, 
	76, 80, 82, 85, 87, 89, 95, 98, 
	99, 101, 108, 112, 114, 117, 119, 121, 
	48, 57, 65, 90, 97, 122, 67, 95, 
	99, 48, 57, 65, 90, 97, 122, 70, 
	95, 102, 48, 57, 65, 90, 97, 122, 
	39, 95, 48, 57, 65, 90, 97, 122, 
	67, 84, 95, 99, 116, 48, 57, 65, 
	90, 97, 122, 84, 95, 116, 48, 57, 
	65, 90, 97, 122, 73, 95, 105, 48, 
	57, 65, 90, 97, 122, 79, 95, 111, 
	48, 57, 65, 90, 97, 122, 78, 95, 
	110, 48, 57, 65, 90, 97, 122, 65, 
	85, 95, 97, 117, 48, 57, 66, 90, 
	98, 122, 69, 95, 101, 48, 57, 65, 
	90, 97, 122, 83, 95, 115, 48, 57, 
	65, 90, 97, 122, 82, 95, 114, 48, 
	57, 65, 90, 97, 122, 65, 73, 76, 
	80, 95, 97, 105, 108, 112, 48, 57, 
	66, 90, 98, 122, 65, 76, 95, 97, 
	108, 48, 57, 66, 90, 98, 122, 66, 
	82, 95, 98, 114, 48, 57, 65, 90, 
	97, 122, 69, 95, 101, 48, 57, 65, 
	90, 97, 122, 83, 95, 115, 48, 57, 
	65, 90, 97, 122, 65, 95, 97, 48, 
	57, 66, 90, 98, 122, 80, 95, 112, 
	48, 57, 65, 90, 97, 122, 78, 95, 
	110, 48, 57, 65, 90, 97, 122, 73, 
	95, 105, 48, 57, 65, 90, 97, 122, 
	66, 95, 98, 48, 57, 65, 90, 97, 
	122, 83, 95, 115, 48, 57, 65, 90, 
	97, 122, 67, 95, 99, 48, 57, 65, 
	90, 97, 122, 65, 95, 97, 48, 57, 
	66, 90, 98, 122, 76, 95, 108, 48, 
	57, 65, 90, 97, 122, 76, 95, 108, 
	48, 57, 65, 90, 97, 122, 69, 83, 
	95, 101, 115, 48, 57, 65, 90, 97, 
	122, 83, 95, 115, 48, 57, 65, 90, 
	97, 122, 84, 95, 116, 48, 57, 65, 
	90, 97, 122, 84, 95, 116, 48, 57, 
	65, 90, 97, 122, 73, 95, 105, 48, 
	57, 65, 90, 97, 122, 79, 95, 111, 
	48, 57, 65, 90, 97, 122, 77, 78, 
	95, 109, 110, 48, 57, 65, 90, 97, 
	122, 65, 83, 95, 97, 115, 48, 57, 
	66, 90, 98, 122, 68, 95, 100, 48, 
	57, 65, 90, 97, 122, 69, 95, 101, 
	48, 57, 65, 90, 97, 122, 70, 95, 
	102, 48, 57, 65, 90, 97, 122, 73, 
	95, 105, 48, 57, 65, 90, 97, 122, 
	78, 95, 110, 48, 57, 65, 90, 97, 
	122, 69, 95, 101, 48, 57, 65, 90, 
	97, 122, 68, 76, 79, 80, 82, 95, 
	100, 108, 111, 112, 114, 48, 57, 65, 
	90, 97, 122, 69, 95, 101, 48, 57, 
	65, 90, 97, 122, 70, 95, 102, 48, 
	57, 65, 90, 97, 122, 73, 95, 105, 
	48, 57, 65, 90, 97, 122, 66, 95, 
	98, 48, 57, 65, 90, 97, 122, 82, 
	95, 114, 48, 57, 65, 90, 97, 122, 
	67, 95, 99, 48, 57, 65, 90, 97, 
	122, 69, 95, 101, 48, 57, 65, 90, 
	97, 122, 70, 95, 102, 48, 57, 65, 
	90, 97, 122, 521, 544, 607, 577, 602, 
	609, 634, 607, 560, 569, 577, 602, 609, 
	634, 39, 307, 324, 326, 332, 334, 339, 
	351, 356, 358, 364, 366, 371, 521, 544, 
	563, 570, 580, 582, 588, 590, 595, 607, 
	612, 614, 620, 622, 627, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 351, 521, 544, 570, 607, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 306, 351, 521, 544, 562, 570, 
	607, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 323, 324, 351, 
	355, 356, 521, 544, 570, 579, 580, 607, 
	611, 612, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 39, 351, 
	521, 544, 570, 607, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	329, 340, 351, 361, 372, 521, 544, 570, 
	585, 596, 607, 617, 628, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 327, 351, 359, 521, 544, 570, 583, 
	607, 615, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 334, 351, 
	366, 521, 544, 570, 590, 607, 622, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 324, 351, 356, 521, 544, 
	570, 580, 607, 612, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	324, 351, 356, 521, 544, 570, 580, 607, 
	612, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 333, 351, 365, 
	521, 544, 570, 589, 607, 621, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 336, 351, 368, 521, 544, 570, 
	592, 607, 624, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 323, 
	351, 355, 521, 544, 570, 579, 607, 611, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 39, 323, 329, 335, 
	351, 355, 361, 367, 521, 544, 570, 579, 
	585, 591, 607, 611, 617, 623, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 39, 351, 521, 544, 570, 607, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 334, 340, 351, 366, 
	372, 521, 544, 570, 590, 596, 607, 622, 
	628, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 321, 351, 353, 
	521, 544, 570, 577, 607, 609, 304, 313, 
	322, 346, 354, 378, 560, 569, 578, 602, 
	610, 634, 338, 351, 370, 521, 544, 570, 
	594, 607, 626, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 345, 
	351, 377, 521, 544, 570, 601, 607, 633, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 335, 351, 367, 521, 
	544, 570, 591, 607, 623, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 332, 351, 364, 521, 544, 570, 588, 
	607, 620, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 39, 321, 
	323, 336, 341, 351, 353, 355, 368, 373, 
	521, 544, 570, 577, 579, 592, 597, 607, 
	609, 611, 624, 629, 304, 313, 322, 346, 
	354, 378, 560, 569, 578, 602, 610, 634, 
	332, 351, 364, 521, 544, 570, 588, 607, 
	620, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 332, 351, 364, 
	521, 544, 570, 588, 607, 620, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 351, 521, 544, 570, 607, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 335, 336, 351, 367, 368, 
	521, 544, 570, 591, 592, 607, 623, 624, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 346, 351, 378, 521, 
	544, 570, 602, 607, 634, 304, 313, 321, 
	345, 353, 377, 560, 569, 577, 601, 609, 
	633, 331, 351, 363, 521, 544, 570, 587, 
	607, 619, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 327, 351, 
	359, 521, 544, 570, 583, 607, 615, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 326, 351, 358, 521, 544, 
	570, 582, 607, 614, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	39, 351, 521, 544, 570, 607, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 324, 329, 332, 351, 356, 361, 
	364, 521, 544, 570, 580, 585, 588, 607, 
	612, 617, 620, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 338, 
	351, 370, 521, 544, 570, 594, 607, 626, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 338, 351, 370, 521, 
	544, 570, 594, 607, 626, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 46, 351, 521, 544, 570, 607, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 332, 351, 364, 521, 544, 
	570, 588, 607, 620, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	329, 351, 361, 521, 544, 570, 585, 607, 
	617, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 334, 351, 366, 
	521, 544, 570, 590, 607, 622, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 325, 351, 357, 521, 544, 570, 
	581, 607, 613, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 39, 
	321, 325, 329, 330, 333, 339, 351, 353, 
	357, 361, 362, 365, 371, 521, 544, 570, 
	577, 581, 585, 586, 589, 595, 607, 609, 
	613, 617, 618, 621, 627, 304, 313, 322, 
	346, 354, 378, 560, 569, 578, 602, 610, 
	634, 321, 351, 353, 521, 544, 570, 577, 
	607, 609, 304, 313, 322, 346, 354, 378, 
	560, 569, 578, 602, 610, 634, 39, 323, 
	326, 328, 336, 351, 355, 358, 360, 368, 
	521, 544, 570, 579, 582, 584, 592, 607, 
	611, 614, 616, 624, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	322, 323, 324, 327, 329, 333, 337, 339, 
	342, 343, 351, 354, 355, 356, 359, 361, 
	365, 369, 371, 374, 375, 521, 544, 570, 
	578, 579, 580, 583, 585, 589, 593, 595, 
	598, 599, 607, 610, 611, 612, 615, 617, 
	621, 625, 627, 630, 631, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 322, 351, 354, 521, 544, 570, 578, 
	607, 610, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 338, 351, 
	370, 521, 544, 570, 594, 607, 626, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 335, 351, 367, 521, 544, 
	570, 591, 607, 623, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	341, 351, 373, 521, 544, 570, 597, 607, 
	629, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 336, 351, 368, 
	521, 544, 570, 592, 607, 624, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 334, 351, 366, 521, 544, 570, 
	590, 607, 622, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 325, 
	351, 357, 521, 544, 570, 581, 607, 613, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 321, 351, 353, 521, 
	544, 570, 577, 607, 609, 304, 313, 322, 
	346, 354, 378, 560, 569, 578, 602, 610, 
	634, 338, 351, 370, 521, 544, 570, 594, 
	607, 626, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 339, 351, 
	371, 521, 544, 570, 595, 607, 627, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 332, 351, 364, 521, 544, 
	570, 588, 607, 620, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	328, 351, 360, 521, 544, 570, 584, 607, 
	616, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 321, 351, 353, 
	521, 544, 570, 577, 607, 609, 304, 313, 
	322, 346, 354, 378, 560, 569, 578, 602, 
	610, 634, 339, 351, 371, 521, 544, 570, 
	595, 607, 627, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 325, 
	351, 357, 521, 544, 570, 581, 607, 613, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 334, 351, 366, 521, 
	544, 570, 590, 607, 622, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 346, 351, 378, 521, 544, 570, 602, 
	607, 634, 304, 313, 321, 345, 353, 377, 
	560, 569, 577, 601, 609, 633, 321, 351, 
	353, 521, 544, 570, 577, 607, 609, 304, 
	313, 322, 346, 354, 378, 560, 569, 578, 
	602, 610, 634, 46, 351, 521, 544, 570, 
	607, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 46, 351, 521, 
	544, 570, 607, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 39, 
	329, 332, 334, 344, 351, 361, 364, 366, 
	376, 521, 544, 570, 585, 588, 590, 600, 
	607, 617, 620, 622, 632, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 338, 351, 370, 521, 544, 570, 594, 
	607, 626, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 329, 339, 
	351, 361, 371, 521, 544, 570, 585, 595, 
	607, 617, 627, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 326, 
	351, 358, 521, 544, 570, 582, 607, 614, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 324, 334, 351, 356, 
	366, 521, 544, 570, 580, 590, 607, 612, 
	622, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 325, 351, 357, 
	521, 544, 570, 581, 607, 613, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 326, 351, 358, 521, 544, 570, 
	582, 607, 614, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 324, 
	351, 356, 521, 544, 570, 580, 607, 612, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 325, 351, 357, 521, 
	544, 570, 581, 607, 613, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 326, 351, 358, 521, 544, 570, 582, 
	607, 614, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 325, 351, 
	357, 521, 544, 570, 581, 607, 613, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 324, 351, 356, 521, 544, 
	570, 580, 607, 612, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	329, 351, 361, 521, 544, 570, 585, 607, 
	617, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 326, 351, 358, 
	521, 544, 570, 582, 607, 614, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 340, 344, 351, 372, 376, 521, 
	544, 570, 596, 600, 607, 628, 632, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 325, 351, 357, 521, 544, 
	570, 581, 607, 613, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	338, 351, 370, 521, 544, 570, 594, 607, 
	626, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 334, 351, 366, 
	521, 544, 570, 590, 607, 622, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 39, 329, 336, 351, 361, 368, 
	521, 544, 570, 585, 592, 607, 617, 624, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 332, 351, 364, 521, 
	544, 570, 588, 607, 620, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 332, 351, 364, 521, 544, 570, 588, 
	607, 620, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 324, 351, 
	356, 521, 544, 570, 580, 607, 612, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 325, 351, 357, 521, 544, 
	570, 581, 607, 613, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	336, 351, 368, 521, 544, 570, 592, 607, 
	624, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 332, 351, 364, 
	521, 544, 570, 588, 607, 620, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 335, 351, 367, 521, 544, 570, 
	591, 607, 623, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 322, 
	351, 354, 521, 544, 570, 578, 607, 610, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 321, 351, 353, 521, 
	544, 570, 577, 607, 609, 304, 313, 322, 
	346, 354, 378, 560, 569, 578, 602, 610, 
	634, 332, 351, 364, 521, 544, 570, 588, 
	607, 620, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 39, 321, 
	332, 351, 353, 364, 521, 544, 570, 577, 
	588, 607, 609, 620, 304, 313, 322, 346, 
	354, 378, 560, 569, 578, 602, 610, 634, 
	332, 351, 364, 521, 544, 570, 588, 607, 
	620, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 340, 351, 372, 
	521, 544, 570, 596, 607, 628, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 39, 351, 521, 544, 570, 607, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 324, 326, 329, 333, 
	334, 335, 336, 344, 345, 351, 356, 358, 
	361, 365, 366, 367, 368, 376, 377, 521, 
	544, 570, 580, 582, 585, 589, 590, 591, 
	592, 600, 601, 607, 612, 614, 617, 621, 
	622, 623, 624, 632, 633, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 325, 351, 357, 521, 544, 570, 581, 
	607, 613, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 340, 351, 
	372, 521, 544, 570, 596, 607, 628, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 324, 334, 351, 356, 366, 
	521, 544, 570, 580, 590, 607, 612, 622, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 325, 351, 357, 521, 
	544, 570, 581, 607, 613, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 326, 351, 358, 521, 544, 570, 582, 
	607, 614, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 324, 351, 
	356, 521, 544, 570, 580, 607, 612, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 325, 351, 357, 521, 544, 
	570, 581, 607, 613, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	326, 351, 358, 521, 544, 570, 582, 607, 
	614, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 338, 351, 370, 
	521, 544, 570, 594, 607, 626, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 304, 323, 324, 329, 342, 351, 
	355, 356, 361, 374, 521, 544, 560, 570, 
	579, 580, 585, 598, 607, 611, 612, 617, 
	630, 305, 313, 321, 346, 353, 378, 561, 
	569, 577, 602, 609, 634, 332, 351, 364, 
	521, 544, 570, 588, 607, 620, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 341, 351, 373, 521, 544, 570, 
	597, 607, 629, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 324, 
	351, 356, 521, 544, 570, 580, 607, 612, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 325, 351, 357, 521, 
	544, 570, 581, 607, 613, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 338, 351, 370, 521, 544, 570, 594, 
	607, 626, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 338, 351, 
	370, 521, 544, 570, 594, 607, 626, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 335, 351, 367, 521, 544, 
	570, 591, 607, 623, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	331, 351, 363, 521, 544, 570, 587, 607, 
	619, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 325, 351, 357, 
	521, 544, 570, 581, 607, 613, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 325, 329, 351, 357, 361, 521, 
	544, 570, 581, 585, 607, 613, 617, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 338, 339, 351, 370, 371, 
	521, 544, 570, 594, 595, 607, 626, 627, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 325, 351, 357, 521, 
	544, 570, 581, 607, 613, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 339, 351, 371, 521, 544, 570, 595, 
	607, 627, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 325, 351, 
	357, 521, 544, 570, 581, 607, 613, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 340, 351, 372, 521, 544, 
	570, 596, 607, 628, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	328, 332, 351, 360, 364, 521, 544, 570, 
	584, 588, 607, 616, 620, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 328, 332, 351, 360, 364, 521, 544, 
	570, 584, 588, 607, 616, 620, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 336, 338, 351, 368, 370, 521, 
	544, 570, 592, 594, 607, 624, 626, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 39, 324, 329, 335, 339, 
	346, 351, 356, 361, 367, 371, 378, 521, 
	544, 570, 580, 585, 591, 595, 602, 607, 
	612, 617, 623, 627, 634, 304, 313, 321, 
	345, 353, 377, 560, 569, 577, 601, 609, 
	633, 324, 329, 336, 343, 351, 356, 361, 
	368, 375, 521, 544, 570, 580, 585, 592, 
	599, 607, 612, 617, 624, 631, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 338, 339, 344, 351, 370, 371, 
	376, 521, 544, 570, 594, 595, 600, 607, 
	626, 627, 632, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 344, 
	351, 376, 521, 544, 570, 600, 607, 632, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 338, 351, 370, 521, 
	544, 570, 594, 607, 626, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 338, 339, 344, 351, 370, 371, 376, 
	521, 544, 570, 594, 595, 600, 607, 626, 
	627, 632, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 339, 344, 
	351, 371, 376, 521, 544, 570, 595, 600, 
	607, 627, 632, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 323, 
	351, 355, 521, 544, 570, 579, 607, 611, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 321, 351, 353, 521, 
	544, 570, 577, 607, 609, 304, 313, 322, 
	346, 354, 378, 560, 569, 578, 602, 610, 
	634, 332, 351, 364, 521, 544, 570, 588, 
	607, 620, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 325, 351, 
	357, 521, 544, 570, 581, 607, 613, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 338, 351, 370, 521, 544, 
	570, 594, 607, 626, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	329, 351, 361, 521, 544, 570, 585, 607, 
	617, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 338, 351, 370, 
	521, 544, 570, 594, 607, 626, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 344, 351, 376, 521, 544, 570, 
	600, 607, 632, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 339, 
	351, 371, 521, 544, 570, 595, 607, 627, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 322, 334, 351, 354, 
	366, 521, 544, 570, 578, 590, 607, 610, 
	622, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 325, 351, 357, 
	521, 544, 570, 581, 607, 613, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 324, 329, 340, 351, 356, 361, 
	372, 521, 544, 570, 580, 585, 596, 607, 
	612, 617, 628, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 324, 
	338, 351, 356, 370, 521, 544, 570, 580, 
	594, 607, 612, 626, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	338, 351, 370, 521, 544, 570, 594, 607, 
	626, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 324, 338, 351, 
	356, 370, 521, 544, 570, 580, 594, 607, 
	612, 626, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 338, 351, 
	370, 521, 544, 570, 594, 607, 626, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 335, 351, 367, 521, 544, 
	570, 591, 607, 623, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	326, 334, 351, 358, 366, 521, 544, 570, 
	582, 590, 607, 614, 622, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 326, 351, 358, 521, 544, 570, 582, 
	607, 614, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 329, 332, 
	333, 335, 341, 351, 361, 364, 365, 367, 
	373, 521, 544, 570, 585, 588, 589, 591, 
	597, 607, 617, 620, 621, 623, 629, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 338, 351, 370, 521, 544, 
	570, 594, 607, 626, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	338, 351, 370, 521, 544, 570, 594, 607, 
	626, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 335, 351, 367, 
	521, 544, 570, 591, 607, 623, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 338, 351, 370, 521, 544, 570, 
	594, 607, 626, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 340, 
	351, 372, 521, 544, 570, 596, 607, 628, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 341, 351, 373, 521, 
	544, 570, 597, 607, 629, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 304, 305, 306, 307, 308, 309, 310, 
	311, 351, 521, 544, 560, 561, 562, 563, 
	564, 565, 566, 567, 570, 607, 312, 313, 
	321, 346, 353, 378, 568, 569, 577, 602, 
	609, 634, 324, 351, 356, 521, 544, 570, 
	580, 607, 612, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 341, 
	351, 373, 521, 544, 570, 597, 607, 629, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 332, 351, 364, 521, 
	544, 570, 588, 607, 620, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 325, 351, 357, 521, 544, 570, 581, 
	607, 613, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 332, 351, 
	364, 521, 544, 570, 588, 607, 620, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 323, 325, 335, 342, 346, 
	351, 355, 357, 367, 374, 378, 521, 544, 
	570, 579, 581, 591, 598, 602, 607, 611, 
	613, 623, 630, 634, 304, 313, 321, 345, 
	353, 377, 560, 569, 577, 601, 609, 633, 
	327, 344, 351, 359, 376, 521, 544, 570, 
	583, 600, 607, 615, 632, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 340, 351, 372, 521, 544, 570, 596, 
	607, 628, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 338, 351, 
	370, 521, 544, 570, 594, 607, 626, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 325, 351, 357, 521, 544, 
	570, 581, 607, 613, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	327, 351, 359, 521, 544, 570, 583, 607, 
	615, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 336, 351, 368, 
	521, 544, 570, 592, 607, 624, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 338, 340, 341, 351, 370, 372, 
	373, 521, 544, 570, 594, 596, 597, 607, 
	626, 628, 629, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 327, 
	351, 359, 521, 544, 570, 583, 607, 615, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 324, 329, 351, 356, 
	361, 521, 544, 570, 580, 585, 607, 612, 
	617, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 333, 338, 351, 
	365, 370, 521, 544, 570, 589, 594, 607, 
	621, 626, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 338, 351, 
	370, 521, 544, 570, 594, 607, 626, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 333, 338, 351, 365, 370, 
	521, 544, 570, 589, 594, 607, 621, 626, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 338, 351, 370, 521, 
	544, 570, 594, 607, 626, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 340, 351, 372, 521, 544, 570, 596, 
	607, 628, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 304, 324, 
	329, 351, 356, 361, 521, 544, 560, 570, 
	580, 585, 607, 612, 617, 305, 313, 321, 
	346, 353, 378, 561, 569, 577, 602, 609, 
	634, 334, 351, 366, 521, 544, 570, 590, 
	607, 622, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 322, 351, 
	354, 521, 544, 570, 578, 607, 610, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 325, 328, 329, 335, 341, 
	351, 357, 360, 361, 367, 373, 521, 544, 
	570, 581, 584, 585, 591, 597, 607, 613, 
	616, 617, 623, 629, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	321, 351, 353, 521, 544, 570, 577, 607, 
	609, 304, 313, 322, 346, 354, 378, 560, 
	569, 578, 602, 610, 634, 339, 351, 371, 
	521, 544, 570, 595, 607, 627, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 325, 351, 357, 521, 544, 570, 
	581, 607, 613, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 344, 
	351, 376, 521, 544, 570, 600, 607, 632, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 325, 351, 357, 521, 
	544, 570, 581, 607, 613, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 332, 351, 364, 521, 544, 570, 588, 
	607, 620, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 321, 324, 
	351, 353, 356, 521, 544, 570, 577, 580, 
	607, 609, 612, 304, 313, 322, 346, 354, 
	378, 560, 569, 578, 602, 610, 634, 324, 
	351, 356, 521, 544, 570, 580, 607, 612, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 334, 351, 366, 521, 
	544, 570, 590, 607, 622, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 336, 351, 368, 521, 544, 570, 592, 
	607, 624, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 322, 339, 
	351, 354, 371, 521, 544, 570, 578, 595, 
	607, 610, 627, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 332, 
	351, 364, 521, 544, 570, 588, 607, 620, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 329, 351, 361, 521, 
	544, 570, 585, 607, 617, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 323, 351, 355, 521, 544, 570, 579, 
	607, 611, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 328, 351, 
	360, 521, 544, 570, 584, 607, 616, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 324, 325, 332, 338, 339, 
	351, 356, 357, 364, 370, 371, 521, 544, 
	570, 580, 581, 588, 594, 595, 607, 612, 
	613, 620, 626, 627, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	333, 351, 365, 521, 544, 570, 589, 607, 
	621, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 335, 351, 367, 
	521, 544, 570, 591, 607, 623, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 324, 351, 356, 521, 544, 570, 
	580, 607, 612, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 325, 
	351, 357, 521, 544, 570, 581, 607, 613, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 339, 340, 351, 371, 
	372, 521, 544, 570, 595, 596, 607, 627, 
	628, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 329, 334, 351, 
	361, 366, 521, 544, 570, 585, 590, 607, 
	617, 622, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 321, 323, 
	324, 351, 353, 355, 356, 521, 544, 570, 
	577, 579, 580, 607, 609, 611, 612, 304, 
	313, 322, 346, 354, 378, 560, 569, 578, 
	602, 610, 634, 39, 351, 521, 544, 570, 
	607, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 321, 351, 353, 
	521, 544, 570, 577, 607, 609, 304, 313, 
	322, 346, 354, 378, 560, 569, 578, 602, 
	610, 634, 39, 351, 521, 544, 570, 607, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 321, 323, 324, 351, 
	353, 355, 356, 521, 544, 570, 577, 579, 
	580, 607, 609, 611, 612, 304, 313, 322, 
	346, 354, 378, 560, 569, 578, 602, 610, 
	634, 39, 351, 521, 544, 570, 607, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 321, 351, 353, 521, 544, 
	570, 577, 607, 609, 304, 313, 322, 346, 
	354, 378, 560, 569, 578, 602, 610, 634, 
	39, 351, 521, 544, 570, 607, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 340, 351, 372, 521, 544, 570, 
	596, 607, 628, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 322, 
	323, 325, 332, 336, 338, 341, 343, 345, 
	351, 354, 355, 357, 364, 368, 370, 373, 
	375, 377, 521, 544, 570, 578, 579, 581, 
	588, 592, 594, 597, 599, 601, 607, 610, 
	611, 613, 620, 624, 626, 629, 631, 633, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 323, 351, 355, 521, 
	544, 570, 579, 607, 611, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 326, 351, 358, 521, 544, 570, 582, 
	607, 614, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 39, 351, 
	521, 544, 570, 607, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	323, 340, 351, 355, 372, 521, 544, 570, 
	579, 596, 607, 611, 628, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 340, 351, 372, 521, 544, 570, 596, 
	607, 628, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 329, 351, 
	361, 521, 544, 570, 585, 607, 617, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 335, 351, 367, 521, 544, 
	570, 591, 607, 623, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	334, 351, 366, 521, 544, 570, 590, 607, 
	622, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 321, 341, 351, 
	353, 373, 521, 544, 570, 577, 597, 607, 
	609, 629, 304, 313, 322, 346, 354, 378, 
	560, 569, 578, 602, 610, 634, 325, 351, 
	357, 521, 544, 570, 581, 607, 613, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 339, 351, 371, 521, 544, 
	570, 595, 607, 627, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	338, 351, 370, 521, 544, 570, 594, 607, 
	626, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 321, 329, 332, 
	336, 351, 353, 361, 364, 368, 521, 544, 
	570, 577, 585, 588, 592, 607, 609, 617, 
	620, 624, 304, 313, 322, 346, 354, 378, 
	560, 569, 578, 602, 610, 634, 321, 332, 
	351, 353, 364, 521, 544, 570, 577, 588, 
	607, 609, 620, 304, 313, 322, 346, 354, 
	378, 560, 569, 578, 602, 610, 634, 322, 
	338, 351, 354, 370, 521, 544, 570, 578, 
	594, 607, 610, 626, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	325, 351, 357, 521, 544, 570, 581, 607, 
	613, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 339, 351, 371, 
	521, 544, 570, 595, 607, 627, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 321, 351, 353, 521, 544, 570, 
	577, 607, 609, 304, 313, 322, 346, 354, 
	378, 560, 569, 578, 602, 610, 634, 336, 
	351, 368, 521, 544, 570, 592, 607, 624, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 334, 351, 366, 521, 
	544, 570, 590, 607, 622, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 329, 351, 361, 521, 544, 570, 585, 
	607, 617, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 322, 351, 
	354, 521, 544, 570, 578, 607, 610, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 339, 351, 371, 521, 544, 
	570, 595, 607, 627, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	323, 351, 355, 521, 544, 570, 579, 607, 
	611, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 321, 351, 353, 
	521, 544, 570, 577, 607, 609, 304, 313, 
	322, 346, 354, 378, 560, 569, 578, 602, 
	610, 634, 332, 351, 364, 521, 544, 570, 
	588, 607, 620, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 332, 
	351, 364, 521, 544, 570, 588, 607, 620, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 325, 339, 351, 357, 
	371, 521, 544, 570, 581, 595, 607, 613, 
	627, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 339, 351, 371, 
	521, 544, 570, 595, 607, 627, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 340, 351, 372, 521, 544, 570, 
	596, 607, 628, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 340, 
	351, 372, 521, 544, 570, 596, 607, 628, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 329, 351, 361, 521, 
	544, 570, 585, 607, 617, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 335, 351, 367, 521, 544, 570, 591, 
	607, 623, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 333, 334, 
	351, 365, 366, 521, 544, 570, 589, 590, 
	607, 621, 622, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 321, 
	339, 351, 353, 371, 521, 544, 570, 577, 
	595, 607, 609, 627, 304, 313, 322, 346, 
	354, 378, 560, 569, 578, 602, 610, 634, 
	324, 351, 356, 521, 544, 570, 580, 607, 
	612, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 325, 351, 357, 
	521, 544, 570, 581, 607, 613, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 326, 351, 358, 521, 544, 570, 
	582, 607, 614, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 329, 
	351, 361, 521, 544, 570, 585, 607, 617, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 334, 351, 366, 521, 
	544, 570, 590, 607, 622, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 325, 351, 357, 521, 544, 570, 581, 
	607, 613, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 324, 332, 
	335, 336, 338, 351, 356, 364, 367, 368, 
	370, 521, 544, 570, 580, 588, 591, 592, 
	594, 607, 612, 620, 623, 624, 626, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 325, 351, 357, 521, 544, 
	570, 581, 607, 613, 304, 313, 321, 346, 
	353, 378, 560, 569, 577, 602, 609, 634, 
	326, 351, 358, 521, 544, 570, 582, 607, 
	614, 304, 313, 321, 346, 353, 378, 560, 
	569, 577, 602, 609, 634, 329, 351, 361, 
	521, 544, 570, 585, 607, 617, 304, 313, 
	321, 346, 353, 378, 560, 569, 577, 602, 
	609, 634, 322, 351, 354, 521, 544, 570, 
	578, 607, 610, 304, 313, 321, 346, 353, 
	378, 560, 569, 577, 602, 609, 634, 338, 
	351, 370, 521, 544, 570, 594, 607, 626, 
	304, 313, 321, 346, 353, 378, 560, 569, 
	577, 602, 609, 634, 323, 351, 355, 521, 
	544, 570, 579, 607, 611, 304, 313, 321, 
	346, 353, 378, 560, 569, 577, 602, 609, 
	634, 325, 351, 357, 521, 544, 570, 581, 
	607, 613, 304, 313, 321, 346, 353, 378, 
	560, 569, 577, 602, 609, 634, 326, 351, 
	358, 521, 544, 570, 582, 607, 614, 304, 
	313, 321, 346, 353, 378, 560, 569, 577, 
	602, 609, 634, 0
};
static const char _lexer_single_lengths[] = {
	0, 2, 3, 14, 2, 5, 5, 2, 
	5, 2, 5, 4, 5, 5, 2, 5, 
	2, 0, 8, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 4, 2, 
	2, 2, 7, 8, 3, 3, 126, 1, 
	0, 1, 0, 1, 14, 1, 6, 4, 
	2, 2, 2, 0, 1, 3, 1, 2, 
	1, 13, 1, 2, 5, 2, 5, 3, 
	3, 3, 3, 3, 3, 3, 8, 2, 
	5, 3, 3, 3, 3, 3, 10, 3, 
	3, 1, 5, 3, 3, 3, 3, 2, 
	7, 3, 3, 2, 3, 3, 3, 3, 
	14, 3, 10, 21, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 2, 2, 
	10, 3, 5, 3, 5, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 5, 3, 
	3, 3, 6, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 6, 3, 3, 
	2, 19, 3, 3, 5, 3, 3, 3, 
	3, 3, 3, 10, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 5, 5, 3, 
	3, 3, 3, 5, 5, 5, 12, 9, 
	7, 3, 3, 7, 5, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 5, 3, 
	7, 5, 3, 5, 3, 3, 5, 3, 
	11, 3, 3, 3, 3, 3, 3, 9, 
	3, 3, 3, 3, 3, 11, 5, 3, 
	3, 3, 3, 3, 7, 3, 5, 5, 
	3, 5, 3, 3, 6, 3, 3, 11, 
	3, 3, 3, 3, 3, 3, 5, 3, 
	3, 3, 5, 3, 3, 3, 3, 11, 
	3, 3, 3, 3, 5, 5, 7, 2, 
	3, 2, 7, 2, 3, 2, 3, 19, 
	3, 3, 2, 5, 3, 3, 3, 3, 
	5, 3, 3, 3, 9, 5, 5, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 5, 3, 3, 3, 3, 
	3, 5, 5, 3, 3, 3, 3, 3, 
	3, 11, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 1, 28, 5, 7, 13, 
	6, 13, 9, 9, 9, 9, 9, 9, 
	9, 18, 6, 13, 9, 9, 9, 9, 
	9, 22, 9, 9, 5, 13, 9, 9, 
	9, 9, 6, 17, 9, 9, 6, 9, 
	9, 9, 9, 30, 9, 22, 45, 9, 
	9, 9, 9, 9, 9, 9, 9, 9, 
	9, 9, 9, 9, 9, 9, 9, 9, 
	9, 6, 6, 22, 9, 13, 9, 13, 
	9, 9, 9, 9, 9, 9, 9, 9, 
	9, 13, 9, 9, 9, 14, 9, 9, 
	9, 9, 9, 9, 9, 9, 9, 9, 
	14, 9, 9, 6, 41, 9, 9, 13, 
	9, 9, 9, 9, 9, 9, 23, 9, 
	9, 9, 9, 9, 9, 9, 9, 9, 
	13, 13, 9, 9, 9, 9, 13, 13, 
	13, 26, 21, 17, 9, 9, 17, 13, 
	9, 9, 9, 9, 9, 9, 9, 9, 
	9, 13, 9, 17, 13, 9, 13, 9, 
	9, 13, 9, 25, 9, 9, 9, 9, 
	9, 9, 21, 9, 9, 9, 9, 9, 
	25, 13, 9, 9, 9, 9, 9, 17, 
	9, 13, 13, 9, 13, 9, 9, 15, 
	9, 9, 25, 9, 9, 9, 9, 9, 
	9, 13, 9, 9, 9, 13, 9, 9, 
	9, 9, 25, 9, 9, 9, 9, 13, 
	13, 17, 6, 9, 6, 17, 6, 9, 
	6, 9, 41, 9, 9, 6, 13, 9, 
	9, 9, 9, 13, 9, 9, 9, 21, 
	13, 13, 9, 9, 9, 9, 9, 9, 
	9, 9, 9, 9, 9, 9, 13, 9, 
	9, 9, 9, 9, 13, 13, 9, 9, 
	9, 9, 9, 9, 25, 9, 9, 9, 
	9, 9, 9, 9, 9
};
static const char _lexer_range_lengths[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	3, 3, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 2, 0, 6, 0, 
	3, 1, 1, 0, 0, 0, 4, 4, 
	3, 3, 4, 3, 0, 0, 0, 0, 
	0, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 2, 3, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6, 6, 6, 6, 
	6, 6, 6, 6, 6
};
static const short _lexer_index_offsets[] = {
	0, 0, 3, 7, 22, 25, 31, 37, 
	40, 46, 49, 55, 60, 66, 72, 75, 
	81, 87, 91, 100, 103, 106, 109, 112, 
	115, 118, 121, 124, 127, 130, 133, 138, 
	141, 144, 147, 155, 164, 170, 174, 307, 
	309, 313, 316, 318, 320, 335, 337, 348, 
	357, 363, 369, 376, 380, 382, 386, 388, 
	391, 393, 410, 415, 421, 430, 436, 445, 
	452, 459, 466, 473, 480, 487, 494, 506, 
	512, 521, 528, 535, 542, 549, 556, 570, 
	577, 584, 589, 598, 605, 612, 619, 626, 
	632, 643, 650, 657, 663, 670, 677, 684, 
	691, 709, 716, 730, 755, 762, 769, 776, 
	783, 790, 797, 804, 811, 818, 825, 832, 
	839, 846, 853, 860, 867, 874, 881, 887, 
	893, 907, 914, 923, 930, 939, 946, 953, 
	960, 967, 974, 981, 988, 995, 1002, 1011, 
	1018, 1025, 1032, 1042, 1049, 1056, 1063, 1070, 
	1077, 1084, 1091, 1098, 1105, 1112, 1122, 1129, 
	1136, 1142, 1165, 1172, 1179, 1188, 1195, 1202, 
	1209, 1216, 1223, 1230, 1244, 1251, 1258, 1265, 
	1272, 1279, 1286, 1293, 1300, 1307, 1316, 1325, 
	1332, 1339, 1346, 1353, 1362, 1371, 1380, 1396, 
	1409, 1420, 1427, 1434, 1445, 1454, 1461, 1468, 
	1475, 1482, 1489, 1496, 1503, 1510, 1517, 1526, 
	1533, 1544, 1553, 1560, 1569, 1576, 1583, 1592, 
	1599, 1614, 1621, 1628, 1635, 1642, 1649, 1656, 
	1669, 1676, 1683, 1690, 1697, 1704, 1719, 1728, 
	1735, 1742, 1749, 1756, 1763, 1774, 1781, 1790, 
	1799, 1806, 1815, 1822, 1829, 1839, 1846, 1853, 
	1868, 1875, 1882, 1889, 1896, 1903, 1910, 1919, 
	1926, 1933, 1940, 1949, 1956, 1963, 1970, 1977, 
	1992, 1999, 2006, 2013, 2020, 2029, 2038, 2049, 
	2055, 2062, 2068, 2079, 2085, 2092, 2098, 2105, 
	2128, 2135, 2142, 2148, 2157, 2164, 2171, 2178, 
	2185, 2194, 2201, 2208, 2215, 2228, 2237, 2246, 
	2253, 2260, 2267, 2274, 2281, 2288, 2295, 2302, 
	2309, 2316, 2323, 2330, 2339, 2346, 2353, 2360, 
	2367, 2374, 2383, 2392, 2399, 2406, 2413, 2420, 
	2427, 2434, 2449, 2456, 2463, 2470, 2477, 2484, 
	2491, 2498, 2505, 2511, 2516, 2551, 2563, 2577, 
	2597, 2610, 2630, 2646, 2662, 2678, 2694, 2710, 
	2726, 2742, 2767, 2780, 2800, 2816, 2832, 2848, 
	2864, 2880, 2909, 2925, 2941, 2953, 2973, 2989, 
	3005, 3021, 3037, 3050, 3074, 3090, 3106, 3119, 
	3135, 3151, 3167, 3183, 3220, 3236, 3265, 3317, 
	3333, 3349, 3365, 3381, 3397, 3413, 3429, 3445, 
	3461, 3477, 3493, 3509, 3525, 3541, 3557, 3573, 
	3589, 3605, 3618, 3631, 3660, 3676, 3696, 3712, 
	3732, 3748, 3764, 3780, 3796, 3812, 3828, 3844, 
	3860, 3876, 3896, 3912, 3928, 3944, 3965, 3981, 
	3997, 4013, 4029, 4045, 4061, 4077, 4093, 4109, 
	4125, 4146, 4162, 4178, 4191, 4239, 4255, 4271, 
	4291, 4307, 4323, 4339, 4355, 4371, 4387, 4417, 
	4433, 4449, 4465, 4481, 4497, 4513, 4529, 4545, 
	4561, 4581, 4601, 4617, 4633, 4649, 4665, 4685, 
	4705, 4725, 4758, 4786, 4810, 4826, 4842, 4866, 
	4886, 4902, 4918, 4934, 4950, 4966, 4982, 4998, 
	5014, 5030, 5050, 5066, 5090, 5110, 5126, 5146, 
	5162, 5178, 5198, 5214, 5246, 5262, 5278, 5294, 
	5310, 5326, 5342, 5370, 5386, 5402, 5418, 5434, 
	5450, 5482, 5502, 5518, 5534, 5550, 5566, 5582, 
	5606, 5622, 5642, 5662, 5678, 5698, 5714, 5730, 
	5752, 5768, 5784, 5816, 5832, 5848, 5864, 5880, 
	5896, 5912, 5932, 5948, 5964, 5980, 6000, 6016, 
	6032, 6048, 6064, 6096, 6112, 6128, 6144, 6160, 
	6180, 6200, 6224, 6237, 6253, 6266, 6290, 6303, 
	6319, 6332, 6348, 6396, 6412, 6428, 6441, 6461, 
	6477, 6493, 6509, 6525, 6545, 6561, 6577, 6593, 
	6621, 6641, 6661, 6677, 6693, 6709, 6725, 6741, 
	6757, 6773, 6789, 6805, 6821, 6837, 6853, 6873, 
	6889, 6905, 6921, 6937, 6953, 6973, 6993, 7009, 
	7025, 7041, 7057, 7073, 7089, 7121, 7137, 7153, 
	7169, 7185, 7201, 7217, 7233
};
static const short _lexer_indicies[] = {
	1, 1, 0, 2, 1, 1, 0, 4, 
	4, 5, 6, 7, 8, 9, 10, 5, 
	6, 7, 8, 9, 10, 3, 11, 11, 
	3, 11, 11, 12, 12, 12, 3, 6, 
	6, 13, 13, 13, 3, 14, 14, 3, 
	14, 14, 15, 15, 15, 3, 16, 16, 
	3, 16, 16, 17, 17, 17, 3, 18, 
	19, 18, 19, 3, 18, 18, 20, 20, 
	20, 3, 19, 19, 21, 21, 21, 3, 
	22, 22, 3, 22, 22, 23, 23, 23, 
	3, 25, 25, 24, 24, 24, 0, 27, 
	27, 27, 26, 29, 30, 31, 32, 29, 
	30, 31, 32, 28, 33, 33, 28, 34, 
	34, 28, 35, 35, 28, 36, 36, 28, 
	37, 37, 28, 38, 38, 28, 39, 39, 
	28, 40, 40, 28, 41, 41, 28, 42, 
	42, 28, 43, 43, 28, 44, 45, 44, 
	45, 28, 46, 46, 28, 47, 47, 28, 
	48, 48, 28, 49, 50, 51, 52, 53, 
	54, 55, 28, 56, 57, 58, 59, 56, 
	57, 58, 59, 28, 61, 61, 62, 62, 
	62, 60, 63, 63, 64, 0, 66, 67, 
	68, 69, 70, 71, 72, 73, 74, 75, 
	76, 77, 78, 79, 80, 82, 83, 85, 
	86, 87, 88, 89, 90, 91, 92, 93, 
	94, 95, 93, 96, 97, 98, 99, 65, 
	100, 101, 102, 103, 104, 105, 106, 107, 
	108, 109, 110, 112, 113, 114, 115, 116, 
	117, 118, 119, 120, 121, 122, 123, 111, 
	101, 102, 103, 104, 105, 106, 107, 108, 
	109, 110, 112, 113, 114, 115, 116, 117, 
	118, 119, 120, 121, 122, 123, 124, 125, 
	126, 127, 128, 129, 130, 131, 132, 133, 
	134, 136, 137, 138, 139, 140, 141, 142, 
	143, 144, 145, 146, 147, 135, 125, 126, 
	127, 128, 129, 130, 131, 132, 133, 134, 
	136, 137, 138, 139, 140, 141, 142, 143, 
	144, 145, 146, 147, 65, 84, 111, 111, 
	135, 135, 81, 149, 148, 150, 150, 150, 
	0, 151, 152, 0, 152, 153, 155, 154, 
	4, 4, 5, 6, 7, 8, 9, 10, 
	5, 6, 7, 8, 9, 10, 156, 158, 
	157, 160, 25, 161, 160, 25, 161, 83, 
	84, 24, 24, 159, 162, 25, 162, 25, 
	83, 84, 24, 24, 159, 25, 25, 84, 
	24, 24, 159, 25, 25, 24, 24, 24, 
	163, 25, 25, 164, 24, 24, 24, 0, 
	27, 27, 27, 165, 166, 86, 168, 169, 
	170, 167, 172, 171, 174, 175, 173, 177, 
	176, 179, 180, 181, 182, 183, 184, 185, 
	111, 181, 182, 183, 184, 185, 111, 111, 
	111, 178, 111, 111, 111, 111, 0, 187, 
	111, 111, 111, 111, 186, 188, 189, 111, 
	188, 189, 111, 111, 111, 186, 191, 111, 
	111, 111, 111, 190, 192, 193, 111, 192, 
	193, 111, 111, 111, 186, 194, 111, 194, 
	111, 111, 111, 186, 195, 111, 195, 111, 
	111, 111, 186, 196, 111, 196, 111, 111, 
	111, 186, 197, 111, 197, 111, 111, 111, 
	186, 198, 111, 198, 111, 111, 111, 186, 
	199, 111, 199, 111, 111, 111, 186, 200, 
	111, 200, 111, 111, 111, 186, 202, 203, 
	204, 205, 111, 203, 204, 205, 111, 111, 
	111, 201, 207, 111, 111, 111, 111, 206, 
	208, 209, 111, 208, 209, 111, 111, 111, 
	186, 210, 111, 210, 111, 111, 111, 186, 
	211, 111, 211, 111, 111, 111, 186, 212, 
	111, 212, 111, 111, 111, 186, 213, 111, 
	213, 111, 111, 111, 186, 214, 111, 214, 
	111, 111, 111, 186, 216, 217, 218, 219, 
	220, 221, 217, 218, 219, 220, 111, 111, 
	111, 215, 222, 111, 222, 111, 111, 111, 
	186, 223, 111, 223, 111, 111, 111, 186, 
	225, 111, 111, 111, 224, 226, 227, 111, 
	226, 227, 111, 111, 111, 186, 228, 111, 
	228, 111, 111, 111, 186, 229, 111, 229, 
	111, 111, 111, 186, 230, 111, 230, 111, 
	111, 111, 186, 231, 111, 231, 111, 111, 
	111, 186, 233, 111, 111, 111, 111, 232, 
	235, 236, 237, 111, 235, 236, 237, 111, 
	111, 111, 234, 239, 111, 239, 111, 111, 
	111, 238, 241, 111, 241, 111, 111, 111, 
	240, 242, 111, 111, 111, 111, 186, 243, 
	111, 243, 111, 111, 111, 186, 244, 111, 
	244, 111, 111, 111, 186, 245, 111, 245, 
	111, 111, 111, 186, 246, 111, 246, 111, 
	111, 111, 186, 248, 249, 250, 251, 252, 
	253, 254, 111, 249, 250, 251, 252, 253, 
	254, 111, 111, 111, 247, 255, 111, 255, 
	111, 111, 111, 186, 257, 258, 259, 260, 
	261, 111, 258, 259, 260, 261, 111, 111, 
	111, 256, 262, 263, 264, 265, 266, 267, 
	268, 269, 270, 271, 111, 262, 263, 264, 
	265, 266, 267, 268, 269, 270, 271, 111, 
	111, 111, 186, 272, 111, 272, 111, 111, 
	111, 186, 273, 111, 273, 111, 111, 111, 
	186, 274, 111, 274, 111, 111, 111, 186, 
	275, 111, 275, 111, 111, 111, 186, 276, 
	111, 276, 111, 111, 111, 186, 277, 111, 
	277, 111, 111, 111, 186, 278, 111, 278, 
	111, 111, 111, 186, 279, 111, 279, 111, 
	111, 111, 186, 280, 111, 280, 111, 111, 
	111, 186, 281, 111, 281, 111, 111, 111, 
	186, 282, 111, 282, 111, 111, 111, 186, 
	283, 111, 283, 111, 111, 111, 186, 284, 
	111, 284, 111, 111, 111, 186, 285, 111, 
	285, 111, 111, 111, 186, 286, 111, 286, 
	111, 111, 111, 186, 287, 111, 287, 111, 
	111, 111, 186, 288, 111, 288, 111, 111, 
	111, 186, 289, 111, 289, 111, 111, 111, 
	186, 290, 111, 111, 111, 111, 186, 291, 
	111, 111, 111, 111, 186, 293, 294, 295, 
	296, 297, 111, 294, 295, 296, 297, 111, 
	111, 111, 292, 299, 111, 299, 111, 111, 
	111, 298, 300, 301, 111, 300, 301, 111, 
	111, 111, 186, 302, 111, 302, 111, 111, 
	111, 186, 304, 305, 111, 304, 305, 111, 
	111, 111, 303, 306, 111, 306, 111, 111, 
	111, 186, 307, 111, 307, 111, 111, 111, 
	186, 308, 111, 308, 111, 111, 111, 186, 
	309, 111, 309, 111, 111, 111, 186, 310, 
	111, 310, 111, 111, 111, 186, 311, 111, 
	311, 111, 111, 111, 186, 312, 111, 312, 
	111, 111, 111, 186, 313, 111, 313, 111, 
	111, 111, 186, 314, 111, 314, 111, 111, 
	111, 186, 316, 317, 111, 316, 317, 111, 
	111, 111, 315, 318, 111, 318, 111, 111, 
	111, 186, 319, 111, 319, 111, 111, 111, 
	186, 320, 111, 320, 111, 111, 111, 186, 
	322, 323, 324, 111, 323, 324, 111, 111, 
	111, 321, 325, 111, 325, 111, 111, 111, 
	186, 326, 111, 326, 111, 111, 111, 186, 
	328, 111, 328, 111, 111, 111, 327, 329, 
	111, 329, 111, 111, 111, 186, 330, 111, 
	330, 111, 111, 111, 186, 331, 111, 331, 
	111, 111, 111, 186, 332, 111, 332, 111, 
	111, 111, 186, 333, 111, 333, 111, 111, 
	111, 186, 334, 111, 334, 111, 111, 111, 
	186, 335, 111, 335, 111, 111, 111, 186, 
	337, 338, 339, 111, 338, 339, 111, 111, 
	111, 336, 340, 111, 340, 111, 111, 111, 
	186, 341, 111, 341, 111, 111, 111, 186, 
	343, 111, 111, 111, 111, 342, 345, 346, 
	347, 348, 349, 350, 351, 352, 353, 111, 
	345, 346, 347, 348, 349, 350, 351, 352, 
	353, 111, 111, 111, 344, 354, 111, 354, 
	111, 111, 111, 186, 355, 111, 355, 111, 
	111, 111, 186, 357, 358, 111, 357, 358, 
	111, 111, 111, 356, 359, 111, 359, 111, 
	111, 111, 186, 360, 111, 360, 111, 111, 
	111, 186, 361, 111, 361, 111, 111, 111, 
	186, 362, 111, 362, 111, 111, 111, 186, 
	363, 111, 363, 111, 111, 111, 186, 364, 
	111, 364, 111, 111, 111, 186, 366, 367, 
	368, 369, 370, 111, 367, 368, 369, 370, 
	111, 111, 111, 365, 372, 111, 372, 111, 
	111, 111, 371, 373, 111, 373, 111, 111, 
	111, 186, 374, 111, 374, 111, 111, 111, 
	186, 375, 111, 375, 111, 111, 111, 186, 
	377, 111, 377, 111, 111, 111, 376, 379, 
	111, 379, 111, 111, 111, 378, 380, 111, 
	380, 111, 111, 111, 186, 381, 111, 381, 
	111, 111, 111, 186, 382, 111, 382, 111, 
	111, 111, 186, 383, 384, 111, 383, 384, 
	111, 111, 111, 186, 386, 387, 111, 386, 
	387, 111, 111, 111, 385, 388, 111, 388, 
	111, 111, 111, 186, 389, 111, 389, 111, 
	111, 111, 186, 390, 111, 390, 111, 111, 
	111, 186, 391, 111, 391, 111, 111, 111, 
	186, 393, 394, 111, 393, 394, 111, 111, 
	111, 392, 396, 397, 111, 396, 397, 111, 
	111, 111, 395, 398, 399, 111, 398, 399, 
	111, 111, 111, 186, 401, 402, 403, 404, 
	405, 406, 111, 402, 403, 404, 405, 406, 
	111, 111, 111, 400, 408, 409, 410, 411, 
	111, 408, 409, 410, 411, 111, 111, 111, 
	407, 413, 414, 415, 111, 413, 414, 415, 
	111, 111, 111, 412, 417, 111, 417, 111, 
	111, 111, 416, 418, 111, 418, 111, 111, 
	111, 186, 420, 421, 422, 111, 420, 421, 
	422, 111, 111, 111, 419, 424, 425, 111, 
	424, 425, 111, 111, 111, 423, 426, 111, 
	426, 111, 111, 111, 186, 427, 111, 427, 
	111, 111, 111, 186, 428, 111, 428, 111, 
	111, 111, 186, 429, 111, 429, 111, 111, 
	111, 186, 430, 111, 430, 111, 111, 111, 
	186, 432, 111, 432, 111, 111, 111, 431, 
	433, 111, 433, 111, 111, 111, 186, 434, 
	111, 434, 111, 111, 111, 186, 435, 111, 
	435, 111, 111, 111, 186, 436, 437, 111, 
	436, 437, 111, 111, 111, 186, 438, 111, 
	438, 111, 111, 111, 186, 439, 440, 441, 
	111, 439, 440, 441, 111, 111, 111, 186, 
	442, 443, 111, 442, 443, 111, 111, 111, 
	186, 444, 111, 444, 111, 111, 111, 186, 
	445, 446, 111, 445, 446, 111, 111, 111, 
	186, 447, 111, 447, 111, 111, 111, 186, 
	448, 111, 448, 111, 111, 111, 186, 449, 
	450, 111, 449, 450, 111, 111, 111, 186, 
	451, 111, 451, 111, 111, 111, 186, 453, 
	454, 455, 456, 457, 111, 453, 454, 455, 
	456, 457, 111, 111, 111, 452, 458, 111, 
	458, 111, 111, 111, 186, 459, 111, 459, 
	111, 111, 111, 186, 460, 111, 460, 111, 
	111, 111, 186, 461, 111, 461, 111, 111, 
	111, 186, 462, 111, 462, 111, 111, 111, 
	186, 463, 111, 463, 111, 111, 111, 186, 
	465, 466, 467, 468, 469, 470, 471, 472, 
	111, 111, 111, 111, 464, 473, 111, 473, 
	111, 111, 111, 186, 474, 111, 474, 111, 
	111, 111, 186, 475, 111, 475, 111, 111, 
	111, 186, 476, 111, 476, 111, 111, 111, 
	186, 477, 111, 477, 111, 111, 111, 186, 
	478, 479, 480, 481, 482, 111, 478, 479, 
	480, 481, 482, 111, 111, 111, 186, 483, 
	484, 111, 483, 484, 111, 111, 111, 186, 
	485, 111, 485, 111, 111, 111, 186, 486, 
	111, 486, 111, 111, 111, 186, 487, 111, 
	487, 111, 111, 111, 186, 488, 111, 488, 
	111, 111, 111, 186, 489, 111, 489, 111, 
	111, 111, 186, 490, 491, 492, 111, 490, 
	491, 492, 111, 111, 111, 186, 494, 111, 
	494, 111, 111, 111, 493, 495, 496, 111, 
	495, 496, 111, 111, 111, 186, 497, 498, 
	111, 497, 498, 111, 111, 111, 186, 500, 
	111, 500, 111, 111, 111, 499, 501, 502, 
	111, 501, 502, 111, 111, 111, 186, 504, 
	111, 504, 111, 111, 111, 503, 505, 111, 
	505, 111, 111, 111, 186, 507, 508, 509, 
	111, 508, 509, 111, 111, 111, 506, 511, 
	111, 511, 111, 111, 111, 510, 512, 111, 
	512, 111, 111, 111, 186, 514, 515, 516, 
	517, 518, 111, 514, 515, 516, 517, 518, 
	111, 111, 111, 513, 519, 111, 519, 111, 
	111, 111, 186, 520, 111, 520, 111, 111, 
	111, 186, 521, 111, 521, 111, 111, 111, 
	186, 522, 111, 522, 111, 111, 111, 186, 
	523, 111, 523, 111, 111, 111, 186, 524, 
	111, 524, 111, 111, 111, 186, 525, 526, 
	111, 525, 526, 111, 111, 111, 186, 527, 
	111, 527, 111, 111, 111, 186, 528, 111, 
	528, 111, 111, 111, 186, 530, 111, 530, 
	111, 111, 111, 529, 531, 532, 111, 531, 
	532, 111, 111, 111, 186, 533, 111, 533, 
	111, 111, 111, 186, 534, 111, 534, 111, 
	111, 111, 186, 535, 111, 535, 111, 111, 
	111, 186, 536, 111, 536, 111, 111, 111, 
	186, 538, 539, 540, 541, 542, 111, 538, 
	539, 540, 541, 542, 111, 111, 111, 537, 
	543, 111, 543, 111, 111, 111, 186, 544, 
	111, 544, 111, 111, 111, 186, 545, 111, 
	545, 111, 111, 111, 186, 546, 111, 546, 
	111, 111, 111, 186, 547, 548, 111, 547, 
	548, 111, 111, 111, 186, 550, 551, 111, 
	550, 551, 111, 111, 111, 549, 553, 554, 
	555, 111, 553, 554, 555, 111, 111, 111, 
	552, 557, 111, 111, 111, 111, 556, 559, 
	111, 559, 111, 111, 111, 558, 561, 111, 
	111, 111, 111, 560, 563, 564, 565, 111, 
	563, 564, 565, 111, 111, 111, 562, 567, 
	111, 111, 111, 111, 566, 569, 111, 569, 
	111, 111, 111, 568, 571, 111, 111, 111, 
	111, 570, 572, 111, 572, 111, 111, 111, 
	186, 573, 574, 575, 576, 577, 578, 579, 
	580, 581, 111, 573, 574, 575, 576, 577, 
	578, 579, 580, 581, 111, 111, 111, 186, 
	582, 111, 582, 111, 111, 111, 186, 583, 
	111, 583, 111, 111, 111, 186, 585, 111, 
	111, 111, 111, 584, 586, 587, 111, 586, 
	587, 111, 111, 111, 186, 588, 111, 588, 
	111, 111, 111, 186, 589, 111, 589, 111, 
	111, 111, 186, 590, 111, 590, 111, 111, 
	111, 186, 591, 111, 591, 111, 111, 111, 
	186, 593, 594, 111, 593, 594, 111, 111, 
	111, 592, 595, 111, 595, 111, 111, 111, 
	186, 596, 111, 596, 111, 111, 111, 186, 
	597, 111, 597, 111, 111, 111, 186, 598, 
	599, 600, 601, 111, 598, 599, 600, 601, 
	111, 111, 111, 186, 602, 603, 111, 602, 
	603, 111, 111, 111, 186, 605, 606, 111, 
	605, 606, 111, 111, 111, 604, 607, 111, 
	607, 111, 111, 111, 186, 608, 111, 608, 
	111, 111, 111, 186, 609, 111, 609, 111, 
	111, 111, 186, 610, 111, 610, 111, 111, 
	111, 186, 612, 111, 612, 111, 111, 111, 
	611, 613, 111, 613, 111, 111, 111, 186, 
	614, 111, 614, 111, 111, 111, 186, 615, 
	111, 615, 111, 111, 111, 186, 616, 111, 
	616, 111, 111, 111, 186, 617, 111, 617, 
	111, 111, 111, 186, 618, 111, 618, 111, 
	111, 111, 186, 619, 111, 619, 111, 111, 
	111, 186, 620, 621, 111, 620, 621, 111, 
	111, 111, 186, 622, 111, 622, 111, 111, 
	111, 186, 623, 111, 623, 111, 111, 111, 
	186, 624, 111, 624, 111, 111, 111, 186, 
	626, 111, 626, 111, 111, 111, 625, 627, 
	111, 627, 111, 111, 111, 186, 628, 629, 
	111, 628, 629, 111, 111, 111, 186, 630, 
	631, 111, 630, 631, 111, 111, 111, 186, 
	632, 111, 632, 111, 111, 111, 186, 633, 
	111, 633, 111, 111, 111, 186, 634, 111, 
	634, 111, 111, 111, 186, 635, 111, 635, 
	111, 111, 111, 186, 636, 111, 636, 111, 
	111, 111, 186, 637, 111, 637, 111, 111, 
	111, 186, 639, 640, 641, 642, 643, 111, 
	639, 640, 641, 642, 643, 111, 111, 111, 
	638, 644, 111, 644, 111, 111, 111, 186, 
	645, 111, 645, 111, 111, 111, 186, 646, 
	111, 646, 111, 111, 111, 186, 647, 111, 
	647, 111, 111, 111, 186, 648, 111, 648, 
	111, 111, 111, 186, 649, 111, 649, 111, 
	111, 111, 186, 650, 111, 650, 111, 111, 
	111, 186, 651, 111, 651, 111, 111, 111, 
	186, 61, 61, 62, 62, 62, 652, 62, 
	62, 62, 62, 653, 179, 180, 181, 182, 
	183, 184, 185, 111, 181, 182, 183, 184, 
	185, 63, 63, 654, 64, 655, 656, 657, 
	658, 659, 135, 655, 656, 657, 658, 659, 
	111, 111, 111, 135, 135, 135, 178, 111, 
	63, 63, 64, 135, 111, 111, 111, 135, 
	135, 135, 0, 187, 111, 63, 63, 660, 
	64, 135, 111, 111, 111, 135, 135, 135, 
	186, 188, 189, 111, 188, 189, 63, 63, 
	64, 661, 662, 135, 661, 662, 111, 111, 
	111, 135, 135, 135, 186, 191, 111, 63, 
	63, 64, 135, 111, 111, 111, 135, 135, 
	135, 190, 192, 193, 111, 192, 193, 63, 
	63, 64, 663, 664, 135, 663, 664, 111, 
	111, 111, 135, 135, 135, 186, 194, 111, 
	194, 63, 63, 64, 665, 135, 665, 111, 
	111, 111, 135, 135, 135, 186, 195, 111, 
	195, 63, 63, 64, 666, 135, 666, 111, 
	111, 111, 135, 135, 135, 186, 196, 111, 
	196, 63, 63, 64, 667, 135, 667, 111, 
	111, 111, 135, 135, 135, 186, 197, 111, 
	197, 63, 63, 64, 668, 135, 668, 111, 
	111, 111, 135, 135, 135, 186, 198, 111, 
	198, 63, 63, 64, 669, 135, 669, 111, 
	111, 111, 135, 135, 135, 186, 199, 111, 
	199, 63, 63, 64, 670, 135, 670, 111, 
	111, 111, 135, 135, 135, 186, 200, 111, 
	200, 63, 63, 64, 671, 135, 671, 111, 
	111, 111, 135, 135, 135, 186, 202, 203, 
	204, 205, 111, 203, 204, 205, 63, 63, 
	64, 672, 673, 674, 135, 672, 673, 674, 
	111, 111, 111, 135, 135, 135, 201, 207, 
	111, 63, 63, 64, 135, 111, 111, 111, 
	135, 135, 135, 206, 208, 209, 111, 208, 
	209, 63, 63, 64, 675, 676, 135, 675, 
	676, 111, 111, 111, 135, 135, 135, 186, 
	210, 111, 210, 63, 63, 64, 677, 135, 
	677, 111, 111, 111, 135, 135, 135, 186, 
	211, 111, 211, 63, 63, 64, 678, 135, 
	678, 111, 111, 111, 135, 135, 135, 186, 
	212, 111, 212, 63, 63, 64, 679, 135, 
	679, 111, 111, 111, 135, 135, 135, 186, 
	213, 111, 213, 63, 63, 64, 680, 135, 
	680, 111, 111, 111, 135, 135, 135, 186, 
	214, 111, 214, 63, 63, 64, 681, 135, 
	681, 111, 111, 111, 135, 135, 135, 186, 
	216, 217, 218, 219, 220, 221, 217, 218, 
	219, 220, 63, 63, 64, 682, 683, 684, 
	685, 686, 682, 683, 684, 685, 111, 111, 
	111, 135, 135, 135, 215, 222, 111, 222, 
	63, 63, 64, 687, 135, 687, 111, 111, 
	111, 135, 135, 135, 186, 223, 111, 223, 
	63, 63, 64, 688, 135, 688, 111, 111, 
	111, 135, 135, 135, 186, 225, 63, 63, 
	64, 689, 111, 111, 111, 135, 135, 135, 
	224, 226, 227, 111, 226, 227, 63, 63, 
	64, 690, 691, 135, 690, 691, 111, 111, 
	111, 135, 135, 135, 186, 228, 111, 228, 
	63, 63, 64, 692, 135, 692, 111, 111, 
	111, 135, 135, 135, 186, 229, 111, 229, 
	63, 63, 64, 693, 135, 693, 111, 111, 
	111, 135, 135, 135, 186, 230, 111, 230, 
	63, 63, 64, 694, 135, 694, 111, 111, 
	111, 135, 135, 135, 186, 231, 111, 231, 
	63, 63, 64, 695, 135, 695, 111, 111, 
	111, 135, 135, 135, 186, 233, 111, 63, 
	63, 64, 135, 111, 111, 111, 135, 135, 
	135, 232, 235, 236, 237, 111, 235, 236, 
	237, 63, 63, 64, 696, 697, 698, 135, 
	696, 697, 698, 111, 111, 111, 135, 135, 
	135, 234, 239, 111, 239, 63, 63, 64, 
	699, 135, 699, 111, 111, 111, 135, 135, 
	135, 238, 241, 111, 241, 63, 63, 64, 
	700, 135, 700, 111, 111, 111, 135, 135, 
	135, 240, 242, 111, 63, 63, 64, 135, 
	111, 111, 111, 135, 135, 135, 186, 243, 
	111, 243, 63, 63, 64, 701, 135, 701, 
	111, 111, 111, 135, 135, 135, 186, 244, 
	111, 244, 63, 63, 64, 702, 135, 702, 
	111, 111, 111, 135, 135, 135, 186, 245, 
	111, 245, 63, 63, 64, 703, 135, 703, 
	111, 111, 111, 135, 135, 135, 186, 246, 
	111, 246, 63, 63, 64, 704, 135, 704, 
	111, 111, 111, 135, 135, 135, 186, 248, 
	249, 250, 251, 252, 253, 254, 111, 249, 
	250, 251, 252, 253, 254, 63, 63, 64, 
	705, 706, 707, 708, 709, 710, 135, 705, 
	706, 707, 708, 709, 710, 111, 111, 111, 
	135, 135, 135, 247, 255, 111, 255, 63, 
	63, 64, 711, 135, 711, 111, 111, 111, 
	135, 135, 135, 186, 257, 258, 259, 260, 
	261, 111, 258, 259, 260, 261, 63, 63, 
	64, 712, 713, 714, 715, 135, 712, 713, 
	714, 715, 111, 111, 111, 135, 135, 135, 
	256, 262, 263, 264, 265, 266, 267, 268, 
	269, 270, 271, 111, 262, 263, 264, 265, 
	266, 267, 268, 269, 270, 271, 63, 63, 
	64, 716, 717, 718, 719, 720, 721, 722, 
	723, 724, 725, 135, 716, 717, 718, 719, 
	720, 721, 722, 723, 724, 725, 111, 111, 
	111, 135, 135, 135, 186, 272, 111, 272, 
	63, 63, 64, 726, 135, 726, 111, 111, 
	111, 135, 135, 135, 186, 273, 111, 273, 
	63, 63, 64, 727, 135, 727, 111, 111, 
	111, 135, 135, 135, 186, 274, 111, 274, 
	63, 63, 64, 728, 135, 728, 111, 111, 
	111, 135, 135, 135, 186, 275, 111, 275, 
	63, 63, 64, 729, 135, 729, 111, 111, 
	111, 135, 135, 135, 186, 276, 111, 276, 
	63, 63, 64, 730, 135, 730, 111, 111, 
	111, 135, 135, 135, 186, 277, 111, 277, 
	63, 63, 64, 731, 135, 731, 111, 111, 
	111, 135, 135, 135, 186, 278, 111, 278, 
	63, 63, 64, 732, 135, 732, 111, 111, 
	111, 135, 135, 135, 186, 279, 111, 279, 
	63, 63, 64, 733, 135, 733, 111, 111, 
	111, 135, 135, 135, 186, 280, 111, 280, 
	63, 63, 64, 734, 135, 734, 111, 111, 
	111, 135, 135, 135, 186, 281, 111, 281, 
	63, 63, 64, 735, 135, 735, 111, 111, 
	111, 135, 135, 135, 186, 282, 111, 282, 
	63, 63, 64, 736, 135, 736, 111, 111, 
	111, 135, 135, 135, 186, 283, 111, 283, 
	63, 63, 64, 737, 135, 737, 111, 111, 
	111, 135, 135, 135, 186, 284, 111, 284, 
	63, 63, 64, 738, 135, 738, 111, 111, 
	111, 135, 135, 135, 186, 285, 111, 285, 
	63, 63, 64, 739, 135, 739, 111, 111, 
	111, 135, 135, 135, 186, 286, 111, 286, 
	63, 63, 64, 740, 135, 740, 111, 111, 
	111, 135, 135, 135, 186, 287, 111, 287, 
	63, 63, 64, 741, 135, 741, 111, 111, 
	111, 135, 135, 135, 186, 288, 111, 288, 
	63, 63, 64, 742, 135, 742, 111, 111, 
	111, 135, 135, 135, 186, 289, 111, 289, 
	63, 63, 64, 743, 135, 743, 111, 111, 
	111, 135, 135, 135, 186, 290, 111, 63, 
	63, 64, 135, 111, 111, 111, 135, 135, 
	135, 186, 291, 111, 63, 63, 64, 135, 
	111, 111, 111, 135, 135, 135, 186, 293, 
	294, 295, 296, 297, 111, 294, 295, 296, 
	297, 63, 63, 64, 744, 745, 746, 747, 
	135, 744, 745, 746, 747, 111, 111, 111, 
	135, 135, 135, 292, 299, 111, 299, 63, 
	63, 64, 748, 135, 748, 111, 111, 111, 
	135, 135, 135, 298, 300, 301, 111, 300, 
	301, 63, 63, 64, 749, 750, 135, 749, 
	750, 111, 111, 111, 135, 135, 135, 186, 
	302, 111, 302, 63, 63, 64, 751, 135, 
	751, 111, 111, 111, 135, 135, 135, 186, 
	304, 305, 111, 304, 305, 63, 63, 64, 
	752, 753, 135, 752, 753, 111, 111, 111, 
	135, 135, 135, 303, 306, 111, 306, 63, 
	63, 64, 754, 135, 754, 111, 111, 111, 
	135, 135, 135, 186, 307, 111, 307, 63, 
	63, 64, 755, 135, 755, 111, 111, 111, 
	135, 135, 135, 186, 308, 111, 308, 63, 
	63, 64, 756, 135, 756, 111, 111, 111, 
	135, 135, 135, 186, 309, 111, 309, 63, 
	63, 64, 757, 135, 757, 111, 111, 111, 
	135, 135, 135, 186, 310, 111, 310, 63, 
	63, 64, 758, 135, 758, 111, 111, 111, 
	135, 135, 135, 186, 311, 111, 311, 63, 
	63, 64, 759, 135, 759, 111, 111, 111, 
	135, 135, 135, 186, 312, 111, 312, 63, 
	63, 64, 760, 135, 760, 111, 111, 111, 
	135, 135, 135, 186, 313, 111, 313, 63, 
	63, 64, 761, 135, 761, 111, 111, 111, 
	135, 135, 135, 186, 314, 111, 314, 63, 
	63, 64, 762, 135, 762, 111, 111, 111, 
	135, 135, 135, 186, 316, 317, 111, 316, 
	317, 63, 63, 64, 763, 764, 135, 763, 
	764, 111, 111, 111, 135, 135, 135, 315, 
	318, 111, 318, 63, 63, 64, 765, 135, 
	765, 111, 111, 111, 135, 135, 135, 186, 
	319, 111, 319, 63, 63, 64, 766, 135, 
	766, 111, 111, 111, 135, 135, 135, 186, 
	320, 111, 320, 63, 63, 64, 767, 135, 
	767, 111, 111, 111, 135, 135, 135, 186, 
	322, 323, 324, 111, 323, 324, 63, 63, 
	64, 768, 769, 135, 768, 769, 111, 111, 
	111, 135, 135, 135, 321, 325, 111, 325, 
	63, 63, 64, 770, 135, 770, 111, 111, 
	111, 135, 135, 135, 186, 326, 111, 326, 
	63, 63, 64, 771, 135, 771, 111, 111, 
	111, 135, 135, 135, 186, 328, 111, 328, 
	63, 63, 64, 772, 135, 772, 111, 111, 
	111, 135, 135, 135, 327, 329, 111, 329, 
	63, 63, 64, 773, 135, 773, 111, 111, 
	111, 135, 135, 135, 186, 330, 111, 330, 
	63, 63, 64, 774, 135, 774, 111, 111, 
	111, 135, 135, 135, 186, 331, 111, 331, 
	63, 63, 64, 775, 135, 775, 111, 111, 
	111, 135, 135, 135, 186, 332, 111, 332, 
	63, 63, 64, 776, 135, 776, 111, 111, 
	111, 135, 135, 135, 186, 333, 111, 333, 
	63, 63, 64, 777, 135, 777, 111, 111, 
	111, 135, 135, 135, 186, 334, 111, 334, 
	63, 63, 64, 778, 135, 778, 111, 111, 
	111, 135, 135, 135, 186, 335, 111, 335, 
	63, 63, 64, 779, 135, 779, 111, 111, 
	111, 135, 135, 135, 186, 337, 338, 339, 
	111, 338, 339, 63, 63, 64, 780, 781, 
	135, 780, 781, 111, 111, 111, 135, 135, 
	135, 336, 340, 111, 340, 63, 63, 64, 
	782, 135, 782, 111, 111, 111, 135, 135, 
	135, 186, 341, 111, 341, 63, 63, 64, 
	783, 135, 783, 111, 111, 111, 135, 135, 
	135, 186, 343, 111, 63, 63, 64, 135, 
	111, 111, 111, 135, 135, 135, 342, 345, 
	346, 347, 348, 349, 350, 351, 352, 353, 
	111, 345, 346, 347, 348, 349, 350, 351, 
	352, 353, 63, 63, 64, 784, 785, 786, 
	787, 788, 789, 790, 791, 792, 135, 784, 
	785, 786, 787, 788, 789, 790, 791, 792, 
	111, 111, 111, 135, 135, 135, 344, 354, 
	111, 354, 63, 63, 64, 793, 135, 793, 
	111, 111, 111, 135, 135, 135, 186, 355, 
	111, 355, 63, 63, 64, 794, 135, 794, 
	111, 111, 111, 135, 135, 135, 186, 357, 
	358, 111, 357, 358, 63, 63, 64, 795, 
	796, 135, 795, 796, 111, 111, 111, 135, 
	135, 135, 356, 359, 111, 359, 63, 63, 
	64, 797, 135, 797, 111, 111, 111, 135, 
	135, 135, 186, 360, 111, 360, 63, 63, 
	64, 798, 135, 798, 111, 111, 111, 135, 
	135, 135, 186, 361, 111, 361, 63, 63, 
	64, 799, 135, 799, 111, 111, 111, 135, 
	135, 135, 186, 362, 111, 362, 63, 63, 
	64, 800, 135, 800, 111, 111, 111, 135, 
	135, 135, 186, 363, 111, 363, 63, 63, 
	64, 801, 135, 801, 111, 111, 111, 135, 
	135, 135, 186, 364, 111, 364, 63, 63, 
	64, 802, 135, 802, 111, 111, 111, 135, 
	135, 135, 186, 366, 367, 368, 369, 370, 
	111, 367, 368, 369, 370, 63, 63, 803, 
	64, 804, 805, 806, 807, 135, 804, 805, 
	806, 807, 111, 111, 111, 135, 135, 135, 
	365, 372, 111, 372, 63, 63, 64, 808, 
	135, 808, 111, 111, 111, 135, 135, 135, 
	371, 373, 111, 373, 63, 63, 64, 809, 
	135, 809, 111, 111, 111, 135, 135, 135, 
	186, 374, 111, 374, 63, 63, 64, 810, 
	135, 810, 111, 111, 111, 135, 135, 135, 
	186, 375, 111, 375, 63, 63, 64, 811, 
	135, 811, 111, 111, 111, 135, 135, 135, 
	186, 377, 111, 377, 63, 63, 64, 812, 
	135, 812, 111, 111, 111, 135, 135, 135, 
	376, 379, 111, 379, 63, 63, 64, 813, 
	135, 813, 111, 111, 111, 135, 135, 135, 
	378, 380, 111, 380, 63, 63, 64, 814, 
	135, 814, 111, 111, 111, 135, 135, 135, 
	186, 381, 111, 381, 63, 63, 64, 815, 
	135, 815, 111, 111, 111, 135, 135, 135, 
	186, 382, 111, 382, 63, 63, 64, 816, 
	135, 816, 111, 111, 111, 135, 135, 135, 
	186, 383, 384, 111, 383, 384, 63, 63, 
	64, 817, 818, 135, 817, 818, 111, 111, 
	111, 135, 135, 135, 186, 386, 387, 111, 
	386, 387, 63, 63, 64, 819, 820, 135, 
	819, 820, 111, 111, 111, 135, 135, 135, 
	385, 388, 111, 388, 63, 63, 64, 821, 
	135, 821, 111, 111, 111, 135, 135, 135, 
	186, 389, 111, 389, 63, 63, 64, 822, 
	135, 822, 111, 111, 111, 135, 135, 135, 
	186, 390, 111, 390, 63, 63, 64, 823, 
	135, 823, 111, 111, 111, 135, 135, 135, 
	186, 391, 111, 391, 63, 63, 64, 824, 
	135, 824, 111, 111, 111, 135, 135, 135, 
	186, 393, 394, 111, 393, 394, 63, 63, 
	64, 825, 826, 135, 825, 826, 111, 111, 
	111, 135, 135, 135, 392, 396, 397, 111, 
	396, 397, 63, 63, 64, 827, 828, 135, 
	827, 828, 111, 111, 111, 135, 135, 135, 
	395, 398, 399, 111, 398, 399, 63, 63, 
	64, 829, 830, 135, 829, 830, 111, 111, 
	111, 135, 135, 135, 186, 401, 402, 403, 
	404, 405, 406, 111, 402, 403, 404, 405, 
	406, 63, 63, 64, 831, 832, 833, 834, 
	835, 135, 831, 832, 833, 834, 835, 111, 
	111, 111, 135, 135, 135, 400, 408, 409, 
	410, 411, 111, 408, 409, 410, 411, 63, 
	63, 64, 836, 837, 838, 839, 135, 836, 
	837, 838, 839, 111, 111, 111, 135, 135, 
	135, 407, 413, 414, 415, 111, 413, 414, 
	415, 63, 63, 64, 840, 841, 842, 135, 
	840, 841, 842, 111, 111, 111, 135, 135, 
	135, 412, 417, 111, 417, 63, 63, 64, 
	843, 135, 843, 111, 111, 111, 135, 135, 
	135, 416, 418, 111, 418, 63, 63, 64, 
	844, 135, 844, 111, 111, 111, 135, 135, 
	135, 186, 420, 421, 422, 111, 420, 421, 
	422, 63, 63, 64, 845, 846, 847, 135, 
	845, 846, 847, 111, 111, 111, 135, 135, 
	135, 419, 424, 425, 111, 424, 425, 63, 
	63, 64, 848, 849, 135, 848, 849, 111, 
	111, 111, 135, 135, 135, 423, 426, 111, 
	426, 63, 63, 64, 850, 135, 850, 111, 
	111, 111, 135, 135, 135, 186, 427, 111, 
	427, 63, 63, 64, 851, 135, 851, 111, 
	111, 111, 135, 135, 135, 186, 428, 111, 
	428, 63, 63, 64, 852, 135, 852, 111, 
	111, 111, 135, 135, 135, 186, 429, 111, 
	429, 63, 63, 64, 853, 135, 853, 111, 
	111, 111, 135, 135, 135, 186, 430, 111, 
	430, 63, 63, 64, 854, 135, 854, 111, 
	111, 111, 135, 135, 135, 186, 432, 111, 
	432, 63, 63, 64, 855, 135, 855, 111, 
	111, 111, 135, 135, 135, 431, 433, 111, 
	433, 63, 63, 64, 856, 135, 856, 111, 
	111, 111, 135, 135, 135, 186, 434, 111, 
	434, 63, 63, 64, 857, 135, 857, 111, 
	111, 111, 135, 135, 135, 186, 435, 111, 
	435, 63, 63, 64, 858, 135, 858, 111, 
	111, 111, 135, 135, 135, 186, 436, 437, 
	111, 436, 437, 63, 63, 64, 859, 860, 
	135, 859, 860, 111, 111, 111, 135, 135, 
	135, 186, 438, 111, 438, 63, 63, 64, 
	861, 135, 861, 111, 111, 111, 135, 135, 
	135, 186, 439, 440, 441, 111, 439, 440, 
	441, 63, 63, 64, 862, 863, 864, 135, 
	862, 863, 864, 111, 111, 111, 135, 135, 
	135, 186, 442, 443, 111, 442, 443, 63, 
	63, 64, 865, 866, 135, 865, 866, 111, 
	111, 111, 135, 135, 135, 186, 444, 111, 
	444, 63, 63, 64, 867, 135, 867, 111, 
	111, 111, 135, 135, 135, 186, 445, 446, 
	111, 445, 446, 63, 63, 64, 868, 869, 
	135, 868, 869, 111, 111, 111, 135, 135, 
	135, 186, 447, 111, 447, 63, 63, 64, 
	870, 135, 870, 111, 111, 111, 135, 135, 
	135, 186, 448, 111, 448, 63, 63, 64, 
	871, 135, 871, 111, 111, 111, 135, 135, 
	135, 186, 449, 450, 111, 449, 450, 63, 
	63, 64, 872, 873, 135, 872, 873, 111, 
	111, 111, 135, 135, 135, 186, 451, 111, 
	451, 63, 63, 64, 874, 135, 874, 111, 
	111, 111, 135, 135, 135, 186, 453, 454, 
	455, 456, 457, 111, 453, 454, 455, 456, 
	457, 63, 63, 64, 875, 876, 877, 878, 
	879, 135, 875, 876, 877, 878, 879, 111, 
	111, 111, 135, 135, 135, 452, 458, 111, 
	458, 63, 63, 64, 880, 135, 880, 111, 
	111, 111, 135, 135, 135, 186, 459, 111, 
	459, 63, 63, 64, 881, 135, 881, 111, 
	111, 111, 135, 135, 135, 186, 460, 111, 
	460, 63, 63, 64, 882, 135, 882, 111, 
	111, 111, 135, 135, 135, 186, 461, 111, 
	461, 63, 63, 64, 883, 135, 883, 111, 
	111, 111, 135, 135, 135, 186, 462, 111, 
	462, 63, 63, 64, 884, 135, 884, 111, 
	111, 111, 135, 135, 135, 186, 463, 111, 
	463, 63, 63, 64, 885, 135, 885, 111, 
	111, 111, 135, 135, 135, 186, 465, 466, 
	467, 468, 469, 470, 471, 472, 111, 63, 
	63, 886, 887, 888, 889, 890, 891, 892, 
	893, 64, 135, 111, 111, 111, 135, 135, 
	135, 464, 473, 111, 473, 63, 63, 64, 
	894, 135, 894, 111, 111, 111, 135, 135, 
	135, 186, 474, 111, 474, 63, 63, 64, 
	895, 135, 895, 111, 111, 111, 135, 135, 
	135, 186, 475, 111, 475, 63, 63, 64, 
	896, 135, 896, 111, 111, 111, 135, 135, 
	135, 186, 476, 111, 476, 63, 63, 64, 
	897, 135, 897, 111, 111, 111, 135, 135, 
	135, 186, 477, 111, 477, 63, 63, 64, 
	898, 135, 898, 111, 111, 111, 135, 135, 
	135, 186, 478, 479, 480, 481, 482, 111, 
	478, 479, 480, 481, 482, 63, 63, 64, 
	899, 900, 901, 902, 903, 135, 899, 900, 
	901, 902, 903, 111, 111, 111, 135, 135, 
	135, 186, 483, 484, 111, 483, 484, 63, 
	63, 64, 904, 905, 135, 904, 905, 111, 
	111, 111, 135, 135, 135, 186, 485, 111, 
	485, 63, 63, 64, 906, 135, 906, 111, 
	111, 111, 135, 135, 135, 186, 486, 111, 
	486, 63, 63, 64, 907, 135, 907, 111, 
	111, 111, 135, 135, 135, 186, 487, 111, 
	487, 63, 63, 64, 908, 135, 908, 111, 
	111, 111, 135, 135, 135, 186, 488, 111, 
	488, 63, 63, 64, 909, 135, 909, 111, 
	111, 111, 135, 135, 135, 186, 489, 111, 
	489, 63, 63, 64, 910, 135, 910, 111, 
	111, 111, 135, 135, 135, 186, 490, 491, 
	492, 111, 490, 491, 492, 63, 63, 64, 
	911, 912, 913, 135, 911, 912, 913, 111, 
	111, 111, 135, 135, 135, 186, 494, 111, 
	494, 63, 63, 64, 914, 135, 914, 111, 
	111, 111, 135, 135, 135, 493, 495, 496, 
	111, 495, 496, 63, 63, 64, 915, 916, 
	135, 915, 916, 111, 111, 111, 135, 135, 
	135, 186, 497, 498, 111, 497, 498, 63, 
	63, 64, 917, 918, 135, 917, 918, 111, 
	111, 111, 135, 135, 135, 186, 500, 111, 
	500, 63, 63, 64, 919, 135, 919, 111, 
	111, 111, 135, 135, 135, 499, 501, 502, 
	111, 501, 502, 63, 63, 64, 920, 921, 
	135, 920, 921, 111, 111, 111, 135, 135, 
	135, 186, 504, 111, 504, 63, 63, 64, 
	922, 135, 922, 111, 111, 111, 135, 135, 
	135, 503, 505, 111, 505, 63, 63, 64, 
	923, 135, 923, 111, 111, 111, 135, 135, 
	135, 186, 507, 508, 509, 111, 508, 509, 
	63, 63, 924, 64, 925, 926, 135, 925, 
	926, 111, 111, 111, 135, 135, 135, 506, 
	511, 111, 511, 63, 63, 64, 927, 135, 
	927, 111, 111, 111, 135, 135, 135, 510, 
	512, 111, 512, 63, 63, 64, 928, 135, 
	928, 111, 111, 111, 135, 135, 135, 186, 
	514, 515, 516, 517, 518, 111, 514, 515, 
	516, 517, 518, 63, 63, 64, 929, 930, 
	931, 932, 933, 135, 929, 930, 931, 932, 
	933, 111, 111, 111, 135, 135, 135, 513, 
	519, 111, 519, 63, 63, 64, 934, 135, 
	934, 111, 111, 111, 135, 135, 135, 186, 
	520, 111, 520, 63, 63, 64, 935, 135, 
	935, 111, 111, 111, 135, 135, 135, 186, 
	521, 111, 521, 63, 63, 64, 936, 135, 
	936, 111, 111, 111, 135, 135, 135, 186, 
	522, 111, 522, 63, 63, 64, 937, 135, 
	937, 111, 111, 111, 135, 135, 135, 186, 
	523, 111, 523, 63, 63, 64, 938, 135, 
	938, 111, 111, 111, 135, 135, 135, 186, 
	524, 111, 524, 63, 63, 64, 939, 135, 
	939, 111, 111, 111, 135, 135, 135, 186, 
	525, 526, 111, 525, 526, 63, 63, 64, 
	940, 941, 135, 940, 941, 111, 111, 111, 
	135, 135, 135, 186, 527, 111, 527, 63, 
	63, 64, 942, 135, 942, 111, 111, 111, 
	135, 135, 135, 186, 528, 111, 528, 63, 
	63, 64, 943, 135, 943, 111, 111, 111, 
	135, 135, 135, 186, 530, 111, 530, 63, 
	63, 64, 944, 135, 944, 111, 111, 111, 
	135, 135, 135, 529, 531, 532, 111, 531, 
	532, 63, 63, 64, 945, 946, 135, 945, 
	946, 111, 111, 111, 135, 135, 135, 186, 
	533, 111, 533, 63, 63, 64, 947, 135, 
	947, 111, 111, 111, 135, 135, 135, 186, 
	534, 111, 534, 63, 63, 64, 948, 135, 
	948, 111, 111, 111, 135, 135, 135, 186, 
	535, 111, 535, 63, 63, 64, 949, 135, 
	949, 111, 111, 111, 135, 135, 135, 186, 
	536, 111, 536, 63, 63, 64, 950, 135, 
	950, 111, 111, 111, 135, 135, 135, 186, 
	538, 539, 540, 541, 542, 111, 538, 539, 
	540, 541, 542, 63, 63, 64, 951, 952, 
	953, 954, 955, 135, 951, 952, 953, 954, 
	955, 111, 111, 111, 135, 135, 135, 537, 
	543, 111, 543, 63, 63, 64, 956, 135, 
	956, 111, 111, 111, 135, 135, 135, 186, 
	544, 111, 544, 63, 63, 64, 957, 135, 
	957, 111, 111, 111, 135, 135, 135, 186, 
	545, 111, 545, 63, 63, 64, 958, 135, 
	958, 111, 111, 111, 135, 135, 135, 186, 
	546, 111, 546, 63, 63, 64, 959, 135, 
	959, 111, 111, 111, 135, 135, 135, 186, 
	547, 548, 111, 547, 548, 63, 63, 64, 
	960, 961, 135, 960, 961, 111, 111, 111, 
	135, 135, 135, 186, 550, 551, 111, 550, 
	551, 63, 63, 64, 962, 963, 135, 962, 
	963, 111, 111, 111, 135, 135, 135, 549, 
	553, 554, 555, 111, 553, 554, 555, 63, 
	63, 64, 964, 965, 966, 135, 964, 965, 
	966, 111, 111, 111, 135, 135, 135, 552, 
	557, 111, 63, 63, 64, 135, 111, 111, 
	111, 135, 135, 135, 556, 559, 111, 559, 
	63, 63, 64, 967, 135, 967, 111, 111, 
	111, 135, 135, 135, 558, 561, 111, 63, 
	63, 64, 135, 111, 111, 111, 135, 135, 
	135, 560, 563, 564, 565, 111, 563, 564, 
	565, 63, 63, 64, 968, 969, 970, 135, 
	968, 969, 970, 111, 111, 111, 135, 135, 
	135, 562, 567, 111, 63, 63, 64, 135, 
	111, 111, 111, 135, 135, 135, 566, 569, 
	111, 569, 63, 63, 64, 971, 135, 971, 
	111, 111, 111, 135, 135, 135, 568, 571, 
	111, 63, 63, 64, 135, 111, 111, 111, 
	135, 135, 135, 570, 572, 111, 572, 63, 
	63, 64, 972, 135, 972, 111, 111, 111, 
	135, 135, 135, 186, 573, 574, 575, 576, 
	577, 578, 579, 580, 581, 111, 573, 574, 
	575, 576, 577, 578, 579, 580, 581, 63, 
	63, 64, 973, 974, 975, 976, 977, 978, 
	979, 980, 981, 135, 973, 974, 975, 976, 
	977, 978, 979, 980, 981, 111, 111, 111, 
	135, 135, 135, 186, 582, 111, 582, 63, 
	63, 64, 982, 135, 982, 111, 111, 111, 
	135, 135, 135, 186, 583, 111, 583, 63, 
	63, 64, 983, 135, 983, 111, 111, 111, 
	135, 135, 135, 186, 585, 111, 63, 63, 
	64, 135, 111, 111, 111, 135, 135, 135, 
	584, 586, 587, 111, 586, 587, 63, 63, 
	64, 984, 985, 135, 984, 985, 111, 111, 
	111, 135, 135, 135, 186, 588, 111, 588, 
	63, 63, 64, 986, 135, 986, 111, 111, 
	111, 135, 135, 135, 186, 589, 111, 589, 
	63, 63, 64, 987, 135, 987, 111, 111, 
	111, 135, 135, 135, 186, 590, 111, 590, 
	63, 63, 64, 988, 135, 988, 111, 111, 
	111, 135, 135, 135, 186, 591, 111, 591, 
	63, 63, 64, 989, 135, 989, 111, 111, 
	111, 135, 135, 135, 186, 593, 594, 111, 
	593, 594, 63, 63, 64, 990, 991, 135, 
	990, 991, 111, 111, 111, 135, 135, 135, 
	592, 595, 111, 595, 63, 63, 64, 992, 
	135, 992, 111, 111, 111, 135, 135, 135, 
	186, 596, 111, 596, 63, 63, 64, 993, 
	135, 993, 111, 111, 111, 135, 135, 135, 
	186, 597, 111, 597, 63, 63, 64, 994, 
	135, 994, 111, 111, 111, 135, 135, 135, 
	186, 598, 599, 600, 601, 111, 598, 599, 
	600, 601, 63, 63, 64, 995, 996, 997, 
	998, 135, 995, 996, 997, 998, 111, 111, 
	111, 135, 135, 135, 186, 602, 603, 111, 
	602, 603, 63, 63, 64, 999, 1000, 135, 
	999, 1000, 111, 111, 111, 135, 135, 135, 
	186, 605, 606, 111, 605, 606, 63, 63, 
	64, 1001, 1002, 135, 1001, 1002, 111, 111, 
	111, 135, 135, 135, 604, 607, 111, 607, 
	63, 63, 64, 1003, 135, 1003, 111, 111, 
	111, 135, 135, 135, 186, 608, 111, 608, 
	63, 63, 64, 1004, 135, 1004, 111, 111, 
	111, 135, 135, 135, 186, 609, 111, 609, 
	63, 63, 64, 1005, 135, 1005, 111, 111, 
	111, 135, 135, 135, 186, 610, 111, 610, 
	63, 63, 64, 1006, 135, 1006, 111, 111, 
	111, 135, 135, 135, 186, 612, 111, 612, 
	63, 63, 64, 1007, 135, 1007, 111, 111, 
	111, 135, 135, 135, 611, 613, 111, 613, 
	63, 63, 64, 1008, 135, 1008, 111, 111, 
	111, 135, 135, 135, 186, 614, 111, 614, 
	63, 63, 64, 1009, 135, 1009, 111, 111, 
	111, 135, 135, 135, 186, 615, 111, 615, 
	63, 63, 64, 1010, 135, 1010, 111, 111, 
	111, 135, 135, 135, 186, 616, 111, 616, 
	63, 63, 64, 1011, 135, 1011, 111, 111, 
	111, 135, 135, 135, 186, 617, 111, 617, 
	63, 63, 64, 1012, 135, 1012, 111, 111, 
	111, 135, 135, 135, 186, 618, 111, 618, 
	63, 63, 64, 1013, 135, 1013, 111, 111, 
	111, 135, 135, 135, 186, 619, 111, 619, 
	63, 63, 64, 1014, 135, 1014, 111, 111, 
	111, 135, 135, 135, 186, 620, 621, 111, 
	620, 621, 63, 63, 64, 1015, 1016, 135, 
	1015, 1016, 111, 111, 111, 135, 135, 135, 
	186, 622, 111, 622, 63, 63, 64, 1017, 
	135, 1017, 111, 111, 111, 135, 135, 135, 
	186, 623, 111, 623, 63, 63, 64, 1018, 
	135, 1018, 111, 111, 111, 135, 135, 135, 
	186, 624, 111, 624, 63, 63, 64, 1019, 
	135, 1019, 111, 111, 111, 135, 135, 135, 
	186, 626, 111, 626, 63, 63, 64, 1020, 
	135, 1020, 111, 111, 111, 135, 135, 135, 
	625, 627, 111, 627, 63, 63, 64, 1021, 
	135, 1021, 111, 111, 111, 135, 135, 135, 
	186, 628, 629, 111, 628, 629, 63, 63, 
	64, 1022, 1023, 135, 1022, 1023, 111, 111, 
	111, 135, 135, 135, 186, 630, 631, 111, 
	630, 631, 63, 63, 64, 1024, 1025, 135, 
	1024, 1025, 111, 111, 111, 135, 135, 135, 
	186, 632, 111, 632, 63, 63, 64, 1026, 
	135, 1026, 111, 111, 111, 135, 135, 135, 
	186, 633, 111, 633, 63, 63, 64, 1027, 
	135, 1027, 111, 111, 111, 135, 135, 135, 
	186, 634, 111, 634, 63, 63, 64, 1028, 
	135, 1028, 111, 111, 111, 135, 135, 135, 
	186, 635, 111, 635, 63, 63, 64, 1029, 
	135, 1029, 111, 111, 111, 135, 135, 135, 
	186, 636, 111, 636, 63, 63, 64, 1030, 
	135, 1030, 111, 111, 111, 135, 135, 135, 
	186, 637, 111, 637, 63, 63, 64, 1031, 
	135, 1031, 111, 111, 111, 135, 135, 135, 
	186, 639, 640, 641, 642, 643, 111, 639, 
	640, 641, 642, 643, 63, 63, 64, 1032, 
	1033, 1034, 1035, 1036, 135, 1032, 1033, 1034, 
	1035, 1036, 111, 111, 111, 135, 135, 135, 
	638, 644, 111, 644, 63, 63, 64, 1037, 
	135, 1037, 111, 111, 111, 135, 135, 135, 
	186, 645, 111, 645, 63, 63, 64, 1038, 
	135, 1038, 111, 111, 111, 135, 135, 135, 
	186, 646, 111, 646, 63, 63, 64, 1039, 
	135, 1039, 111, 111, 111, 135, 135, 135, 
	186, 647, 111, 647, 63, 63, 64, 1040, 
	135, 1040, 111, 111, 111, 135, 135, 135, 
	186, 648, 111, 648, 63, 63, 64, 1041, 
	135, 1041, 111, 111, 111, 135, 135, 135, 
	186, 649, 111, 649, 63, 63, 64, 1042, 
	135, 1042, 111, 111, 111, 135, 135, 135, 
	186, 650, 111, 650, 63, 63, 64, 1043, 
	135, 1043, 111, 111, 111, 135, 135, 135, 
	186, 651, 111, 651, 63, 63, 64, 1044, 
	135, 1044, 111, 111, 111, 135, 135, 135, 
	186, 0
};
static const short _lexer_trans_targs[] = {
	38, 2, 38, 38, 3, 4, 6, 7, 
	9, 11, 14, 5, 38, 38, 8, 38, 
	10, 38, 12, 13, 38, 38, 15, 38, 
	16, 38, 38, 51, 38, 19, 22, 24, 
	27, 20, 21, 38, 23, 38, 25, 26, 
	38, 28, 29, 38, 31, 33, 32, 38, 
	34, 38, 38, 38, 38, 38, 38, 38, 
	38, 38, 38, 38, 38, 36, 323, 37, 
	38, 38, 38, 39, 38, 38, 40, 41, 
	43, 38, 44, 38, 45, 38, 38, 38, 
	38, 0, 46, 47, 48, 38, 52, 53, 
	54, 55, 38, 41, 38, 38, 38, 38, 
	38, 56, 38, 38, 38, 57, 70, 78, 
	96, 120, 138, 144, 149, 153, 181, 58, 
	182, 208, 221, 228, 239, 255, 271, 299, 
	305, 58, 313, 58, 322, 324, 337, 345, 
	363, 387, 405, 411, 416, 420, 448, 325, 
	449, 475, 488, 495, 506, 522, 538, 566, 
	572, 325, 580, 325, 38, 38, 40, 1, 
	42, 38, 38, 38, 38, 38, 38, 38, 
	50, 17, 49, 38, 50, 38, 38, 38, 
	38, 38, 38, 38, 38, 38, 38, 38, 
	38, 38, 38, 38, 59, 60, 61, 62, 
	66, 67, 38, 58, 58, 58, 38, 38, 
	63, 65, 64, 58, 58, 58, 68, 69, 
	58, 38, 38, 71, 72, 76, 38, 38, 
	73, 58, 74, 75, 58, 77, 58, 38, 
	38, 79, 86, 88, 91, 92, 80, 81, 
	38, 82, 83, 84, 58, 85, 58, 87, 
	38, 38, 38, 89, 90, 58, 38, 58, 
	38, 58, 18, 93, 94, 95, 58, 38, 
	38, 97, 98, 58, 115, 117, 119, 58, 
	38, 38, 58, 99, 110, 111, 58, 58, 
	100, 101, 105, 58, 58, 58, 107, 58, 
	58, 102, 103, 104, 58, 106, 58, 108, 
	109, 58, 58, 112, 113, 114, 58, 116, 
	58, 118, 30, 35, 38, 38, 121, 122, 
	131, 134, 38, 58, 123, 130, 124, 38, 
	125, 127, 126, 58, 128, 129, 58, 58, 
	132, 133, 58, 38, 135, 58, 136, 137, 
	58, 38, 38, 139, 143, 140, 141, 38, 
	142, 58, 58, 145, 146, 147, 148, 58, 
	38, 38, 150, 152, 151, 58, 38, 38, 
	38, 154, 156, 162, 58, 163, 173, 174, 
	179, 180, 155, 58, 38, 157, 159, 158, 
	58, 160, 161, 58, 58, 38, 58, 164, 
	168, 169, 170, 38, 165, 166, 167, 58, 
	38, 58, 38, 58, 171, 172, 58, 58, 
	58, 38, 175, 177, 176, 58, 178, 58, 
	38, 58, 58, 38, 58, 58, 58, 58, 
	38, 38, 183, 198, 58, 200, 58, 38, 
	184, 187, 194, 197, 38, 185, 186, 58, 
	38, 58, 58, 38, 188, 193, 58, 38, 
	189, 58, 190, 191, 192, 58, 58, 38, 
	195, 196, 58, 58, 58, 199, 58, 201, 
	203, 205, 202, 58, 58, 204, 58, 58, 
	206, 207, 58, 58, 38, 209, 213, 214, 
	216, 220, 210, 211, 212, 58, 58, 215, 
	38, 58, 58, 58, 58, 58, 58, 58, 
	58, 217, 218, 219, 58, 58, 58, 222, 
	227, 58, 58, 58, 223, 224, 225, 226, 
	58, 58, 229, 230, 235, 38, 58, 231, 
	233, 232, 58, 38, 58, 234, 58, 38, 
	58, 236, 38, 58, 58, 237, 38, 238, 
	58, 38, 58, 240, 243, 249, 250, 241, 
	242, 58, 244, 245, 246, 247, 248, 58, 
	58, 38, 58, 251, 254, 252, 253, 58, 
	58, 38, 256, 260, 262, 266, 270, 257, 
	258, 259, 58, 58, 261, 38, 58, 58, 
	38, 263, 264, 58, 38, 38, 38, 265, 
	38, 38, 38, 267, 268, 58, 38, 38, 
	38, 269, 38, 38, 58, 272, 273, 275, 
	284, 58, 285, 286, 289, 294, 58, 274, 
	38, 38, 276, 280, 277, 278, 279, 58, 
	38, 281, 282, 58, 283, 58, 58, 58, 
	58, 58, 58, 58, 38, 58, 287, 288, 
	58, 290, 291, 38, 292, 293, 58, 295, 
	296, 297, 298, 58, 300, 302, 301, 58, 
	303, 38, 304, 58, 306, 307, 58, 58, 
	308, 309, 310, 311, 312, 58, 38, 314, 
	316, 318, 319, 320, 315, 58, 317, 58, 
	58, 58, 321, 58, 38, 38, 326, 327, 
	328, 329, 333, 334, 325, 325, 325, 330, 
	332, 331, 325, 325, 325, 335, 336, 325, 
	338, 339, 343, 340, 325, 341, 342, 325, 
	344, 325, 346, 353, 355, 358, 359, 347, 
	348, 349, 350, 351, 325, 352, 325, 354, 
	356, 357, 325, 325, 325, 360, 361, 362, 
	325, 364, 365, 325, 382, 384, 386, 325, 
	325, 366, 377, 378, 325, 325, 367, 368, 
	372, 325, 325, 325, 374, 325, 325, 369, 
	370, 371, 325, 373, 325, 375, 376, 325, 
	325, 379, 380, 381, 325, 383, 325, 385, 
	388, 389, 398, 401, 325, 390, 397, 391, 
	392, 394, 393, 325, 395, 396, 325, 325, 
	399, 400, 325, 402, 325, 403, 404, 325, 
	406, 410, 407, 408, 409, 325, 325, 412, 
	413, 414, 415, 325, 417, 419, 418, 325, 
	421, 423, 429, 325, 430, 440, 441, 446, 
	447, 422, 325, 424, 426, 425, 325, 427, 
	428, 325, 325, 325, 431, 435, 436, 437, 
	432, 433, 434, 325, 325, 325, 438, 439, 
	325, 325, 325, 442, 444, 443, 325, 445, 
	325, 325, 325, 325, 325, 325, 325, 450, 
	465, 325, 467, 325, 451, 454, 461, 464, 
	452, 453, 325, 325, 325, 455, 460, 325, 
	456, 325, 457, 458, 459, 325, 325, 462, 
	463, 325, 325, 325, 466, 325, 468, 470, 
	472, 469, 325, 325, 471, 325, 325, 473, 
	474, 325, 325, 476, 480, 481, 483, 487, 
	477, 478, 479, 325, 325, 482, 325, 325, 
	325, 325, 325, 325, 325, 325, 484, 485, 
	486, 325, 325, 325, 489, 494, 325, 325, 
	325, 490, 491, 492, 493, 325, 325, 496, 
	497, 502, 325, 498, 500, 499, 325, 325, 
	501, 325, 325, 503, 325, 325, 504, 505, 
	325, 325, 507, 510, 516, 517, 508, 509, 
	325, 511, 512, 513, 514, 515, 325, 325, 
	325, 518, 521, 519, 520, 325, 325, 523, 
	527, 529, 533, 537, 524, 525, 526, 325, 
	325, 528, 325, 325, 530, 531, 325, 532, 
	534, 535, 325, 536, 325, 539, 540, 542, 
	551, 325, 552, 553, 556, 561, 325, 541, 
	543, 547, 544, 545, 546, 325, 548, 549, 
	325, 550, 325, 325, 325, 325, 325, 325, 
	325, 325, 554, 555, 325, 557, 558, 559, 
	560, 325, 562, 563, 564, 565, 325, 567, 
	569, 568, 325, 570, 571, 325, 573, 574, 
	325, 325, 575, 576, 577, 578, 579, 325, 
	581, 583, 585, 586, 587, 582, 325, 584, 
	325, 325, 325, 588, 325
};
static const short _lexer_trans_actions[] = {
	317, 0, 147, 309, 0, 0, 0, 0, 
	0, 0, 0, 0, 83, 95, 0, 85, 
	0, 91, 0, 0, 87, 89, 0, 93, 
	0, 145, 315, 0, 313, 0, 0, 0, 
	0, 0, 0, 119, 0, 123, 0, 0, 
	121, 0, 0, 117, 0, 0, 0, 139, 
	0, 125, 127, 129, 131, 133, 135, 137, 
	97, 101, 103, 99, 311, 0, 0, 0, 
	143, 141, 7, 0, 151, 9, 322, 325, 
	0, 149, 5, 13, 0, 15, 17, 19, 
	23, 0, 958, 958, 958, 25, 0, 0, 
	0, 0, 41, 970, 43, 153, 45, 47, 
	51, 0, 55, 57, 21, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 955, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 361, 0, 331, 5, 391, 364, 337, 
	367, 370, 394, 955, 373, 397, 955, 955, 
	382, 349, 955, 955, 346, 403, 955, 955, 
	955, 361, 409, 331, 155, 33, 961, 0, 
	0, 307, 157, 11, 159, 161, 49, 301, 
	964, 0, 964, 305, 967, 303, 295, 165, 
	27, 29, 31, 167, 35, 169, 39, 37, 
	171, 53, 191, 71, 0, 0, 0, 0, 
	0, 0, 297, 442, 562, 565, 211, 81, 
	0, 0, 0, 448, 880, 568, 0, 0, 
	319, 181, 59, 0, 0, 0, 201, 75, 
	0, 571, 0, 0, 451, 0, 883, 173, 
	61, 0, 0, 0, 5, 0, 0, 0, 
	221, 0, 0, 0, 943, 0, 946, 0, 
	223, 105, 225, 0, 0, 595, 227, 586, 
	229, 592, 0, 0, 0, 0, 454, 183, 
	63, 0, 0, 604, 0, 0, 5, 598, 
	203, 77, 601, 0, 0, 0, 457, 460, 
	0, 0, 0, 472, 475, 478, 0, 484, 
	463, 0, 0, 0, 466, 0, 469, 0, 
	0, 481, 445, 0, 0, 0, 487, 0, 
	607, 5, 0, 0, 185, 65, 0, 0, 
	0, 0, 231, 406, 0, 0, 0, 217, 
	0, 0, 0, 496, 0, 0, 499, 490, 
	0, 0, 502, 233, 0, 616, 0, 0, 
	505, 193, 73, 0, 0, 0, 0, 283, 
	0, 802, 949, 0, 0, 0, 0, 508, 
	187, 67, 0, 0, 0, 619, 205, 79, 
	195, 0, 0, 0, 622, 0, 0, 0, 
	0, 0, 0, 886, 219, 0, 0, 0, 
	514, 0, 0, 517, 400, 235, 850, 0, 
	0, 0, 0, 237, 0, 0, 0, 520, 
	239, 634, 241, 640, 0, 0, 952, 889, 
	892, 213, 0, 0, 0, 895, 0, 898, 
	207, 376, 385, 209, 379, 388, 643, 646, 
	189, 69, 0, 0, 355, 0, 352, 243, 
	0, 0, 0, 0, 245, 0, 0, 784, 
	247, 787, 901, 249, 0, 0, 778, 251, 
	0, 781, 0, 0, 0, 790, 904, 293, 
	0, 0, 793, 796, 523, 0, 526, 0, 
	0, 0, 0, 910, 916, 0, 913, 919, 
	0, 0, 532, 529, 179, 0, 0, 0, 
	0, 0, 0, 0, 0, 805, 853, 0, 
	285, 826, 829, 832, 835, 838, 841, 844, 
	847, 0, 0, 0, 535, 922, 334, 0, 
	0, 358, 328, 664, 0, 0, 0, 0, 
	808, 667, 0, 0, 0, 253, 538, 0, 
	0, 0, 673, 287, 859, 0, 676, 289, 
	865, 0, 255, 868, 682, 0, 257, 0, 
	775, 177, 343, 0, 0, 0, 0, 0, 
	0, 541, 0, 0, 0, 0, 0, 814, 
	811, 175, 688, 0, 0, 0, 0, 544, 
	691, 197, 0, 0, 0, 0, 0, 0, 
	0, 0, 925, 694, 0, 259, 700, 703, 
	261, 0, 0, 718, 263, 107, 265, 0, 
	267, 109, 269, 0, 0, 733, 271, 111, 
	273, 0, 275, 113, 736, 0, 0, 0, 
	0, 430, 0, 0, 0, 0, 739, 0, 
	277, 115, 0, 0, 0, 0, 0, 547, 
	279, 0, 0, 817, 0, 928, 748, 754, 
	751, 871, 757, 760, 215, 763, 0, 0, 
	931, 0, 0, 281, 0, 0, 769, 0, 
	0, 0, 0, 934, 0, 0, 0, 820, 
	0, 291, 0, 877, 0, 0, 937, 940, 
	0, 0, 0, 0, 0, 550, 199, 0, 
	0, 0, 0, 0, 0, 553, 0, 556, 
	766, 439, 0, 559, 163, 299, 955, 955, 
	427, 955, 955, 955, 442, 562, 565, 955, 
	955, 955, 448, 880, 568, 955, 955, 319, 
	412, 955, 955, 955, 571, 955, 955, 451, 
	955, 883, 955, 955, 580, 955, 955, 955, 
	574, 955, 955, 955, 943, 955, 946, 577, 
	583, 589, 595, 586, 592, 955, 955, 955, 
	454, 955, 415, 604, 955, 955, 955, 598, 
	601, 955, 955, 955, 457, 460, 955, 955, 
	955, 472, 475, 478, 955, 484, 463, 955, 
	955, 955, 466, 955, 469, 955, 955, 481, 
	445, 955, 955, 955, 487, 955, 607, 955, 
	610, 955, 955, 613, 406, 955, 955, 493, 
	955, 955, 955, 496, 955, 955, 499, 490, 
	955, 955, 502, 955, 616, 955, 955, 505, 
	955, 955, 955, 799, 955, 802, 949, 955, 
	955, 955, 955, 508, 955, 418, 955, 619, 
	955, 511, 955, 622, 625, 955, 433, 421, 
	424, 955, 886, 955, 955, 955, 514, 955, 
	955, 517, 400, 850, 628, 631, 637, 955, 
	955, 955, 955, 520, 634, 640, 955, 955, 
	952, 889, 892, 955, 955, 955, 895, 955, 
	898, 376, 385, 379, 388, 643, 646, 649, 
	955, 355, 955, 352, 652, 658, 907, 955, 
	655, 955, 784, 787, 901, 661, 955, 778, 
	955, 781, 955, 955, 955, 790, 904, 955, 
	955, 793, 796, 523, 955, 526, 955, 955, 
	955, 955, 910, 916, 955, 913, 919, 955, 
	955, 532, 529, 955, 955, 955, 955, 955, 
	955, 955, 955, 805, 853, 823, 826, 829, 
	832, 835, 838, 841, 844, 847, 955, 955, 
	955, 535, 922, 334, 955, 955, 358, 328, 
	664, 955, 955, 955, 955, 808, 667, 670, 
	955, 955, 538, 955, 955, 856, 673, 859, 
	862, 676, 865, 679, 868, 682, 685, 955, 
	775, 343, 955, 955, 340, 955, 955, 955, 
	541, 955, 955, 955, 955, 955, 814, 811, 
	688, 955, 955, 955, 955, 544, 691, 955, 
	955, 706, 721, 955, 955, 955, 955, 925, 
	694, 697, 700, 703, 709, 712, 718, 715, 
	724, 727, 733, 730, 736, 955, 955, 955, 
	955, 430, 955, 436, 955, 955, 739, 742, 
	955, 745, 955, 955, 955, 547, 955, 955, 
	817, 955, 928, 748, 754, 751, 871, 757, 
	760, 763, 955, 955, 931, 955, 772, 955, 
	955, 769, 955, 955, 955, 955, 934, 955, 
	955, 955, 820, 874, 955, 877, 955, 955, 
	937, 940, 955, 955, 955, 955, 955, 550, 
	955, 955, 955, 955, 955, 955, 553, 955, 
	556, 766, 439, 955, 559
};
static const short _lexer_to_state_actions[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 1, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0
};
static const short _lexer_from_state_actions[] = {
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 3, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0
};
static const short _lexer_eof_trans[] = {
	0, 1, 1, 4, 4, 4, 4, 4, 
	4, 4, 4, 4, 4, 4, 4, 4, 
	1, 27, 29, 29, 29, 29, 29, 29, 
	29, 29, 29, 29, 29, 29, 29, 29, 
	29, 29, 29, 29, 61, 1, 0, 149, 
	1, 1, 154, 155, 157, 158, 160, 160, 
	160, 164, 1, 166, 167, 168, 172, 174, 
	177, 179, 1, 187, 187, 191, 187, 187, 
	187, 187, 187, 187, 187, 187, 202, 207, 
	187, 187, 187, 187, 187, 187, 216, 187, 
	187, 225, 187, 187, 187, 187, 187, 233, 
	235, 239, 241, 187, 187, 187, 187, 187, 
	248, 187, 257, 187, 187, 187, 187, 187, 
	187, 187, 187, 187, 187, 187, 187, 187, 
	187, 187, 187, 187, 187, 187, 187, 187, 
	293, 299, 187, 187, 304, 187, 187, 187, 
	187, 187, 187, 187, 187, 187, 316, 187, 
	187, 187, 322, 187, 187, 328, 187, 187, 
	187, 187, 187, 187, 187, 337, 187, 187, 
	343, 345, 187, 187, 357, 187, 187, 187, 
	187, 187, 187, 366, 372, 187, 187, 187, 
	377, 379, 187, 187, 187, 187, 386, 187, 
	187, 187, 187, 393, 396, 187, 401, 408, 
	413, 417, 187, 420, 424, 187, 187, 187, 
	187, 187, 432, 187, 187, 187, 187, 187, 
	187, 187, 187, 187, 187, 187, 187, 187, 
	453, 187, 187, 187, 187, 187, 187, 465, 
	187, 187, 187, 187, 187, 187, 187, 187, 
	187, 187, 187, 187, 187, 494, 187, 187, 
	500, 187, 504, 187, 507, 511, 187, 514, 
	187, 187, 187, 187, 187, 187, 187, 187, 
	187, 530, 187, 187, 187, 187, 187, 538, 
	187, 187, 187, 187, 187, 550, 553, 557, 
	559, 561, 563, 567, 569, 571, 187, 187, 
	187, 187, 585, 187, 187, 187, 187, 187, 
	593, 187, 187, 187, 187, 187, 605, 187, 
	187, 187, 187, 612, 187, 187, 187, 187, 
	187, 187, 187, 187, 187, 187, 187, 626, 
	187, 187, 187, 187, 187, 187, 187, 187, 
	187, 639, 187, 187, 187, 187, 187, 187, 
	187, 187, 653, 654, 179, 1, 187, 187, 
	191, 187, 187, 187, 187, 187, 187, 187, 
	187, 202, 207, 187, 187, 187, 187, 187, 
	187, 216, 187, 187, 225, 187, 187, 187, 
	187, 187, 233, 235, 239, 241, 187, 187, 
	187, 187, 187, 248, 187, 257, 187, 187, 
	187, 187, 187, 187, 187, 187, 187, 187, 
	187, 187, 187, 187, 187, 187, 187, 187, 
	187, 187, 187, 293, 299, 187, 187, 304, 
	187, 187, 187, 187, 187, 187, 187, 187, 
	187, 316, 187, 187, 187, 322, 187, 187, 
	328, 187, 187, 187, 187, 187, 187, 187, 
	337, 187, 187, 343, 345, 187, 187, 357, 
	187, 187, 187, 187, 187, 187, 366, 372, 
	187, 187, 187, 377, 379, 187, 187, 187, 
	187, 386, 187, 187, 187, 187, 393, 396, 
	187, 401, 408, 413, 417, 187, 420, 424, 
	187, 187, 187, 187, 187, 432, 187, 187, 
	187, 187, 187, 187, 187, 187, 187, 187, 
	187, 187, 187, 453, 187, 187, 187, 187, 
	187, 187, 465, 187, 187, 187, 187, 187, 
	187, 187, 187, 187, 187, 187, 187, 187, 
	494, 187, 187, 500, 187, 504, 187, 507, 
	511, 187, 514, 187, 187, 187, 187, 187, 
	187, 187, 187, 187, 530, 187, 187, 187, 
	187, 187, 538, 187, 187, 187, 187, 187, 
	550, 553, 557, 559, 561, 563, 567, 569, 
	571, 187, 187, 187, 187, 585, 187, 187, 
	187, 187, 187, 593, 187, 187, 187, 187, 
	187, 605, 187, 187, 187, 187, 612, 187, 
	187, 187, 187, 187, 187, 187, 187, 187, 
	187, 187, 626, 187, 187, 187, 187, 187, 
	187, 187, 187, 187, 639, 187, 187, 187, 
	187, 187, 187, 187, 187
};
static const int lexer_start = 38;
static const int lexer_error = 0;
static const int lexer_en_main = 38;
static void set_scan_buf( const char *text, bool _at_bol )
{
 Str_set( input_buf, text );
 p = Str_data(input_buf);
 at_bol = _at_bol;
 pe = Str_data(input_buf) + Str_len(input_buf);
 eof_ = pe;
	{
	cs = lexer_start;
	ts = 0;
	te = 0;
	act = 0;
	}
}
static tokid_t _scan_get( void )
{
	{
	int _klen;
	unsigned int _trans;
	short _widec;
	const short *_acts;
	unsigned int _nacts;
	const short *_keys;
	if ( p == pe )
		goto _test_eof;
	if ( cs == 0 )
		goto _out;
_resume:
	_acts = _lexer_actions + _lexer_from_state_actions[cs];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 ) {
		switch ( *_acts++ ) {
	case 1:
	{ts = p;}
	break;
		}
	}
	_widec = (*p);
	_klen = _lexer_cond_lengths[cs];
	_keys = _lexer_cond_keys + (_lexer_cond_offsets[cs]*2);
	if ( _klen > 0 ) {
		const short *_lower = _keys;
		const short *_mid;
		const short *_upper = _keys + (_klen<<1) - 2;
		while (1) {
			if ( _upper < _lower )
				break;
			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( _widec < _mid[0] )
				_upper = _mid - 2;
			else if ( _widec > _mid[1] )
				_lower = _mid + 2;
			else {
				switch ( _lexer_cond_spaces[_lexer_cond_offsets[cs] + ((_mid - _keys)>>1)] ) {
	case 0: {
		_widec = (short)(128 + ((*p) - -128));
		if ( 
 at_bol  ) _widec += 256;
		break;
	}
				}
				break;
			}
		}
	}
	_keys = _lexer_trans_keys + _lexer_key_offsets[cs];
	_trans = _lexer_index_offsets[cs];
	_klen = _lexer_single_lengths[cs];
	if ( _klen > 0 ) {
		const short *_lower = _keys;
		const short *_mid;
		const short *_upper = _keys + _klen - 1;
		while (1) {
			if ( _upper < _lower )
				break;
			_mid = _lower + ((_upper-_lower) >> 1);
			if ( _widec < *_mid )
				_upper = _mid - 1;
			else if ( _widec > *_mid )
				_lower = _mid + 1;
			else {
				_trans += (unsigned int)(_mid - _keys);
				goto _match;
			}
		}
		_keys += _klen;
		_trans += _klen;
	}
	_klen = _lexer_range_lengths[cs];
	if ( _klen > 0 ) {
		const short *_lower = _keys;
		const short *_mid;
		const short *_upper = _keys + (_klen<<1) - 2;
		while (1) {
			if ( _upper < _lower )
				break;
			_mid = _lower + (((_upper-_lower) >> 1) & ~1);
			if ( _widec < _mid[0] )
				_upper = _mid - 2;
			else if ( _widec > _mid[1] )
				_lower = _mid + 2;
			else {
				_trans += (unsigned int)((_mid - _keys)>>1);
				goto _match;
			}
		}
		_trans += _klen;
	}
_match:
	_trans = _lexer_indicies[_trans];
_eof_trans:
	cs = _lexer_trans_targs[_trans];
	if ( _lexer_trans_actions[_trans] == 0 )
		goto _again;
	_acts = _lexer_actions + _lexer_trans_actions[_trans];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 )
	{
		switch ( *_acts++ )
		{
	case 2:
	{te = p+1;}
	break;
	case 3:
	{act = 1;}
	break;
	case 4:
	{act = 2;}
	break;
	case 5:
	{act = 6;}
	break;
	case 6:
	{act = 38;}
	break;
	case 7:
	{act = 39;}
	break;
	case 8:
	{act = 40;}
	break;
	case 9:
	{act = 41;}
	break;
	case 10:
	{act = 42;}
	break;
	case 11:
	{act = 43;}
	break;
	case 12:
	{act = 44;}
	break;
	case 13:
	{act = 45;}
	break;
	case 14:
	{act = 46;}
	break;
	case 15:
	{act = 47;}
	break;
	case 16:
	{act = 48;}
	break;
	case 17:
	{act = 49;}
	break;
	case 18:
	{act = 50;}
	break;
	case 19:
	{act = 51;}
	break;
	case 20:
	{act = 52;}
	break;
	case 21:
	{act = 53;}
	break;
	case 22:
	{act = 54;}
	break;
	case 23:
	{act = 55;}
	break;
	case 24:
	{act = 56;}
	break;
	case 25:
	{act = 57;}
	break;
	case 26:
	{act = 58;}
	break;
	case 27:
	{act = 59;}
	break;
	case 28:
	{act = 60;}
	break;
	case 29:
	{act = 61;}
	break;
	case 30:
	{act = 62;}
	break;
	case 31:
	{act = 63;}
	break;
	case 32:
	{act = 64;}
	break;
	case 33:
	{act = 65;}
	break;
	case 34:
	{act = 66;}
	break;
	case 35:
	{act = 67;}
	break;
	case 36:
	{act = 68;}
	break;
	case 37:
	{act = 69;}
	break;
	case 38:
	{act = 70;}
	break;
	case 39:
	{act = 71;}
	break;
	case 40:
	{act = 72;}
	break;
	case 41:
	{act = 73;}
	break;
	case 42:
	{act = 74;}
	break;
	case 43:
	{act = 75;}
	break;
	case 44:
	{act = 95;}
	break;
	case 45:
	{act = 96;}
	break;
	case 46:
	{act = 97;}
	break;
	case 47:
	{act = 98;}
	break;
	case 48:
	{act = 99;}
	break;
	case 49:
	{act = 100;}
	break;
	case 50:
	{act = 101;}
	break;
	case 51:
	{act = 102;}
	break;
	case 52:
	{act = 103;}
	break;
	case 53:
	{act = 104;}
	break;
	case 54:
	{act = 105;}
	break;
	case 55:
	{act = 106;}
	break;
	case 56:
	{act = 107;}
	break;
	case 57:
	{act = 108;}
	break;
	case 58:
	{act = 109;}
	break;
	case 59:
	{act = 110;}
	break;
	case 60:
	{act = 111;}
	break;
	case 61:
	{act = 112;}
	break;
	case 62:
	{act = 113;}
	break;
	case 63:
	{act = 114;}
	break;
	case 64:
	{act = 115;}
	break;
	case 65:
	{act = 116;}
	break;
	case 66:
	{act = 117;}
	break;
	case 67:
	{act = 118;}
	break;
	case 68:
	{act = 119;}
	break;
	case 69:
	{act = 120;}
	break;
	case 70:
	{act = 121;}
	break;
	case 71:
	{act = 122;}
	break;
	case 72:
	{act = 123;}
	break;
	case 73:
	{act = 124;}
	break;
	case 74:
	{act = 125;}
	break;
	case 75:
	{act = 126;}
	break;
	case 76:
	{act = 127;}
	break;
	case 77:
	{act = 128;}
	break;
	case 78:
	{act = 129;}
	break;
	case 79:
	{act = 130;}
	break;
	case 80:
	{act = 131;}
	break;
	case 81:
	{act = 132;}
	break;
	case 82:
	{act = 133;}
	break;
	case 83:
	{act = 134;}
	break;
	case 84:
	{act = 139;}
	break;
	case 85:
	{act = 140;}
	break;
	case 86:
	{act = 141;}
	break;
	case 87:
	{act = 142;}
	break;
	case 88:
	{act = 143;}
	break;
	case 89:
	{act = 144;}
	break;
	case 90:
	{act = 146;}
	break;
	case 91:
	{act = 147;}
	break;
	case 92:
	{act = 148;}
	break;
	case 93:
	{act = 149;}
	break;
	case 94:
	{act = 150;}
	break;
	case 95:
	{act = 151;}
	break;
	case 96:
	{act = 152;}
	break;
	case 97:
	{act = 153;}
	break;
	case 98:
	{act = 154;}
	break;
	case 99:
	{act = 155;}
	break;
	case 100:
	{act = 156;}
	break;
	case 101:
	{act = 157;}
	break;
	case 102:
	{act = 158;}
	break;
	case 103:
	{act = 159;}
	break;
	case 104:
	{act = 160;}
	break;
	case 105:
	{act = 161;}
	break;
	case 106:
	{act = 162;}
	break;
	case 107:
	{act = 163;}
	break;
	case 108:
	{act = 164;}
	break;
	case 109:
	{act = 165;}
	break;
	case 110:
	{act = 166;}
	break;
	case 111:
	{act = 167;}
	break;
	case 112:
	{act = 168;}
	break;
	case 113:
	{act = 169;}
	break;
	case 114:
	{act = 170;}
	break;
	case 115:
	{act = 171;}
	break;
	case 116:
	{act = 172;}
	break;
	case 117:
	{act = 173;}
	break;
	case 118:
	{act = 174;}
	break;
	case 119:
	{act = 175;}
	break;
	case 120:
	{act = 176;}
	break;
	case 121:
	{act = 177;}
	break;
	case 122:
	{act = 178;}
	break;
	case 123:
	{act = 179;}
	break;
	case 124:
	{act = 180;}
	break;
	case 125:
	{act = 181;}
	break;
	case 126:
	{act = 182;}
	break;
	case 127:
	{act = 183;}
	break;
	case 128:
	{act = 184;}
	break;
	case 129:
	{act = 185;}
	break;
	case 130:
	{act = 186;}
	break;
	case 131:
	{act = 187;}
	break;
	case 132:
	{act = 188;}
	break;
	case 133:
	{act = 189;}
	break;
	case 134:
	{act = 191;}
	break;
	case 135:
	{act = 192;}
	break;
	case 136:
	{act = 194;}
	break;
	case 137:
	{act = 195;}
	break;
	case 138:
	{act = 196;}
	break;
	case 139:
	{act = 198;}
	break;
	case 140:
	{act = 199;}
	break;
	case 141:
	{act = 201;}
	break;
	case 142:
	{act = 202;}
	break;
	case 143:
	{act = 203;}
	break;
	case 144:
	{act = 204;}
	break;
	case 145:
	{act = 206;}
	break;
	case 146:
	{act = 207;}
	break;
	case 147:
	{act = 208;}
	break;
	case 148:
	{act = 209;}
	break;
	case 149:
	{act = 210;}
	break;
	case 150:
	{act = 211;}
	break;
	case 151:
	{act = 212;}
	break;
	case 152:
	{act = 213;}
	break;
	case 153:
	{act = 214;}
	break;
	case 154:
	{act = 215;}
	break;
	case 155:
	{act = 216;}
	break;
	case 156:
	{act = 217;}
	break;
	case 157:
	{act = 218;}
	break;
	case 158:
	{act = 219;}
	break;
	case 159:
	{act = 220;}
	break;
	case 160:
	{act = 221;}
	break;
	case 161:
	{act = 222;}
	break;
	case 162:
	{act = 223;}
	break;
	case 163:
	{act = 224;}
	break;
	case 164:
	{act = 225;}
	break;
	case 165:
	{act = 226;}
	break;
	case 166:
	{act = 227;}
	break;
	case 167:
	{act = 228;}
	break;
	case 168:
	{act = 229;}
	break;
	case 169:
	{act = 230;}
	break;
	case 170:
	{act = 231;}
	break;
	case 171:
	{act = 232;}
	break;
	case 172:
	{act = 233;}
	break;
	case 173:
	{act = 234;}
	break;
	case 174:
	{act = 235;}
	break;
	case 175:
	{act = 236;}
	break;
	case 176:
	{act = 237;}
	break;
	case 177:
	{act = 238;}
	break;
	case 178:
	{act = 239;}
	break;
	case 179:
	{act = 240;}
	break;
	case 180:
	{act = 253;}
	break;
	case 181:
	{act = 254;}
	break;
	case 182:
	{act = 255;}
	break;
	case 183:
	{act = 256;}
	break;
	case 184:
	{act = 257;}
	break;
	case 185:
	{act = 258;}
	break;
	case 186:
	{act = 259;}
	break;
	case 187:
	{act = 260;}
	break;
	case 188:
	{act = 261;}
	break;
	case 189:
	{act = 262;}
	break;
	case 190:
	{act = 263;}
	break;
	case 191:
	{act = 264;}
	break;
	case 192:
	{act = 265;}
	break;
	case 193:
	{act = 266;}
	break;
	case 194:
	{act = 267;}
	break;
	case 195:
	{act = 268;}
	break;
	case 196:
	{act = 269;}
	break;
	case 197:
	{act = 270;}
	break;
	case 198:
	{act = 271;}
	break;
	case 199:
	{act = 272;}
	break;
	case 200:
	{act = 273;}
	break;
	case 201:
	{act = 274;}
	break;
	case 202:
	{act = 275;}
	break;
	case 203:
	{act = 276;}
	break;
	case 204:
	{act = 277;}
	break;
	case 205:
	{act = 278;}
	break;
	case 206:
	{act = 279;}
	break;
	case 207:
	{act = 280;}
	break;
	case 208:
	{act = 281;}
	break;
	case 209:
	{act = 282;}
	break;
	case 210:
	{act = 283;}
	break;
	case 211:
	{act = 284;}
	break;
	case 212:
	{act = 285;}
	break;
	case 213:
	{act = 286;}
	break;
	case 214:
	{act = 287;}
	break;
	case 215:
	{act = 290;}
	break;
	case 216:
	{act = 292;}
	break;
	case 217:
	{act = 294;}
	break;
	case 218:
	{act = 296;}
	break;
	case 219:
	{act = 298;}
	break;
	case 220:
	{act = 302;}
	break;
	case 221:
	{te = p+1;{
	sym.tok = TK_NEWLINE;
	;
	{p++; goto _out; }
}}
	break;
	case 222:
	{te = p+1;{
	sym.tok = TK_CONST_EXPR;
	;
	{p++; goto _out; }
}}
	break;
	case 223:
	{te = p+1;{
	sym.tok = TK_LOG_AND;
	;
	{p++; goto _out; }
}}
	break;
	case 224:
	{te = p+1;{
	sym.tok = TK_RPAREN;
	;
	{p++; goto _out; }
}}
	break;
	case 225:
	{te = p+1;{
	sym.tok = TK_PLUS;
	;
	{p++; goto _out; }
}}
	break;
	case 226:
	{te = p+1;{
	sym.tok = TK_COMMA;
	;
	{p++; goto _out; }
}}
	break;
	case 227:
	{te = p+1;{
	sym.tok = TK_MINUS;
	;
	{p++; goto _out; }
}}
	break;
	case 228:
	{te = p+1;{
	sym.tok = TK_DOT;
	;
	{p++; goto _out; }
}}
	break;
	case 229:
	{te = p+1;{
	sym.tok = TK_DIVIDE;
	;
	{p++; goto _out; }
}}
	break;
	case 230:
	{te = p+1;{
	sym.tok = TK_COLON;
	;
	{p++; goto _out; }
}}
	break;
	case 231:
	{te = p+1;{
	sym.tok = TK_LEFT_SHIFT;
	;
	{p++; goto _out; }
}}
	break;
	case 232:
	{te = p+1;{
	sym.tok = TK_LESS_EQ;
	;
	{p++; goto _out; }
}}
	break;
	case 233:
	{te = p+1;{
	sym.tok = TK_NOT_EQ;
	;
	{p++; goto _out; }
}}
	break;
	case 234:
	{te = p+1;{
	sym.tok = TK_NOT_EQ;
	;
	{p++; goto _out; }
}}
	break;
	case 235:
	{te = p+1;{
	sym.tok = TK_EQUAL;
	;
	{p++; goto _out; }
}}
	break;
	case 236:
	{te = p+1;{
	sym.tok = TK_RIGHT_SHIFT;
	;
	{p++; goto _out; }
}}
	break;
	case 237:
	{te = p+1;{
	sym.tok = TK_GREATER_EQ;
	;
	{p++; goto _out; }
}}
	break;
	case 238:
	{te = p+1;{
	sym.tok = TK_QUESTION;
	;
	{p++; goto _out; }
}}
	break;
	case 239:
	{te = p+1;{
	sym.tok = TK_LSQUARE;
	;
	{p++; goto _out; }
}}
	break;
	case 240:
	{te = p+1;{
	sym.tok = TK_RSQUARE;
	;
	{p++; goto _out; }
}}
	break;
	case 241:
	{te = p+1;{
	sym.tok = TK_BIN_XOR;
	;
	{p++; goto _out; }
}}
	break;
	case 242:
	{te = p+1;{
	sym.tok = TK_POWER;
	;
	{p++; goto _out; }
}}
	break;
	case 243:
	{te = p+1;{
	sym.tok = TK_LCURLY;
	;
	{p++; goto _out; }
}}
	break;
	case 244:
	{te = p+1;{
	sym.tok = TK_LOG_OR;
	;
	{p++; goto _out; }
}}
	break;
	case 245:
	{te = p+1;{
	sym.tok = TK_RCURLY;
	;
	{p++; goto _out; }
}}
	break;
	case 246:
	{te = p+1;{
	sym.tok = TK_BIN_NOT;
	;
	{p++; goto _out; }
}}
	break;
	case 247:
	{te = p+1;{
	sym.tok = TK_B1;
	;
	{p++; goto _out; }
}}
	break;
	case 248:
	{te = p+1;{
	sym.tok = TK_C1;
	;
	{p++; goto _out; }
}}
	break;
	case 249:
	{te = p+1;{
	sym.tok = TK_D1;
	;
	{p++; goto _out; }
}}
	break;
	case 250:
	{te = p+1;{
	sym.tok = TK_E1;
	;
	{p++; goto _out; }
}}
	break;
	case 251:
	{te = p+1;{
	sym.tok = TK_H1;
	;
	{p++; goto _out; }
}}
	break;
	case 252:
	{te = p+1;{
	sym.tok = TK_L1;
	;
	{p++; goto _out; }
}}
	break;
	case 253:
	{te = p+1;{
	sym.tok = TK_A1;
	;
	{p++; goto _out; }
}}
	break;
	case 254:
	{te = p+1;{
	sym.tok = TK_F1;
	;
	{p++; goto _out; }
}}
	break;
	case 255:
	{te = p+1;{
	sym.tok = TK_BC1;
	;
	{p++; goto _out; }
}}
	break;
	case 256:
	{te = p+1;{
	sym.tok = TK_DE1;
	;
	{p++; goto _out; }
}}
	break;
	case 257:
	{te = p+1;{
	sym.tok = TK_HL1;
	;
	{p++; goto _out; }
}}
	break;
	case 258:
	{te = p+1;{
	sym.tok = TK_AF1;
	;
	{p++; goto _out; }
}}
	break;
	case 259:
	{te = p+1;{
	sym.tok = TK_IND_BC;
	p--; te--;
	{p++; goto _out; }
}}
	break;
	case 260:
	{te = p+1;{
	sym.tok = TK_IND_DE;
	p--; te--;
	{p++; goto _out; }
}}
	break;
	case 261:
	{te = p+1;{
	sym.tok = TK_IND_IX;
	p--; te--;
	{p++; goto _out; }
}}
	break;
	case 262:
	{te = p+1;{
	sym.tok = TK_IND_IY;
	p--; te--;
	{p++; goto _out; }
}}
	break;
	case 263:
	{te = p+1;{
	sym.tok = TK_IND_HL;
	p--; te--;
	{p++; goto _out; }
}}
	break;
	case 264:
	{te = p+1;{
	sym.tok = TK_IND_SP;
	p--; te--;
	{p++; goto _out; }
}}
	break;
	case 265:
	{te = p+1;{
	sym.tok = TK_IND_C;
	p--; te--;
	{p++; goto _out; }
}}
	break;
	case 266:
	{te = p+1;{
	sym.tok = TK_DS_B;
	;
	{p++; goto _out; }
}}
	break;
	case 267:
	{te = p+1;{
	sym.tok = TK_DS_W;
	;
	{p++; goto _out; }
}}
	break;
	case 268:
	{te = p+1;{
	sym.tok = TK_DS_P;
	;
	{p++; goto _out; }
}}
	break;
	case 269:
	{te = p+1;{
	sym.tok = TK_DS_Q;
	;
	{p++; goto _out; }
}}
	break;
	case 270:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_CCF1;
		sym.tok_opcode = TK_CCF1;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CCF1;
	}
	{p++; goto _out; }
}}
	break;
	case 271:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_RLA1;
		sym.tok_opcode = TK_RLA1;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLA1;
	}
	{p++; goto _out; }
}}
	break;
	case 272:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_RLCA1;
		sym.tok_opcode = TK_RLCA1;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLCA1;
	}
	{p++; goto _out; }
}}
	break;
	case 273:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_RRA1;
		sym.tok_opcode = TK_RRA1;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRA1;
	}
	{p++; goto _out; }
}}
	break;
	case 274:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_RRCA1;
		sym.tok_opcode = TK_RRCA1;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRCA1;
	}
	{p++; goto _out; }
}}
	break;
	case 275:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_SCF1;
		sym.tok_opcode = TK_SCF1;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SCF1;
	}
	{p++; goto _out; }
}}
	break;
	case 276:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_CU_WAIT;
		sym.tok_opcode = TK_CU_WAIT;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CU_WAIT;
	}
	{p++; goto _out; }
}}
	break;
	case 277:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_CU_MOVE;
		sym.tok_opcode = TK_CU_MOVE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CU_MOVE;
	}
	{p++; goto _out; }
}}
	break;
	case 278:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_CU_STOP;
		sym.tok_opcode = TK_CU_STOP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CU_STOP;
	}
	{p++; goto _out; }
}}
	break;
	case 279:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_CU_NOP;
		sym.tok_opcode = TK_CU_NOP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CU_NOP;
	}
	{p++; goto _out; }
}}
	break;
	case 280:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_DMA_WR0;
		sym.tok_opcode = TK_DMA_WR0;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DMA_WR0;
	}
	{p++; goto _out; }
}}
	break;
	case 281:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_DMA_WR1;
		sym.tok_opcode = TK_DMA_WR1;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DMA_WR1;
	}
	{p++; goto _out; }
}}
	break;
	case 282:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_DMA_WR2;
		sym.tok_opcode = TK_DMA_WR2;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DMA_WR2;
	}
	{p++; goto _out; }
}}
	break;
	case 283:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_DMA_WR3;
		sym.tok_opcode = TK_DMA_WR3;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DMA_WR3;
	}
	{p++; goto _out; }
}}
	break;
	case 284:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_DMA_WR4;
		sym.tok_opcode = TK_DMA_WR4;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DMA_WR4;
	}
	{p++; goto _out; }
}}
	break;
	case 285:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_DMA_WR5;
		sym.tok_opcode = TK_DMA_WR5;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DMA_WR5;
	}
	{p++; goto _out; }
}}
	break;
	case 286:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_DMA_WR6;
		sym.tok_opcode = TK_DMA_WR6;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DMA_WR6;
	}
	{p++; goto _out; }
}}
	break;
	case 287:
	{te = p+1;{
	if (expect_opcode) {
		sym.tok = TK_DMA_CMD;
		sym.tok_opcode = TK_DMA_CMD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DMA_CMD;
	}
	{p++; goto _out; }
}}
	break;
	case 288:
	{te = p+1;}
	break;
	case 289:
	{te = p+1;{
  while ( ts[ 0] == '.' || isspace(ts[ 0]) ) ts++;
  while ( te[-1] == ':' || isspace(te[-1]) ) te--;
  sym.tok = TK_LABEL;
  {p++; goto _out; }
 }}
	break;
	case 290:
	{te = p+1;{
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts, te - ts - 1, 16 );
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 291:
	{te = p+1;{
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts + 2, te - ts - 3, 2 );
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 292:
	{te = p+1;{
  sym.tok = TK_NUMBER;
  sym.number = 0;
  if ( get_sym_string() )
  {
   STR_DEFINE(string, STR_SIZE);
   Str_set_bytes(string, ts, te-ts);
   Str_len(string) = cstr_compress_escapes(Str_data(string));
   if (Str_len(string) == 1)
    sym.number = Str_data(string)[0];
   else
    error_invalid_squoted_string();
   STR_DELETE(string);
  }
  else
  {
   error_invalid_squoted_string();
  }
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 293:
	{te = p+1;{
  sym.tok = TK_STRING;
  if ( ! get_sym_string() )
   error_unclosed_string();
  {p++; goto _out; }
 }}
	break;
	case 294:
	{te = p+1;{
  sym.tok = TK_NIL;
  skip_to_newline();
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 295:
	{te = p;p--;{
	sym.tok = TK_LOG_NOT;
	;
	{p++; goto _out; }
}}
	break;
	case 296:
	{te = p;p--;{
	sym.tok = TK_BIN_AND;
	;
	{p++; goto _out; }
}}
	break;
	case 297:
	{te = p;p--;{
	sym.tok = TK_LPAREN;
	;
	{p++; goto _out; }
}}
	break;
	case 298:
	{te = p;p--;{
	sym.tok = TK_MULTIPLY;
	;
	{p++; goto _out; }
}}
	break;
	case 299:
	{te = p;p--;{
	sym.tok = TK_DOT;
	;
	{p++; goto _out; }
}}
	break;
	case 300:
	{te = p;p--;{
	sym.tok = TK_LESS;
	;
	{p++; goto _out; }
}}
	break;
	case 301:
	{te = p;p--;{
	sym.tok = TK_EQUAL;
	;
	{p++; goto _out; }
}}
	break;
	case 302:
	{te = p;p--;{
	sym.tok = TK_GREATER;
	;
	{p++; goto _out; }
}}
	break;
	case 303:
	{te = p;p--;{
	sym.tok = TK_BIN_OR;
	;
	{p++; goto _out; }
}}
	break;
	case 304:
	{te = p;p--;{
	sym.tok = TK_C;
	;
	{p++; goto _out; }
}}
	break;
	case 305:
	{te = p;p--;{
	sym.tok = TK_PO;
	;
	{p++; goto _out; }
}}
	break;
	case 306:
	{te = p;p--;{
	sym.tok = TK_P;
	;
	{p++; goto _out; }
}}
	break;
	case 307:
	{te = p;p--;{
	sym.tok = TK_M;
	;
	{p++; goto _out; }
}}
	break;
	case 308:
	{te = p;p--;{
	sym.tok = TK_B;
	;
	{p++; goto _out; }
}}
	break;
	case 309:
	{te = p;p--;{
	sym.tok = TK_D;
	;
	{p++; goto _out; }
}}
	break;
	case 310:
	{te = p;p--;{
	sym.tok = TK_E;
	;
	{p++; goto _out; }
}}
	break;
	case 311:
	{te = p;p--;{
	sym.tok = TK_H;
	;
	{p++; goto _out; }
}}
	break;
	case 312:
	{te = p;p--;{
	sym.tok = TK_L;
	;
	{p++; goto _out; }
}}
	break;
	case 313:
	{te = p;p--;{
	sym.tok = TK_A;
	;
	{p++; goto _out; }
}}
	break;
	case 314:
	{te = p;p--;{
	sym.tok = TK_F;
	;
	{p++; goto _out; }
}}
	break;
	case 315:
	{te = p;p--;{
	sym.tok = TK_I;
	;
	{p++; goto _out; }
}}
	break;
	case 316:
	{te = p;p--;{
	sym.tok = TK_R;
	;
	{p++; goto _out; }
}}
	break;
	case 317:
	{te = p;p--;{
	if (opt_cpu() & CPU_Z80_ZXN) {
		sym.tok = TK_X;
	}
	else {
		sym.tok = TK_NAME;
	}
	{p++; goto _out; }
}}
	break;
	case 318:
	{te = p;p--;{
	sym.tok = TK_BC;
	;
	{p++; goto _out; }
}}
	break;
	case 319:
	{te = p;p--;{
	sym.tok = TK_DE;
	;
	{p++; goto _out; }
}}
	break;
	case 320:
	{te = p;p--;{
	sym.tok = TK_HL;
	;
	{p++; goto _out; }
}}
	break;
	case 321:
	{te = p;p--;{
	sym.tok = TK_IX;
	;
	{p++; goto _out; }
}}
	break;
	case 322:
	{te = p;p--;{
	sym.tok = TK_IY;
	;
	{p++; goto _out; }
}}
	break;
	case 323:
	{te = p;p--;{
	sym.tok = TK_AF;
	;
	{p++; goto _out; }
}}
	break;
	case 324:
	{te = p;p--;{
	sym.tok = TK_IP;
	;
	{p++; goto _out; }
}}
	break;
	case 325:
	{te = p;p--;{
	sym.tok = TK_SU;
	;
	{p++; goto _out; }
}}
	break;
	case 326:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_ELIF;
		sym.tok_opcode = TK_ELIF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ELIF;
	}
	{p++; goto _out; }
}}
	break;
	case 327:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_IF;
		sym.tok_opcode = TK_IF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IF;
	}
	{p++; goto _out; }
}}
	break;
	case 328:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_CALL;
		sym.tok_opcode = TK_CALL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CALL;
	}
	{p++; goto _out; }
}}
	break;
	case 329:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_CCF;
		sym.tok_opcode = TK_CCF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CCF;
	}
	{p++; goto _out; }
}}
	break;
	case 330:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_CP;
		sym.tok_opcode = TK_CP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CP;
	}
	{p++; goto _out; }
}}
	break;
	case 331:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_CPD;
		sym.tok_opcode = TK_CPD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPD;
	}
	{p++; goto _out; }
}}
	break;
	case 332:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_CPI;
		sym.tok_opcode = TK_CPI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPI;
	}
	{p++; goto _out; }
}}
	break;
	case 333:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_EI;
		sym.tok_opcode = TK_EI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_EI;
	}
	{p++; goto _out; }
}}
	break;
	case 334:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_EX;
		sym.tok_opcode = TK_EX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_EX;
	}
	{p++; goto _out; }
}}
	break;
	case 335:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_IN;
		sym.tok_opcode = TK_IN;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IN;
	}
	{p++; goto _out; }
}}
	break;
	case 336:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_INC;
		sym.tok_opcode = TK_INC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INC;
	}
	{p++; goto _out; }
}}
	break;
	case 337:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_IND;
		sym.tok_opcode = TK_IND;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IND;
	}
	{p++; goto _out; }
}}
	break;
	case 338:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_INI;
		sym.tok_opcode = TK_INI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INI;
	}
	{p++; goto _out; }
}}
	break;
	case 339:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_LD;
		sym.tok_opcode = TK_LD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LD;
	}
	{p++; goto _out; }
}}
	break;
	case 340:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_LDD;
		sym.tok_opcode = TK_LDD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDD;
	}
	{p++; goto _out; }
}}
	break;
	case 341:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_LDDR;
		sym.tok_opcode = TK_LDDR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDDR;
	}
	{p++; goto _out; }
}}
	break;
	case 342:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_LDI;
		sym.tok_opcode = TK_LDI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDI;
	}
	{p++; goto _out; }
}}
	break;
	case 343:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_LDIR;
		sym.tok_opcode = TK_LDIR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDIR;
	}
	{p++; goto _out; }
}}
	break;
	case 344:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_OR;
		sym.tok_opcode = TK_OR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OR;
	}
	{p++; goto _out; }
}}
	break;
	case 345:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_OUT;
		sym.tok_opcode = TK_OUT;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OUT;
	}
	{p++; goto _out; }
}}
	break;
	case 346:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_OUTI;
		sym.tok_opcode = TK_OUTI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OUTI;
	}
	{p++; goto _out; }
}}
	break;
	case 347:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RET;
		sym.tok_opcode = TK_RET;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RET;
	}
	{p++; goto _out; }
}}
	break;
	case 348:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RL;
		sym.tok_opcode = TK_RL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RL;
	}
	{p++; goto _out; }
}}
	break;
	case 349:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RLA;
		sym.tok_opcode = TK_RLA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLA;
	}
	{p++; goto _out; }
}}
	break;
	case 350:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RLC;
		sym.tok_opcode = TK_RLC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLC;
	}
	{p++; goto _out; }
}}
	break;
	case 351:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RLCA;
		sym.tok_opcode = TK_RLCA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLCA;
	}
	{p++; goto _out; }
}}
	break;
	case 352:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RR;
		sym.tok_opcode = TK_RR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RR;
	}
	{p++; goto _out; }
}}
	break;
	case 353:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RRA;
		sym.tok_opcode = TK_RRA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRA;
	}
	{p++; goto _out; }
}}
	break;
	case 354:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RRC;
		sym.tok_opcode = TK_RRC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRC;
	}
	{p++; goto _out; }
}}
	break;
	case 355:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_RRCA;
		sym.tok_opcode = TK_RRCA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRCA;
	}
	{p++; goto _out; }
}}
	break;
	case 356:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_SCF;
		sym.tok_opcode = TK_SCF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SCF;
	}
	{p++; goto _out; }
}}
	break;
	case 357:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_SET;
		sym.tok_opcode = TK_SET;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SET;
	}
	{p++; goto _out; }
}}
	break;
	case 358:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_SWAP;
		sym.tok_opcode = TK_SWAP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SWAP;
	}
	{p++; goto _out; }
}}
	break;
	case 359:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_FILL;
		sym.tok_opcode = TK_FILL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_FILL;
	}
	{p++; goto _out; }
}}
	break;
	case 360:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_MMU;
		sym.tok_opcode = TK_MMU;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU;
	}
	{p++; goto _out; }
}}
	break;
	case 361:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_OTDM;
		sym.tok_opcode = TK_OTDM;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTDM;
	}
	{p++; goto _out; }
}}
	break;
	case 362:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_OTIM;
		sym.tok_opcode = TK_OTIM;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTIM;
	}
	{p++; goto _out; }
}}
	break;
	case 363:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_TST;
		sym.tok_opcode = TK_TST;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_TST;
	}
	{p++; goto _out; }
}}
	break;
	case 364:
	{te = p;p--;{
	if (expect_opcode) {
		sym.tok = TK_LDP;
		sym.tok_opcode = TK_LDP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDP;
	}
	{p++; goto _out; }
}}
	break;
	case 365:
	{te = p;p--;}
	break;
	case 366:
	{te = p;p--;{
  sym.tok = TK_NAME;
  {p++; goto _out; }
 }}
	break;
	case 367:
	{te = p;p--;{
  while ( ts[ 0] == '.' || isspace(ts[ 0]) ) ts++;
  while ( te[-1] == ':' || isspace(te[-1]) ) te--;
  sym.tok = TK_LABEL;
  {p++; goto _out; }
 }}
	break;
	case 368:
	{te = p;p--;{
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts, te - ts, 10 );
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 369:
	{te = p;p--;{
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts + 2, te - ts - 2, 16 );
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 370:
	{te = p;p--;{
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts, te - ts - 1, 2 );
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 371:
	{te = p;p--;{
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts + 1, te - ts - 1, 2 );
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 372:
	{{p = ((te))-1;}{
	sym.tok = TK_LPAREN;
	;
	{p++; goto _out; }
}}
	break;
	case 373:
	{{p = ((te))-1;}{
	sym.tok = TK_DOT;
	;
	{p++; goto _out; }
}}
	break;
	case 374:
	{{p = ((te))-1;}{
  sym.tok = TK_NAME;
  {p++; goto _out; }
 }}
	break;
	case 375:
	{{p = ((te))-1;}{
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts, te - ts, 10 );
  ts = te = p;
  {p++; goto _out; }
 }}
	break;
	case 376:
	{	switch( act ) {
	case 1:
	{{p = ((te))-1;}
	sym.tok = TK_ASMPC;
	;
	{p++; goto _out; }
}
	break;
	case 2:
	{{p = ((te))-1;}
	sym.tok = TK_ASMPC;
	;
	{p++; goto _out; }
}
	break;
	case 6:
	{{p = ((te))-1;}
	sym.tok = TK_MOD;
	;
	{p++; goto _out; }
}
	break;
	case 38:
	{{p = ((te))-1;}
	sym.tok = TK_NZ;
	;
	{p++; goto _out; }
}
	break;
	case 39:
	{{p = ((te))-1;}
	sym.tok = TK_Z;
	;
	{p++; goto _out; }
}
	break;
	case 40:
	{{p = ((te))-1;}
	sym.tok = TK_NC;
	;
	{p++; goto _out; }
}
	break;
	case 41:
	{{p = ((te))-1;}
	sym.tok = TK_C;
	;
	{p++; goto _out; }
}
	break;
	case 42:
	{{p = ((te))-1;}
	sym.tok = TK_PO;
	;
	{p++; goto _out; }
}
	break;
	case 43:
	{{p = ((te))-1;}
	sym.tok = TK_PE;
	;
	{p++; goto _out; }
}
	break;
	case 44:
	{{p = ((te))-1;}
	sym.tok = TK_P;
	;
	{p++; goto _out; }
}
	break;
	case 45:
	{{p = ((te))-1;}
	sym.tok = TK_M;
	;
	{p++; goto _out; }
}
	break;
	case 46:
	{{p = ((te))-1;}
	if ((opt_cpu() & CPU_R2K) || (opt_cpu() & CPU_R3K)) {
		sym.tok = TK_LZ;
	}
	else {
		sym.tok = TK_NAME;
	}
	{p++; goto _out; }
}
	break;
	case 47:
	{{p = ((te))-1;}
	if ((opt_cpu() & CPU_R2K) || (opt_cpu() & CPU_R3K)) {
		sym.tok = TK_LO;
	}
	else {
		sym.tok = TK_NAME;
	}
	{p++; goto _out; }
}
	break;
	case 48:
	{{p = ((te))-1;}
	sym.tok = TK_NV;
	;
	{p++; goto _out; }
}
	break;
	case 49:
	{{p = ((te))-1;}
	sym.tok = TK_V;
	;
	{p++; goto _out; }
}
	break;
	case 50:
	{{p = ((te))-1;}
	sym.tok = TK_B;
	;
	{p++; goto _out; }
}
	break;
	case 51:
	{{p = ((te))-1;}
	sym.tok = TK_D;
	;
	{p++; goto _out; }
}
	break;
	case 52:
	{{p = ((te))-1;}
	sym.tok = TK_E;
	;
	{p++; goto _out; }
}
	break;
	case 53:
	{{p = ((te))-1;}
	sym.tok = TK_H;
	;
	{p++; goto _out; }
}
	break;
	case 54:
	{{p = ((te))-1;}
	sym.tok = TK_IXH;
	;
	{p++; goto _out; }
}
	break;
	case 55:
	{{p = ((te))-1;}
	sym.tok = TK_IYH;
	;
	{p++; goto _out; }
}
	break;
	case 56:
	{{p = ((te))-1;}
	sym.tok = TK_L;
	;
	{p++; goto _out; }
}
	break;
	case 57:
	{{p = ((te))-1;}
	sym.tok = TK_IXL;
	;
	{p++; goto _out; }
}
	break;
	case 58:
	{{p = ((te))-1;}
	sym.tok = TK_IYL;
	;
	{p++; goto _out; }
}
	break;
	case 59:
	{{p = ((te))-1;}
	sym.tok = TK_A;
	;
	{p++; goto _out; }
}
	break;
	case 60:
	{{p = ((te))-1;}
	sym.tok = TK_F;
	;
	{p++; goto _out; }
}
	break;
	case 61:
	{{p = ((te))-1;}
	sym.tok = TK_I;
	;
	{p++; goto _out; }
}
	break;
	case 62:
	{{p = ((te))-1;}
	sym.tok = TK_IIR;
	;
	{p++; goto _out; }
}
	break;
	case 63:
	{{p = ((te))-1;}
	sym.tok = TK_R;
	;
	{p++; goto _out; }
}
	break;
	case 64:
	{{p = ((te))-1;}
	sym.tok = TK_EIR;
	;
	{p++; goto _out; }
}
	break;
	case 65:
	{{p = ((te))-1;}
	if (opt_cpu() & CPU_Z80_ZXN) {
		sym.tok = TK_X;
	}
	else {
		sym.tok = TK_NAME;
	}
	{p++; goto _out; }
}
	break;
	case 66:
	{{p = ((te))-1;}
	sym.tok = TK_BC;
	;
	{p++; goto _out; }
}
	break;
	case 67:
	{{p = ((te))-1;}
	sym.tok = TK_DE;
	;
	{p++; goto _out; }
}
	break;
	case 68:
	{{p = ((te))-1;}
	sym.tok = TK_HL;
	;
	{p++; goto _out; }
}
	break;
	case 69:
	{{p = ((te))-1;}
	sym.tok = TK_IX;
	;
	{p++; goto _out; }
}
	break;
	case 70:
	{{p = ((te))-1;}
	sym.tok = TK_IY;
	;
	{p++; goto _out; }
}
	break;
	case 71:
	{{p = ((te))-1;}
	sym.tok = TK_AF;
	;
	{p++; goto _out; }
}
	break;
	case 72:
	{{p = ((te))-1;}
	sym.tok = TK_SP;
	;
	{p++; goto _out; }
}
	break;
	case 73:
	{{p = ((te))-1;}
	sym.tok = TK_IP;
	;
	{p++; goto _out; }
}
	break;
	case 74:
	{{p = ((te))-1;}
	sym.tok = TK_SU;
	;
	{p++; goto _out; }
}
	break;
	case 75:
	{{p = ((te))-1;}
	sym.tok = TK_XPC;
	;
	{p++; goto _out; }
}
	break;
	case 95:
	{{p = ((te))-1;}
	sym.tok = TK_A32;
	;
	{p++; goto _out; }
}
	break;
	case 96:
	{{p = ((te))-1;}
	sym.tok = TK_DEHL;
	;
	{p++; goto _out; }
}
	break;
	case 97:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ALIGN;
		sym.tok_opcode = TK_ALIGN;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ALIGN;
	}
	{p++; goto _out; }
}
	break;
	case 98:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_BINARY;
		sym.tok_opcode = TK_BINARY;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_BINARY;
	}
	{p++; goto _out; }
}
	break;
	case 99:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_C_LINE;
		sym.tok_opcode = TK_C_LINE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_C_LINE;
	}
	{p++; goto _out; }
}
	break;
	case 100:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFB;
		sym.tok_opcode = TK_DEFB;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFB;
	}
	{p++; goto _out; }
}
	break;
	case 101:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFC;
		sym.tok_opcode = TK_DEFC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFC;
	}
	{p++; goto _out; }
}
	break;
	case 102:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFDB;
		sym.tok_opcode = TK_DEFDB;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFDB;
	}
	{p++; goto _out; }
}
	break;
	case 103:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFGROUP;
		sym.tok_opcode = TK_DEFGROUP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFGROUP;
	}
	{p++; goto _out; }
}
	break;
	case 104:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFINE;
		sym.tok_opcode = TK_DEFINE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFINE;
	}
	{p++; goto _out; }
}
	break;
	case 105:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFM;
		sym.tok_opcode = TK_DEFM;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFM;
	}
	{p++; goto _out; }
}
	break;
	case 106:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFQ;
		sym.tok_opcode = TK_DEFQ;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFQ;
	}
	{p++; goto _out; }
}
	break;
	case 107:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFS;
		sym.tok_opcode = TK_DEFS;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFS;
	}
	{p++; goto _out; }
}
	break;
	case 108:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFVARS;
		sym.tok_opcode = TK_DEFVARS;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFVARS;
	}
	{p++; goto _out; }
}
	break;
	case 109:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEFW;
		sym.tok_opcode = TK_DEFW;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEFW;
	}
	{p++; goto _out; }
}
	break;
	case 110:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEPHASE;
		sym.tok_opcode = TK_DEPHASE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEPHASE;
	}
	{p++; goto _out; }
}
	break;
	case 111:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ELSE;
		sym.tok_opcode = TK_ELSE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ELSE;
	}
	{p++; goto _out; }
}
	break;
	case 112:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ELIF;
		sym.tok_opcode = TK_ELIF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ELIF;
	}
	{p++; goto _out; }
}
	break;
	case 113:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ELIFDEF;
		sym.tok_opcode = TK_ELIFDEF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ELIFDEF;
	}
	{p++; goto _out; }
}
	break;
	case 114:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ELIFNDEF;
		sym.tok_opcode = TK_ELIFNDEF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ELIFNDEF;
	}
	{p++; goto _out; }
}
	break;
	case 115:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ENDIF;
		sym.tok_opcode = TK_ENDIF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ENDIF;
	}
	{p++; goto _out; }
}
	break;
	case 116:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_EXTERN;
		sym.tok_opcode = TK_EXTERN;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_EXTERN;
	}
	{p++; goto _out; }
}
	break;
	case 117:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_GLOBAL;
		sym.tok_opcode = TK_GLOBAL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_GLOBAL;
	}
	{p++; goto _out; }
}
	break;
	case 118:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IF;
		sym.tok_opcode = TK_IF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IF;
	}
	{p++; goto _out; }
}
	break;
	case 119:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IFDEF;
		sym.tok_opcode = TK_IFDEF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IFDEF;
	}
	{p++; goto _out; }
}
	break;
	case 120:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IFNDEF;
		sym.tok_opcode = TK_IFNDEF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IFNDEF;
	}
	{p++; goto _out; }
}
	break;
	case 121:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_INCLUDE;
		sym.tok_opcode = TK_INCLUDE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INCLUDE;
	}
	{p++; goto _out; }
}
	break;
	case 122:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LIB;
		sym.tok_opcode = TK_LIB;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LIB;
	}
	{p++; goto _out; }
}
	break;
	case 123:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LINE;
		sym.tok_opcode = TK_LINE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LINE;
	}
	{p++; goto _out; }
}
	break;
	case 124:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LSTOFF;
		sym.tok_opcode = TK_LSTOFF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LSTOFF;
	}
	{p++; goto _out; }
}
	break;
	case 125:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LSTON;
		sym.tok_opcode = TK_LSTON;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LSTON;
	}
	{p++; goto _out; }
}
	break;
	case 126:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MODULE;
		sym.tok_opcode = TK_MODULE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MODULE;
	}
	{p++; goto _out; }
}
	break;
	case 127:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ORG;
		sym.tok_opcode = TK_ORG;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ORG;
	}
	{p++; goto _out; }
}
	break;
	case 128:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_PHASE;
		sym.tok_opcode = TK_PHASE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_PHASE;
	}
	{p++; goto _out; }
}
	break;
	case 129:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_PUBLIC;
		sym.tok_opcode = TK_PUBLIC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_PUBLIC;
	}
	{p++; goto _out; }
}
	break;
	case 130:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SECTION;
		sym.tok_opcode = TK_SECTION;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SECTION;
	}
	{p++; goto _out; }
}
	break;
	case 131:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_UNDEFINE;
		sym.tok_opcode = TK_UNDEFINE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_UNDEFINE;
	}
	{p++; goto _out; }
}
	break;
	case 132:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_XDEF;
		sym.tok_opcode = TK_XDEF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_XDEF;
	}
	{p++; goto _out; }
}
	break;
	case 133:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_XLIB;
		sym.tok_opcode = TK_XLIB;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_XLIB;
	}
	{p++; goto _out; }
}
	break;
	case 134:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_XREF;
		sym.tok_opcode = TK_XREF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_XREF;
	}
	{p++; goto _out; }
}
	break;
	case 139:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ADC;
		sym.tok_opcode = TK_ADC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ADC;
	}
	{p++; goto _out; }
}
	break;
	case 140:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ADD;
		sym.tok_opcode = TK_ADD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ADD;
	}
	{p++; goto _out; }
}
	break;
	case 141:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_AND;
		sym.tok_opcode = TK_AND;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_AND;
	}
	{p++; goto _out; }
}
	break;
	case 142:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_BIT;
		sym.tok_opcode = TK_BIT;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_BIT;
	}
	{p++; goto _out; }
}
	break;
	case 143:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CALL;
		sym.tok_opcode = TK_CALL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CALL;
	}
	{p++; goto _out; }
}
	break;
	case 144:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CCF;
		sym.tok_opcode = TK_CCF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CCF;
	}
	{p++; goto _out; }
}
	break;
	case 146:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CP;
		sym.tok_opcode = TK_CP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CP;
	}
	{p++; goto _out; }
}
	break;
	case 147:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CPD;
		sym.tok_opcode = TK_CPD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPD;
	}
	{p++; goto _out; }
}
	break;
	case 148:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CPDR;
		sym.tok_opcode = TK_CPDR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPDR;
	}
	{p++; goto _out; }
}
	break;
	case 149:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CPI;
		sym.tok_opcode = TK_CPI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPI;
	}
	{p++; goto _out; }
}
	break;
	case 150:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CPIR;
		sym.tok_opcode = TK_CPIR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPIR;
	}
	{p++; goto _out; }
}
	break;
	case 151:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CPL;
		sym.tok_opcode = TK_CPL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CPL;
	}
	{p++; goto _out; }
}
	break;
	case 152:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DAA;
		sym.tok_opcode = TK_DAA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DAA;
	}
	{p++; goto _out; }
}
	break;
	case 153:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DEC;
		sym.tok_opcode = TK_DEC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DEC;
	}
	{p++; goto _out; }
}
	break;
	case 154:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DI;
		sym.tok_opcode = TK_DI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DI;
	}
	{p++; goto _out; }
}
	break;
	case 155:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_DJNZ;
		sym.tok_opcode = TK_DJNZ;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_DJNZ;
	}
	{p++; goto _out; }
}
	break;
	case 156:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_EI;
		sym.tok_opcode = TK_EI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_EI;
	}
	{p++; goto _out; }
}
	break;
	case 157:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_EX;
		sym.tok_opcode = TK_EX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_EX;
	}
	{p++; goto _out; }
}
	break;
	case 158:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_EXX;
		sym.tok_opcode = TK_EXX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_EXX;
	}
	{p++; goto _out; }
}
	break;
	case 159:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_HALT;
		sym.tok_opcode = TK_HALT;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_HALT;
	}
	{p++; goto _out; }
}
	break;
	case 160:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IM;
		sym.tok_opcode = TK_IM;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IM;
	}
	{p++; goto _out; }
}
	break;
	case 161:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IN;
		sym.tok_opcode = TK_IN;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IN;
	}
	{p++; goto _out; }
}
	break;
	case 162:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_INC;
		sym.tok_opcode = TK_INC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INC;
	}
	{p++; goto _out; }
}
	break;
	case 163:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IND;
		sym.tok_opcode = TK_IND;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IND;
	}
	{p++; goto _out; }
}
	break;
	case 164:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_INDR;
		sym.tok_opcode = TK_INDR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INDR;
	}
	{p++; goto _out; }
}
	break;
	case 165:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_INI;
		sym.tok_opcode = TK_INI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INI;
	}
	{p++; goto _out; }
}
	break;
	case 166:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_INIR;
		sym.tok_opcode = TK_INIR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INIR;
	}
	{p++; goto _out; }
}
	break;
	case 167:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_JP;
		sym.tok_opcode = TK_JP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_JP;
	}
	{p++; goto _out; }
}
	break;
	case 168:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_JR;
		sym.tok_opcode = TK_JR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_JR;
	}
	{p++; goto _out; }
}
	break;
	case 169:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LD;
		sym.tok_opcode = TK_LD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LD;
	}
	{p++; goto _out; }
}
	break;
	case 170:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDD;
		sym.tok_opcode = TK_LDD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDD;
	}
	{p++; goto _out; }
}
	break;
	case 171:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDDR;
		sym.tok_opcode = TK_LDDR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDDR;
	}
	{p++; goto _out; }
}
	break;
	case 172:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDI;
		sym.tok_opcode = TK_LDI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDI;
	}
	{p++; goto _out; }
}
	break;
	case 173:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDIR;
		sym.tok_opcode = TK_LDIR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDIR;
	}
	{p++; goto _out; }
}
	break;
	case 174:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_NEG;
		sym.tok_opcode = TK_NEG;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_NEG;
	}
	{p++; goto _out; }
}
	break;
	case 175:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_NOP;
		sym.tok_opcode = TK_NOP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_NOP;
	}
	{p++; goto _out; }
}
	break;
	case 176:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OR;
		sym.tok_opcode = TK_OR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OR;
	}
	{p++; goto _out; }
}
	break;
	case 177:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OTDR;
		sym.tok_opcode = TK_OTDR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTDR;
	}
	{p++; goto _out; }
}
	break;
	case 178:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OTIR;
		sym.tok_opcode = TK_OTIR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTIR;
	}
	{p++; goto _out; }
}
	break;
	case 179:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OUT;
		sym.tok_opcode = TK_OUT;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OUT;
	}
	{p++; goto _out; }
}
	break;
	case 180:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OUTD;
		sym.tok_opcode = TK_OUTD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OUTD;
	}
	{p++; goto _out; }
}
	break;
	case 181:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OUTI;
		sym.tok_opcode = TK_OUTI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OUTI;
	}
	{p++; goto _out; }
}
	break;
	case 182:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_POP;
		sym.tok_opcode = TK_POP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_POP;
	}
	{p++; goto _out; }
}
	break;
	case 183:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_PUSH;
		sym.tok_opcode = TK_PUSH;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_PUSH;
	}
	{p++; goto _out; }
}
	break;
	case 184:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RES;
		sym.tok_opcode = TK_RES;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RES;
	}
	{p++; goto _out; }
}
	break;
	case 185:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RET;
		sym.tok_opcode = TK_RET;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RET;
	}
	{p++; goto _out; }
}
	break;
	case 186:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RETI;
		sym.tok_opcode = TK_RETI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RETI;
	}
	{p++; goto _out; }
}
	break;
	case 187:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RETN;
		sym.tok_opcode = TK_RETN;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RETN;
	}
	{p++; goto _out; }
}
	break;
	case 188:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RL;
		sym.tok_opcode = TK_RL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RL;
	}
	{p++; goto _out; }
}
	break;
	case 189:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RLA;
		sym.tok_opcode = TK_RLA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLA;
	}
	{p++; goto _out; }
}
	break;
	case 191:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RLC;
		sym.tok_opcode = TK_RLC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLC;
	}
	{p++; goto _out; }
}
	break;
	case 192:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RLCA;
		sym.tok_opcode = TK_RLCA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLCA;
	}
	{p++; goto _out; }
}
	break;
	case 194:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RLD;
		sym.tok_opcode = TK_RLD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RLD;
	}
	{p++; goto _out; }
}
	break;
	case 195:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RR;
		sym.tok_opcode = TK_RR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RR;
	}
	{p++; goto _out; }
}
	break;
	case 196:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RRA;
		sym.tok_opcode = TK_RRA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRA;
	}
	{p++; goto _out; }
}
	break;
	case 198:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RRC;
		sym.tok_opcode = TK_RRC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRC;
	}
	{p++; goto _out; }
}
	break;
	case 199:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RRCA;
		sym.tok_opcode = TK_RRCA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRCA;
	}
	{p++; goto _out; }
}
	break;
	case 201:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RRD;
		sym.tok_opcode = TK_RRD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RRD;
	}
	{p++; goto _out; }
}
	break;
	case 202:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RST;
		sym.tok_opcode = TK_RST;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RST;
	}
	{p++; goto _out; }
}
	break;
	case 203:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SBC;
		sym.tok_opcode = TK_SBC;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SBC;
	}
	{p++; goto _out; }
}
	break;
	case 204:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SCF;
		sym.tok_opcode = TK_SCF;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SCF;
	}
	{p++; goto _out; }
}
	break;
	case 206:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SET;
		sym.tok_opcode = TK_SET;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SET;
	}
	{p++; goto _out; }
}
	break;
	case 207:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SLA;
		sym.tok_opcode = TK_SLA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SLA;
	}
	{p++; goto _out; }
}
	break;
	case 208:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SLL;
		sym.tok_opcode = TK_SLL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SLL;
	}
	{p++; goto _out; }
}
	break;
	case 209:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SLI;
		sym.tok_opcode = TK_SLI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SLI;
	}
	{p++; goto _out; }
}
	break;
	case 210:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SRA;
		sym.tok_opcode = TK_SRA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SRA;
	}
	{p++; goto _out; }
}
	break;
	case 211:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SRL;
		sym.tok_opcode = TK_SRL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SRL;
	}
	{p++; goto _out; }
}
	break;
	case 212:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SUB;
		sym.tok_opcode = TK_SUB;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SUB;
	}
	{p++; goto _out; }
}
	break;
	case 213:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_XOR;
		sym.tok_opcode = TK_XOR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_XOR;
	}
	{p++; goto _out; }
}
	break;
	case 214:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SWAPNIB;
		sym.tok_opcode = TK_SWAPNIB;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SWAPNIB;
	}
	{p++; goto _out; }
}
	break;
	case 215:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SWAP;
		sym.tok_opcode = TK_SWAP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SWAP;
	}
	{p++; goto _out; }
}
	break;
	case 216:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OUTINB;
		sym.tok_opcode = TK_OUTINB;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OUTINB;
	}
	{p++; goto _out; }
}
	break;
	case 217:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDIX;
		sym.tok_opcode = TK_LDIX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDIX;
	}
	{p++; goto _out; }
}
	break;
	case 218:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDIRX;
		sym.tok_opcode = TK_LDIRX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDIRX;
	}
	{p++; goto _out; }
}
	break;
	case 219:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDDX;
		sym.tok_opcode = TK_LDDX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDDX;
	}
	{p++; goto _out; }
}
	break;
	case 220:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDDRX;
		sym.tok_opcode = TK_LDDRX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDDRX;
	}
	{p++; goto _out; }
}
	break;
	case 221:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDIRSCALE;
		sym.tok_opcode = TK_LDIRSCALE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDIRSCALE;
	}
	{p++; goto _out; }
}
	break;
	case 222:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDPIRX;
		sym.tok_opcode = TK_LDPIRX;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDPIRX;
	}
	{p++; goto _out; }
}
	break;
	case 223:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDWS;
		sym.tok_opcode = TK_LDWS;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDWS;
	}
	{p++; goto _out; }
}
	break;
	case 224:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_FILL;
		sym.tok_opcode = TK_FILL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_FILL;
	}
	{p++; goto _out; }
}
	break;
	case 225:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_FILLDE;
		sym.tok_opcode = TK_FILLDE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_FILLDE;
	}
	{p++; goto _out; }
}
	break;
	case 226:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MIRROR;
		sym.tok_opcode = TK_MIRROR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MIRROR;
	}
	{p++; goto _out; }
}
	break;
	case 227:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_NEXTREG;
		sym.tok_opcode = TK_NEXTREG;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_NEXTREG;
	}
	{p++; goto _out; }
}
	break;
	case 228:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_PIXELDN;
		sym.tok_opcode = TK_PIXELDN;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_PIXELDN;
	}
	{p++; goto _out; }
}
	break;
	case 229:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_PIXELAD;
		sym.tok_opcode = TK_PIXELAD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_PIXELAD;
	}
	{p++; goto _out; }
}
	break;
	case 230:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SETAE;
		sym.tok_opcode = TK_SETAE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SETAE;
	}
	{p++; goto _out; }
}
	break;
	case 231:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_TEST;
		sym.tok_opcode = TK_TEST;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_TEST;
	}
	{p++; goto _out; }
}
	break;
	case 232:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU;
		sym.tok_opcode = TK_MMU;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU;
	}
	{p++; goto _out; }
}
	break;
	case 233:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU0;
		sym.tok_opcode = TK_MMU0;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU0;
	}
	{p++; goto _out; }
}
	break;
	case 234:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU1;
		sym.tok_opcode = TK_MMU1;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU1;
	}
	{p++; goto _out; }
}
	break;
	case 235:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU2;
		sym.tok_opcode = TK_MMU2;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU2;
	}
	{p++; goto _out; }
}
	break;
	case 236:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU3;
		sym.tok_opcode = TK_MMU3;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU3;
	}
	{p++; goto _out; }
}
	break;
	case 237:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU4;
		sym.tok_opcode = TK_MMU4;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU4;
	}
	{p++; goto _out; }
}
	break;
	case 238:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU5;
		sym.tok_opcode = TK_MMU5;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU5;
	}
	{p++; goto _out; }
}
	break;
	case 239:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU6;
		sym.tok_opcode = TK_MMU6;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU6;
	}
	{p++; goto _out; }
}
	break;
	case 240:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MMU7;
		sym.tok_opcode = TK_MMU7;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MMU7;
	}
	{p++; goto _out; }
}
	break;
	case 253:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IN0;
		sym.tok_opcode = TK_IN0;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IN0;
	}
	{p++; goto _out; }
}
	break;
	case 254:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MLT;
		sym.tok_opcode = TK_MLT;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MLT;
	}
	{p++; goto _out; }
}
	break;
	case 255:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OTDM;
		sym.tok_opcode = TK_OTDM;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTDM;
	}
	{p++; goto _out; }
}
	break;
	case 256:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OTDMR;
		sym.tok_opcode = TK_OTDMR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTDMR;
	}
	{p++; goto _out; }
}
	break;
	case 257:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OTIM;
		sym.tok_opcode = TK_OTIM;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTIM;
	}
	{p++; goto _out; }
}
	break;
	case 258:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OTIMR;
		sym.tok_opcode = TK_OTIMR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OTIMR;
	}
	{p++; goto _out; }
}
	break;
	case 259:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_OUT0;
		sym.tok_opcode = TK_OUT0;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_OUT0;
	}
	{p++; goto _out; }
}
	break;
	case 260:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SLP;
		sym.tok_opcode = TK_SLP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SLP;
	}
	{p++; goto _out; }
}
	break;
	case 261:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_TST;
		sym.tok_opcode = TK_TST;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_TST;
	}
	{p++; goto _out; }
}
	break;
	case 262:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_TSTIO;
		sym.tok_opcode = TK_TSTIO;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_TSTIO;
	}
	{p++; goto _out; }
}
	break;
	case 263:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_ALTD;
		sym.tok_opcode = TK_ALTD;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_ALTD;
	}
	{p++; goto _out; }
}
	break;
	case 264:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_BOOL;
		sym.tok_opcode = TK_BOOL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_BOOL;
	}
	{p++; goto _out; }
}
	break;
	case 265:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IDET;
		sym.tok_opcode = TK_IDET;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IDET;
	}
	{p++; goto _out; }
}
	break;
	case 266:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IOE;
		sym.tok_opcode = TK_IOE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IOE;
	}
	{p++; goto _out; }
}
	break;
	case 267:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IOI;
		sym.tok_opcode = TK_IOI;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IOI;
	}
	{p++; goto _out; }
}
	break;
	case 268:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IPRES;
		sym.tok_opcode = TK_IPRES;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IPRES;
	}
	{p++; goto _out; }
}
	break;
	case 269:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_IPSET;
		sym.tok_opcode = TK_IPSET;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_IPSET;
	}
	{p++; goto _out; }
}
	break;
	case 270:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDDSR;
		sym.tok_opcode = TK_LDDSR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDDSR;
	}
	{p++; goto _out; }
}
	break;
	case 271:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDISR;
		sym.tok_opcode = TK_LDISR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDISR;
	}
	{p++; goto _out; }
}
	break;
	case 272:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LDP;
		sym.tok_opcode = TK_LDP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LDP;
	}
	{p++; goto _out; }
}
	break;
	case 273:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LSDR;
		sym.tok_opcode = TK_LSDR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LSDR;
	}
	{p++; goto _out; }
}
	break;
	case 274:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LSIR;
		sym.tok_opcode = TK_LSIR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LSIR;
	}
	{p++; goto _out; }
}
	break;
	case 275:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LSDDR;
		sym.tok_opcode = TK_LSDDR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LSDDR;
	}
	{p++; goto _out; }
}
	break;
	case 276:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_LSIDR;
		sym.tok_opcode = TK_LSIDR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_LSIDR;
	}
	{p++; goto _out; }
}
	break;
	case 277:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_MUL;
		sym.tok_opcode = TK_MUL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_MUL;
	}
	{p++; goto _out; }
}
	break;
	case 278:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_RDMODE;
		sym.tok_opcode = TK_RDMODE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_RDMODE;
	}
	{p++; goto _out; }
}
	break;
	case 279:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SETUSR;
		sym.tok_opcode = TK_SETUSR;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SETUSR;
	}
	{p++; goto _out; }
}
	break;
	case 280:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SURES;
		sym.tok_opcode = TK_SURES;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SURES;
	}
	{p++; goto _out; }
}
	break;
	case 281:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_SYSCALL;
		sym.tok_opcode = TK_SYSCALL;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_SYSCALL;
	}
	{p++; goto _out; }
}
	break;
	case 282:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_UMA;
		sym.tok_opcode = TK_UMA;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_UMA;
	}
	{p++; goto _out; }
}
	break;
	case 283:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_UMS;
		sym.tok_opcode = TK_UMS;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_UMS;
	}
	{p++; goto _out; }
}
	break;
	case 284:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CALL_OZ;
		sym.tok_opcode = TK_CALL_OZ;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CALL_OZ;
	}
	{p++; goto _out; }
}
	break;
	case 285:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_CALL_PKG;
		sym.tok_opcode = TK_CALL_PKG;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_CALL_PKG;
	}
	{p++; goto _out; }
}
	break;
	case 286:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_FPP;
		sym.tok_opcode = TK_FPP;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_FPP;
	}
	{p++; goto _out; }
}
	break;
	case 287:
	{{p = ((te))-1;}
	if (expect_opcode) {
		sym.tok = TK_INVOKE;
		sym.tok_opcode = TK_INVOKE;
		expect_opcode = false;
	}
	else {
		sym.tok = TK_NAME;
		sym.tok_opcode = TK_INVOKE;
	}
	{p++; goto _out; }
}
	break;
	case 290:
	{{p = ((te))-1;}
  sym.tok = TK_NAME;
  {p++; goto _out; }
 }
	break;
	case 292:
	{{p = ((te))-1;}
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts, te - ts, 10 );
  ts = te = p;
  {p++; goto _out; }
 }
	break;
	case 294:
	{{p = ((te))-1;}
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts + 1, te - ts - 1, 16 );
  ts = te = p;
  {p++; goto _out; }
 }
	break;
	case 296:
	{{p = ((te))-1;}
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts, te - ts - 1, 2 );
  ts = te = p;
  {p++; goto _out; }
 }
	break;
	case 298:
	{{p = ((te))-1;}
  sym.tok = TK_NUMBER;
  sym.number = scan_num( ts + 2, te - ts - 2, 2 );
  ts = te = p;
  {p++; goto _out; }
 }
	break;
	case 302:
	{{p = ((te))-1;}
  sym.tok = TK_NIL;
  skip_to_newline();
  ts = te = p;
  {p++; goto _out; }
 }
	break;
	}
	}
	break;
		}
	}
_again:
	_acts = _lexer_actions + _lexer_to_state_actions[cs];
	_nacts = (unsigned int) *_acts++;
	while ( _nacts-- > 0 ) {
		switch ( *_acts++ ) {
	case 0:
	{ts = 0;}
	break;
		}
	}
	if ( cs == 0 )
		goto _out;
	if ( ++p != pe )
		goto _resume;
	_test_eof: {}
	if ( p == ( eof_) )
	{
	if ( _lexer_eof_trans[cs] > 0 ) {
		_trans = _lexer_eof_trans[cs] - 1;
		goto _eof_trans;
	}
	}
	_out: {}
	}
 return sym.tok;
}
